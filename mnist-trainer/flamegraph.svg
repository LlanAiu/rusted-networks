<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="693.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="693.00"> </text><svg id="frames" x="10" width="1180" total_samples="2331"><g><title>`0x26490 (1 samples, 0.04%)</title><rect x="0.0000%" y="645" width="0.0429%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::sgemm_kernel::kernel_target_fma (1 samples, 0.04%)</title><rect x="0.0000%" y="629" width="0.0429%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>`0x7FFB5059600F (1 samples, 0.04%)</title><rect x="0.0429%" y="629" width="0.0429%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2929%" y="639.50"></text></g><g><title>`0x7FFB5059609A (1 samples, 0.04%)</title><rect x="0.0429%" y="613" width="0.0429%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2929%" y="623.50"></text></g><g><title>`0x7FFB505C3D65 (1 samples, 0.04%)</title><rect x="0.0858%" y="597" width="0.0429%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.3358%" y="607.50"></text></g><g><title>`0x7FFB5065FC64 (1 samples, 0.04%)</title><rect x="0.0858%" y="581" width="0.0429%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.3358%" y="591.50"></text></g><g><title>`0x7FFB506C48E4 (1 samples, 0.04%)</title><rect x="0.0858%" y="565" width="0.0429%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.3358%" y="575.50"></text></g><g><title>`0x7FFB505C453C (1 samples, 0.04%)</title><rect x="0.1287%" y="597" width="0.0429%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="1"/><text x="0.3787%" y="607.50"></text></g><g><title>`0x7FFB5058F73E (1 samples, 0.04%)</title><rect x="0.1287%" y="581" width="0.0429%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="1"/><text x="0.3787%" y="591.50"></text></g><g><title>`0x7FFB50590FDA (1 samples, 0.04%)</title><rect x="0.1287%" y="565" width="0.0429%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="0.3787%" y="575.50"></text></g><g><title>`0x7FFB505E7FAF (1 samples, 0.04%)</title><rect x="0.1287%" y="549" width="0.0429%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="0.3787%" y="559.50"></text></g><g><title>`0x7FFB506C2C74 (1 samples, 0.04%)</title><rect x="0.1287%" y="533" width="0.0429%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="0.3787%" y="543.50"></text></g><g><title>`0x7FFB50596273 (1 samples, 0.04%)</title><rect x="0.1716%" y="581" width="0.0429%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="1"/><text x="0.4216%" y="591.50"></text></g><g><title>`0x7FFB50597F4A (1 samples, 0.04%)</title><rect x="0.1716%" y="565" width="0.0429%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="1"/><text x="0.4216%" y="575.50"></text></g><g><title>`0x7FFB5065D62D (1 samples, 0.04%)</title><rect x="0.1716%" y="549" width="0.0429%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="1"/><text x="0.4216%" y="559.50"></text></g><g><title>`0x7FFB5065D6F0 (1 samples, 0.04%)</title><rect x="0.1716%" y="533" width="0.0429%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="1"/><text x="0.4216%" y="543.50"></text></g><g><title>`0x7FFB506C6144 (1 samples, 0.04%)</title><rect x="0.1716%" y="517" width="0.0429%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="1"/><text x="0.4216%" y="527.50"></text></g><g><title>`0x7FFB505C46EB (2 samples, 0.09%)</title><rect x="0.1716%" y="597" width="0.0858%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="2"/><text x="0.4216%" y="607.50"></text></g><g><title>`0x7FFB5059629E (1 samples, 0.04%)</title><rect x="0.2145%" y="581" width="0.0429%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="1"/><text x="0.4645%" y="591.50"></text></g><g><title>`0x7FFB50605F30 (1 samples, 0.04%)</title><rect x="0.2145%" y="565" width="0.0429%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="1"/><text x="0.4645%" y="575.50"></text></g><g><title>`0x7FFB5058F520 (1 samples, 0.04%)</title><rect x="0.2145%" y="549" width="0.0429%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="1"/><text x="0.4645%" y="559.50"></text></g><g><title>`0x7FFB505C4736 (1 samples, 0.04%)</title><rect x="0.2574%" y="597" width="0.0429%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="1"/><text x="0.5074%" y="607.50"></text></g><g><title>`0x7FFB5064D543 (1 samples, 0.04%)</title><rect x="0.2574%" y="581" width="0.0429%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="0.5074%" y="591.50"></text></g><g><title>`0x7FFB50615C9E (1 samples, 0.04%)</title><rect x="0.2574%" y="565" width="0.0429%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="0.5074%" y="575.50"></text></g><g><title>`0x7FFB50617AB4 (1 samples, 0.04%)</title><rect x="0.2574%" y="549" width="0.0429%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="0.5074%" y="559.50"></text></g><g><title>`0x7FFB50618702 (1 samples, 0.04%)</title><rect x="0.2574%" y="533" width="0.0429%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="0.5074%" y="543.50"></text></g><g><title>`0x7FFB5061885A (1 samples, 0.04%)</title><rect x="0.2574%" y="517" width="0.0429%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="1"/><text x="0.5074%" y="527.50"></text></g><g><title>`0x7FFB50618B83 (1 samples, 0.04%)</title><rect x="0.2574%" y="501" width="0.0429%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="1"/><text x="0.5074%" y="511.50"></text></g><g><title>`0x7FFB505C502D (1 samples, 0.04%)</title><rect x="0.3003%" y="597" width="0.0429%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="1"/><text x="0.5503%" y="607.50"></text></g><g><title>`0x7FFB5062B2BF (1 samples, 0.04%)</title><rect x="0.3003%" y="581" width="0.0429%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="1"/><text x="0.5503%" y="591.50"></text></g><g><title>`0x7FFB5062B130 (1 samples, 0.04%)</title><rect x="0.3003%" y="565" width="0.0429%" height="15" fill="rgb(209,103,24)" fg:x="7" fg:w="1"/><text x="0.5503%" y="575.50"></text></g><g><title>`0x7FFB506C2F14 (1 samples, 0.04%)</title><rect x="0.3003%" y="549" width="0.0429%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="1"/><text x="0.5503%" y="559.50"></text></g><g><title>`0x7FFB505CBA6E (1 samples, 0.04%)</title><rect x="0.3432%" y="485" width="0.0429%" height="15" fill="rgb(213,181,19)" fg:x="8" fg:w="1"/><text x="0.5932%" y="495.50"></text></g><g><title>`0x7FFB505CBF3A (1 samples, 0.04%)</title><rect x="0.3432%" y="469" width="0.0429%" height="15" fill="rgb(254,191,54)" fg:x="8" fg:w="1"/><text x="0.5932%" y="479.50"></text></g><g><title>`0x7FFB506C2DB4 (1 samples, 0.04%)</title><rect x="0.3432%" y="453" width="0.0429%" height="15" fill="rgb(241,83,37)" fg:x="8" fg:w="1"/><text x="0.5932%" y="463.50"></text></g><g><title>`0x7FFB5056BC3E (1 samples, 0.04%)</title><rect x="0.3861%" y="453" width="0.0429%" height="15" fill="rgb(233,36,39)" fg:x="9" fg:w="1"/><text x="0.6361%" y="463.50"></text></g><g><title>`0x7FFB505CB5B3 (1 samples, 0.04%)</title><rect x="0.3861%" y="437" width="0.0429%" height="15" fill="rgb(226,3,54)" fg:x="9" fg:w="1"/><text x="0.6361%" y="447.50"></text></g><g><title>`0x7FFB505CB98B (1 samples, 0.04%)</title><rect x="0.3861%" y="421" width="0.0429%" height="15" fill="rgb(245,192,40)" fg:x="9" fg:w="1"/><text x="0.6361%" y="431.50"></text></g><g><title>`0x7FFB505D9696 (1 samples, 0.04%)</title><rect x="0.3861%" y="405" width="0.0429%" height="15" fill="rgb(238,167,29)" fg:x="9" fg:w="1"/><text x="0.6361%" y="415.50"></text></g><g><title>`0x7FFB505D9AF9 (1 samples, 0.04%)</title><rect x="0.3861%" y="389" width="0.0429%" height="15" fill="rgb(232,182,51)" fg:x="9" fg:w="1"/><text x="0.6361%" y="399.50"></text></g><g><title>`0x7FFB50687991 (1 samples, 0.04%)</title><rect x="0.3861%" y="373" width="0.0429%" height="15" fill="rgb(231,60,39)" fg:x="9" fg:w="1"/><text x="0.6361%" y="383.50"></text></g><g><title>`0x7FFB50687A18 (1 samples, 0.04%)</title><rect x="0.3861%" y="357" width="0.0429%" height="15" fill="rgb(208,69,12)" fg:x="9" fg:w="1"/><text x="0.6361%" y="367.50"></text></g><g><title>`0x7FFB5068E47C (1 samples, 0.04%)</title><rect x="0.3861%" y="341" width="0.0429%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="1"/><text x="0.6361%" y="351.50"></text></g><g><title>`0x7FFB5068E7D3 (1 samples, 0.04%)</title><rect x="0.3861%" y="325" width="0.0429%" height="15" fill="rgb(213,116,39)" fg:x="9" fg:w="1"/><text x="0.6361%" y="335.50"></text></g><g><title>`0x7FFB50691204 (1 samples, 0.04%)</title><rect x="0.3861%" y="309" width="0.0429%" height="15" fill="rgb(222,207,29)" fg:x="9" fg:w="1"/><text x="0.6361%" y="319.50"></text></g><g><title>`0x7FFB50569E0E (2 samples, 0.09%)</title><rect x="0.3861%" y="469" width="0.0858%" height="15" fill="rgb(206,96,30)" fg:x="9" fg:w="2"/><text x="0.6361%" y="479.50"></text></g><g><title>`0x7FFB5056C687 (1 samples, 0.04%)</title><rect x="0.4290%" y="453" width="0.0429%" height="15" fill="rgb(218,138,4)" fg:x="10" fg:w="1"/><text x="0.6790%" y="463.50"></text></g><g><title>`0x7FFB5056C77E (1 samples, 0.04%)</title><rect x="0.4290%" y="437" width="0.0429%" height="15" fill="rgb(250,191,14)" fg:x="10" fg:w="1"/><text x="0.6790%" y="447.50"></text></g><g><title>`0x7FFB505B3C8A (1 samples, 0.04%)</title><rect x="0.4719%" y="453" width="0.0429%" height="15" fill="rgb(239,60,40)" fg:x="11" fg:w="1"/><text x="0.7219%" y="463.50"></text></g><g><title>`0x7FFB50568842 (5 samples, 0.21%)</title><rect x="0.3432%" y="533" width="0.2145%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="5"/><text x="0.5932%" y="543.50"></text></g><g><title>`0x7FFB5056D255 (5 samples, 0.21%)</title><rect x="0.3432%" y="517" width="0.2145%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="5"/><text x="0.5932%" y="527.50"></text></g><g><title>`0x7FFB505CB641 (5 samples, 0.21%)</title><rect x="0.3432%" y="501" width="0.2145%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="5"/><text x="0.5932%" y="511.50"></text></g><g><title>`0x7FFB505CBBE8 (4 samples, 0.17%)</title><rect x="0.3861%" y="485" width="0.1716%" height="15" fill="rgb(247,123,22)" fg:x="9" fg:w="4"/><text x="0.6361%" y="495.50"></text></g><g><title>`0x7FFB50569F82 (2 samples, 0.09%)</title><rect x="0.4719%" y="469" width="0.0858%" height="15" fill="rgb(231,138,38)" fg:x="11" fg:w="2"/><text x="0.7219%" y="479.50"></text></g><g><title>`0x7FFB505B3CA2 (1 samples, 0.04%)</title><rect x="0.5148%" y="453" width="0.0429%" height="15" fill="rgb(231,145,46)" fg:x="12" fg:w="1"/><text x="0.7648%" y="463.50"></text></g><g><title>`0x7FFB4DDE8A51 (1 samples, 0.04%)</title><rect x="0.5577%" y="405" width="0.0429%" height="15" fill="rgb(251,118,11)" fg:x="13" fg:w="1"/><text x="0.8077%" y="415.50"></text></g><g><title>`0x7FFB5058FEA8 (1 samples, 0.04%)</title><rect x="0.5577%" y="389" width="0.0429%" height="15" fill="rgb(217,147,25)" fg:x="13" fg:w="1"/><text x="0.8077%" y="399.50"></text></g><g><title>`0x7FFB50590954 (1 samples, 0.04%)</title><rect x="0.5577%" y="373" width="0.0429%" height="15" fill="rgb(247,81,37)" fg:x="13" fg:w="1"/><text x="0.8077%" y="383.50"></text></g><g><title>`0x7FFB506C3D24 (1 samples, 0.04%)</title><rect x="0.5577%" y="357" width="0.0429%" height="15" fill="rgb(209,12,38)" fg:x="13" fg:w="1"/><text x="0.8077%" y="367.50"></text></g><g><title>`0x7FFB4DDE8C5E (1 samples, 0.04%)</title><rect x="0.6006%" y="405" width="0.0429%" height="15" fill="rgb(227,1,9)" fg:x="14" fg:w="1"/><text x="0.8506%" y="415.50"></text></g><g><title>`0x7FFB4DDE73E8 (1 samples, 0.04%)</title><rect x="0.6006%" y="389" width="0.0429%" height="15" fill="rgb(248,47,43)" fg:x="14" fg:w="1"/><text x="0.8506%" y="399.50"></text></g><g><title>`0x7FFB4DDE6B2C (1 samples, 0.04%)</title><rect x="0.6006%" y="373" width="0.0429%" height="15" fill="rgb(221,10,30)" fg:x="14" fg:w="1"/><text x="0.8506%" y="383.50"></text></g><g><title>`0x7FFB4DEC215D (3 samples, 0.13%)</title><rect x="0.5577%" y="421" width="0.1287%" height="15" fill="rgb(210,229,1)" fg:x="13" fg:w="3"/><text x="0.8077%" y="431.50"></text></g><g><title>`0x7FFB4DDE8C9E (1 samples, 0.04%)</title><rect x="0.6435%" y="405" width="0.0429%" height="15" fill="rgb(222,148,37)" fg:x="15" fg:w="1"/><text x="0.8935%" y="415.50"></text></g><g><title>`0x7FFB4DDE6190 (1 samples, 0.04%)</title><rect x="0.6435%" y="389" width="0.0429%" height="15" fill="rgb(234,67,33)" fg:x="15" fg:w="1"/><text x="0.8935%" y="399.50"></text></g><g><title>`0x7FFB4DDE6313 (1 samples, 0.04%)</title><rect x="0.6435%" y="373" width="0.0429%" height="15" fill="rgb(247,98,35)" fg:x="15" fg:w="1"/><text x="0.8935%" y="383.50"></text></g><g><title>`0x7FFB4DDE750B (1 samples, 0.04%)</title><rect x="0.6435%" y="357" width="0.0429%" height="15" fill="rgb(247,138,52)" fg:x="15" fg:w="1"/><text x="0.8935%" y="367.50"></text></g><g><title>`0x7FFB4DDE8F8C (1 samples, 0.04%)</title><rect x="0.6435%" y="341" width="0.0429%" height="15" fill="rgb(213,79,30)" fg:x="15" fg:w="1"/><text x="0.8935%" y="351.50"></text></g><g><title>`0x7FFB506C2994 (1 samples, 0.04%)</title><rect x="0.6435%" y="325" width="0.0429%" height="15" fill="rgb(246,177,23)" fg:x="15" fg:w="1"/><text x="0.8935%" y="335.50"></text></g><g><title>`0x7FFB4DE30C3E (1 samples, 0.04%)</title><rect x="0.6864%" y="405" width="0.0429%" height="15" fill="rgb(230,62,27)" fg:x="16" fg:w="1"/><text x="0.9364%" y="415.50"></text></g><g><title>`0x7FFB50563883 (1 samples, 0.04%)</title><rect x="0.6864%" y="389" width="0.0429%" height="15" fill="rgb(216,154,8)" fg:x="16" fg:w="1"/><text x="0.9364%" y="399.50"></text></g><g><title>`0x7FFB50563A11 (1 samples, 0.04%)</title><rect x="0.6864%" y="373" width="0.0429%" height="15" fill="rgb(244,35,45)" fg:x="16" fg:w="1"/><text x="0.9364%" y="383.50"></text></g><g><title>`0x7FFB50562772 (1 samples, 0.04%)</title><rect x="0.6864%" y="357" width="0.0429%" height="15" fill="rgb(251,115,12)" fg:x="16" fg:w="1"/><text x="0.9364%" y="367.50"></text></g><g><title>`0x7FFB506C6364 (1 samples, 0.04%)</title><rect x="0.6864%" y="341" width="0.0429%" height="15" fill="rgb(240,54,50)" fg:x="16" fg:w="1"/><text x="0.9364%" y="351.50"></text></g><g><title>`0x7FFB4DEC21C1 (2 samples, 0.09%)</title><rect x="0.6864%" y="421" width="0.0858%" height="15" fill="rgb(233,84,52)" fg:x="16" fg:w="2"/><text x="0.9364%" y="431.50"></text></g><g><title>`0x7FFB4DE30DFE (1 samples, 0.04%)</title><rect x="0.7293%" y="405" width="0.0429%" height="15" fill="rgb(207,117,47)" fg:x="17" fg:w="1"/><text x="0.9793%" y="415.50"></text></g><g><title>`0x7FFB4DE316EF (1 samples, 0.04%)</title><rect x="0.7293%" y="389" width="0.0429%" height="15" fill="rgb(249,43,39)" fg:x="17" fg:w="1"/><text x="0.9793%" y="399.50"></text></g><g><title>`0x7FFB4DEB23C2 (1 samples, 0.04%)</title><rect x="0.7293%" y="373" width="0.0429%" height="15" fill="rgb(209,38,44)" fg:x="17" fg:w="1"/><text x="0.9793%" y="383.50"></text></g><g><title>`0x7FFB4DDF8443 (1 samples, 0.04%)</title><rect x="0.7293%" y="357" width="0.0429%" height="15" fill="rgb(236,212,23)" fg:x="17" fg:w="1"/><text x="0.9793%" y="367.50"></text></g><g><title>`0x7FFB4DDF8513 (1 samples, 0.04%)</title><rect x="0.7293%" y="341" width="0.0429%" height="15" fill="rgb(242,79,21)" fg:x="17" fg:w="1"/><text x="0.9793%" y="351.50"></text></g><g><title>`0x7FFB4DDFA60D (1 samples, 0.04%)</title><rect x="0.7293%" y="325" width="0.0429%" height="15" fill="rgb(211,96,35)" fg:x="17" fg:w="1"/><text x="0.9793%" y="335.50"></text></g><g><title>`0x7FFB4DDFC479 (1 samples, 0.04%)</title><rect x="0.7293%" y="309" width="0.0429%" height="15" fill="rgb(253,215,40)" fg:x="17" fg:w="1"/><text x="0.9793%" y="319.50"></text></g><g><title>`0x7FFB506C4F64 (1 samples, 0.04%)</title><rect x="0.7293%" y="293" width="0.0429%" height="15" fill="rgb(211,81,21)" fg:x="17" fg:w="1"/><text x="0.9793%" y="303.50"></text></g><g><title>`0x7FFB4DEC21C8 (1 samples, 0.04%)</title><rect x="0.7722%" y="421" width="0.0429%" height="15" fill="rgb(208,190,38)" fg:x="18" fg:w="1"/><text x="1.0222%" y="431.50"></text></g><g><title>`0x7FFB4DE978B8 (1 samples, 0.04%)</title><rect x="0.7722%" y="405" width="0.0429%" height="15" fill="rgb(235,213,38)" fg:x="18" fg:w="1"/><text x="1.0222%" y="415.50"></text></g><g><title>`0x7FFB4DE979AC (1 samples, 0.04%)</title><rect x="0.7722%" y="389" width="0.0429%" height="15" fill="rgb(237,122,38)" fg:x="18" fg:w="1"/><text x="1.0222%" y="399.50"></text></g><g><title>`0x7FFB4DEC90B7 (1 samples, 0.04%)</title><rect x="0.7722%" y="373" width="0.0429%" height="15" fill="rgb(244,218,35)" fg:x="18" fg:w="1"/><text x="1.0222%" y="383.50"></text></g><g><title>`0x7FFB4DEC90F7 (1 samples, 0.04%)</title><rect x="0.7722%" y="357" width="0.0429%" height="15" fill="rgb(240,68,47)" fg:x="18" fg:w="1"/><text x="1.0222%" y="367.50"></text></g><g><title>`0x7FFB4DEC915F (1 samples, 0.04%)</title><rect x="0.7722%" y="341" width="0.0429%" height="15" fill="rgb(210,16,53)" fg:x="18" fg:w="1"/><text x="1.0222%" y="351.50"></text></g><g><title>`0x7FFB4DEC92A9 (1 samples, 0.04%)</title><rect x="0.7722%" y="325" width="0.0429%" height="15" fill="rgb(235,124,12)" fg:x="18" fg:w="1"/><text x="1.0222%" y="335.50"></text></g><g><title>`0x7FFB4DEF1ADC (1 samples, 0.04%)</title><rect x="0.7722%" y="309" width="0.0429%" height="15" fill="rgb(224,169,11)" fg:x="18" fg:w="1"/><text x="1.0222%" y="319.50"></text></g><g><title>`0x7FFB4DEEB5FB (1 samples, 0.04%)</title><rect x="0.7722%" y="293" width="0.0429%" height="15" fill="rgb(250,166,2)" fg:x="18" fg:w="1"/><text x="1.0222%" y="303.50"></text></g><g><title>`0x7FFB4DEEE822 (1 samples, 0.04%)</title><rect x="0.7722%" y="277" width="0.0429%" height="15" fill="rgb(242,216,29)" fg:x="18" fg:w="1"/><text x="1.0222%" y="287.50"></text></g><g><title>`0x7FFB4DEF2ED4 (1 samples, 0.04%)</title><rect x="0.7722%" y="261" width="0.0429%" height="15" fill="rgb(230,116,27)" fg:x="18" fg:w="1"/><text x="1.0222%" y="271.50"></text></g><g><title>`0x7FFB4DEEDB84 (1 samples, 0.04%)</title><rect x="0.7722%" y="245" width="0.0429%" height="15" fill="rgb(228,99,48)" fg:x="18" fg:w="1"/><text x="1.0222%" y="255.50"></text></g><g><title>`0x7FFB5063B6B4 (12 samples, 0.51%)</title><rect x="0.3432%" y="581" width="0.5148%" height="15" fill="rgb(253,11,6)" fg:x="8" fg:w="12"/><text x="0.5932%" y="591.50"></text></g><g><title>`0x7FFB505B5D80 (12 samples, 0.51%)</title><rect x="0.3432%" y="565" width="0.5148%" height="15" fill="rgb(247,143,39)" fg:x="8" fg:w="12"/><text x="0.5932%" y="575.50"></text></g><g><title>`0x7FFB505684E0 (12 samples, 0.51%)</title><rect x="0.3432%" y="549" width="0.5148%" height="15" fill="rgb(236,97,10)" fg:x="8" fg:w="12"/><text x="0.5932%" y="559.50"></text></g><g><title>`0x7FFB505688D4 (7 samples, 0.30%)</title><rect x="0.5577%" y="533" width="0.3003%" height="15" fill="rgb(233,208,19)" fg:x="13" fg:w="7"/><text x="0.8077%" y="543.50"></text></g><g><title>`0x7FFB5059AE03 (7 samples, 0.30%)</title><rect x="0.5577%" y="517" width="0.3003%" height="15" fill="rgb(216,164,2)" fg:x="13" fg:w="7"/><text x="0.8077%" y="527.50"></text></g><g><title>`0x7FFB5059BCA6 (7 samples, 0.30%)</title><rect x="0.5577%" y="501" width="0.3003%" height="15" fill="rgb(220,129,5)" fg:x="13" fg:w="7"/><text x="0.8077%" y="511.50"></text></g><g><title>`0x7FFB5059BC7A (7 samples, 0.30%)</title><rect x="0.5577%" y="485" width="0.3003%" height="15" fill="rgb(242,17,10)" fg:x="13" fg:w="7"/><text x="0.8077%" y="495.50"></text></g><g><title>`0x7FFB505D196C (7 samples, 0.30%)</title><rect x="0.5577%" y="469" width="0.3003%" height="15" fill="rgb(242,107,0)" fg:x="13" fg:w="7"/><text x="0.8077%" y="479.50"></text></g><g><title>`0x7FFB505D29FE (7 samples, 0.30%)</title><rect x="0.5577%" y="453" width="0.3003%" height="15" fill="rgb(251,28,31)" fg:x="13" fg:w="7"/><text x="0.8077%" y="463.50"></text></g><g><title>`0x7FFB506C0CEE (7 samples, 0.30%)</title><rect x="0.5577%" y="437" width="0.3003%" height="15" fill="rgb(233,223,10)" fg:x="13" fg:w="7"/><text x="0.8077%" y="447.50"></text></g><g><title>`0x7FFB4DEC21E6 (1 samples, 0.04%)</title><rect x="0.8151%" y="421" width="0.0429%" height="15" fill="rgb(215,21,27)" fg:x="19" fg:w="1"/><text x="1.0651%" y="431.50"></text></g><g><title>`0x7FFB4DE3152A (1 samples, 0.04%)</title><rect x="0.8151%" y="405" width="0.0429%" height="15" fill="rgb(232,23,21)" fg:x="19" fg:w="1"/><text x="1.0651%" y="415.50"></text></g><g><title>`0x7FFB4DE315BC (1 samples, 0.04%)</title><rect x="0.8151%" y="389" width="0.0429%" height="15" fill="rgb(244,5,23)" fg:x="19" fg:w="1"/><text x="1.0651%" y="399.50"></text></g><g><title>`0x7FFB50563883 (1 samples, 0.04%)</title><rect x="0.8151%" y="373" width="0.0429%" height="15" fill="rgb(226,81,46)" fg:x="19" fg:w="1"/><text x="1.0651%" y="383.50"></text></g><g><title>`0x7FFB50563A11 (1 samples, 0.04%)</title><rect x="0.8151%" y="357" width="0.0429%" height="15" fill="rgb(247,70,30)" fg:x="19" fg:w="1"/><text x="1.0651%" y="367.50"></text></g><g><title>`0x7FFB50562772 (1 samples, 0.04%)</title><rect x="0.8151%" y="341" width="0.0429%" height="15" fill="rgb(212,68,19)" fg:x="19" fg:w="1"/><text x="1.0651%" y="351.50"></text></g><g><title>`0x7FFB506C6364 (1 samples, 0.04%)</title><rect x="0.8151%" y="325" width="0.0429%" height="15" fill="rgb(240,187,13)" fg:x="19" fg:w="1"/><text x="1.0651%" y="335.50"></text></g><g><title>`0x7FFB5063B729 (1 samples, 0.04%)</title><rect x="0.8580%" y="581" width="0.0429%" height="15" fill="rgb(223,113,26)" fg:x="20" fg:w="1"/><text x="1.1080%" y="591.50"></text></g><g><title>`0x7FFB505CF88C (1 samples, 0.04%)</title><rect x="0.8580%" y="565" width="0.0429%" height="15" fill="rgb(206,192,2)" fg:x="20" fg:w="1"/><text x="1.1080%" y="575.50"></text></g><g><title>`0x7FFB505B7B72 (1 samples, 0.04%)</title><rect x="0.8580%" y="549" width="0.0429%" height="15" fill="rgb(241,108,4)" fg:x="20" fg:w="1"/><text x="1.1080%" y="559.50"></text></g><g><title>`0x7FFB50633F78 (1 samples, 0.04%)</title><rect x="0.8580%" y="533" width="0.0429%" height="15" fill="rgb(247,173,49)" fg:x="20" fg:w="1"/><text x="1.1080%" y="543.50"></text></g><g><title>`0x7FFB505C54BB (14 samples, 0.60%)</title><rect x="0.3432%" y="597" width="0.6006%" height="15" fill="rgb(224,114,35)" fg:x="8" fg:w="14"/><text x="0.5932%" y="607.50"></text></g><g><title>`0x7FFB5063B759 (1 samples, 0.04%)</title><rect x="0.9009%" y="581" width="0.0429%" height="15" fill="rgb(245,159,27)" fg:x="21" fg:w="1"/><text x="1.1509%" y="591.50"></text></g><g><title>`0x7FFB505B510E (1 samples, 0.04%)</title><rect x="0.9009%" y="565" width="0.0429%" height="15" fill="rgb(245,172,44)" fg:x="21" fg:w="1"/><text x="1.1509%" y="575.50"></text></g><g><title>`0x7FFB506C2AF4 (1 samples, 0.04%)</title><rect x="0.9009%" y="549" width="0.0429%" height="15" fill="rgb(236,23,11)" fg:x="21" fg:w="1"/><text x="1.1509%" y="559.50"></text></g><g><title>`0x7FFB50569B5E (1 samples, 0.04%)</title><rect x="0.9438%" y="581" width="0.0429%" height="15" fill="rgb(205,117,38)" fg:x="22" fg:w="1"/><text x="1.1938%" y="591.50"></text></g><g><title>`0x7FFB505A11EB (1 samples, 0.04%)</title><rect x="0.9438%" y="565" width="0.0429%" height="15" fill="rgb(237,72,25)" fg:x="22" fg:w="1"/><text x="1.1938%" y="575.50"></text></g><g><title>`0x7FFB506C32B4 (1 samples, 0.04%)</title><rect x="0.9438%" y="549" width="0.0429%" height="15" fill="rgb(244,70,9)" fg:x="22" fg:w="1"/><text x="1.1938%" y="559.50"></text></g><g><title>`0x7FFB50569BE6 (1 samples, 0.04%)</title><rect x="0.9867%" y="517" width="0.0429%" height="15" fill="rgb(217,125,39)" fg:x="23" fg:w="1"/><text x="1.2367%" y="527.50"></text></g><g><title>`0x7FFB5056A7A5 (1 samples, 0.04%)</title><rect x="1.0296%" y="501" width="0.0429%" height="15" fill="rgb(235,36,10)" fg:x="24" fg:w="1"/><text x="1.2796%" y="511.50"></text></g><g><title>`0x7FFB505B7B72 (1 samples, 0.04%)</title><rect x="1.0296%" y="485" width="0.0429%" height="15" fill="rgb(251,123,47)" fg:x="24" fg:w="1"/><text x="1.2796%" y="495.50"></text></g><g><title>`0x7FFB50633F20 (1 samples, 0.04%)</title><rect x="1.0296%" y="469" width="0.0429%" height="15" fill="rgb(221,13,13)" fg:x="24" fg:w="1"/><text x="1.2796%" y="479.50"></text></g><g><title>`0x7FFB505CC6FD (1 samples, 0.04%)</title><rect x="1.0725%" y="453" width="0.0429%" height="15" fill="rgb(238,131,9)" fg:x="25" fg:w="1"/><text x="1.3225%" y="463.50"></text></g><g><title>`0x7FFB505A14B0 (1 samples, 0.04%)</title><rect x="1.0725%" y="437" width="0.0429%" height="15" fill="rgb(211,50,8)" fg:x="25" fg:w="1"/><text x="1.3225%" y="447.50"></text></g><g><title>`0x7FFB505C55C5 (5 samples, 0.21%)</title><rect x="0.9438%" y="597" width="0.2145%" height="15" fill="rgb(245,182,24)" fg:x="22" fg:w="5"/><text x="1.1938%" y="607.50"></text></g><g><title>`0x7FFB50569E0E (4 samples, 0.17%)</title><rect x="0.9867%" y="581" width="0.1716%" height="15" fill="rgb(242,14,37)" fg:x="23" fg:w="4"/><text x="1.2367%" y="591.50"></text></g><g><title>`0x7FFB5056BC3E (4 samples, 0.17%)</title><rect x="0.9867%" y="565" width="0.1716%" height="15" fill="rgb(246,228,12)" fg:x="23" fg:w="4"/><text x="1.2367%" y="575.50"></text></g><g><title>`0x7FFB505CB641 (4 samples, 0.17%)</title><rect x="0.9867%" y="549" width="0.1716%" height="15" fill="rgb(213,55,15)" fg:x="23" fg:w="4"/><text x="1.2367%" y="559.50"></text></g><g><title>`0x7FFB505CBBE8 (4 samples, 0.17%)</title><rect x="0.9867%" y="533" width="0.1716%" height="15" fill="rgb(209,9,3)" fg:x="23" fg:w="4"/><text x="1.2367%" y="543.50"></text></g><g><title>`0x7FFB50569E0E (3 samples, 0.13%)</title><rect x="1.0296%" y="517" width="0.1287%" height="15" fill="rgb(230,59,30)" fg:x="24" fg:w="3"/><text x="1.2796%" y="527.50"></text></g><g><title>`0x7FFB5056BC3E (2 samples, 0.09%)</title><rect x="1.0725%" y="501" width="0.0858%" height="15" fill="rgb(209,121,21)" fg:x="25" fg:w="2"/><text x="1.3225%" y="511.50"></text></g><g><title>`0x7FFB505CB641 (2 samples, 0.09%)</title><rect x="1.0725%" y="485" width="0.0858%" height="15" fill="rgb(220,109,13)" fg:x="25" fg:w="2"/><text x="1.3225%" y="495.50"></text></g><g><title>`0x7FFB505CBC8C (2 samples, 0.09%)</title><rect x="1.0725%" y="469" width="0.0858%" height="15" fill="rgb(232,18,1)" fg:x="25" fg:w="2"/><text x="1.3225%" y="479.50"></text></g><g><title>`0x7FFB505CC77A (1 samples, 0.04%)</title><rect x="1.1154%" y="453" width="0.0429%" height="15" fill="rgb(215,41,42)" fg:x="26" fg:w="1"/><text x="1.3654%" y="463.50"></text></g><g><title>`0x7FFB505A3E59 (1 samples, 0.04%)</title><rect x="1.1154%" y="437" width="0.0429%" height="15" fill="rgb(224,123,36)" fg:x="26" fg:w="1"/><text x="1.3654%" y="447.50"></text></g><g><title>`0x7FFB505A3994 (1 samples, 0.04%)</title><rect x="1.1154%" y="421" width="0.0429%" height="15" fill="rgb(240,125,3)" fg:x="26" fg:w="1"/><text x="1.3654%" y="431.50"></text></g><g><title>`0x7FFB506C2C34 (1 samples, 0.04%)</title><rect x="1.1154%" y="405" width="0.0429%" height="15" fill="rgb(205,98,50)" fg:x="26" fg:w="1"/><text x="1.3654%" y="415.50"></text></g><g><title>`0x7FFB505CE141 (2 samples, 0.09%)</title><rect x="1.1583%" y="549" width="0.0858%" height="15" fill="rgb(205,185,37)" fg:x="27" fg:w="2"/><text x="1.4083%" y="559.50"></text></g><g><title>`0x7FFB505CE819 (2 samples, 0.09%)</title><rect x="1.1583%" y="533" width="0.0858%" height="15" fill="rgb(238,207,15)" fg:x="27" fg:w="2"/><text x="1.4083%" y="543.50"></text></g><g><title>`0x7FFB505CED70 (2 samples, 0.09%)</title><rect x="1.1583%" y="517" width="0.0858%" height="15" fill="rgb(213,199,42)" fg:x="27" fg:w="2"/><text x="1.4083%" y="527.50"></text></g><g><title>`0x7FFB505CF0A3 (2 samples, 0.09%)</title><rect x="1.1583%" y="501" width="0.0858%" height="15" fill="rgb(235,201,11)" fg:x="27" fg:w="2"/><text x="1.4083%" y="511.50"></text></g><g><title>`0x7FFB506C3054 (2 samples, 0.09%)</title><rect x="1.1583%" y="485" width="0.0858%" height="15" fill="rgb(207,46,11)" fg:x="27" fg:w="2"/><text x="1.4083%" y="495.50"></text></g><g><title>`0x7FFB505DC2AA (3 samples, 0.13%)</title><rect x="1.1583%" y="565" width="0.1287%" height="15" fill="rgb(241,35,35)" fg:x="27" fg:w="3"/><text x="1.4083%" y="575.50"></text></g><g><title>`0x7FFB505CE26C (1 samples, 0.04%)</title><rect x="1.2441%" y="549" width="0.0429%" height="15" fill="rgb(243,32,47)" fg:x="29" fg:w="1"/><text x="1.4941%" y="559.50"></text></g><g><title>`0x7FFB505D068C (1 samples, 0.04%)</title><rect x="1.2441%" y="533" width="0.0429%" height="15" fill="rgb(247,202,23)" fg:x="29" fg:w="1"/><text x="1.4941%" y="543.50"></text></g><g><title>`0x7FFB505CBC8C (1 samples, 0.04%)</title><rect x="1.2441%" y="517" width="0.0429%" height="15" fill="rgb(219,102,11)" fg:x="29" fg:w="1"/><text x="1.4941%" y="527.50"></text></g><g><title>`0x7FFB505CC75B (1 samples, 0.04%)</title><rect x="1.2441%" y="501" width="0.0429%" height="15" fill="rgb(243,110,44)" fg:x="29" fg:w="1"/><text x="1.4941%" y="511.50"></text></g><g><title>`0x7FFB5059FE8D (1 samples, 0.04%)</title><rect x="1.2441%" y="485" width="0.0429%" height="15" fill="rgb(222,74,54)" fg:x="29" fg:w="1"/><text x="1.4941%" y="495.50"></text></g><g><title>`0x7FFB505F1CBB (1 samples, 0.04%)</title><rect x="1.2441%" y="469" width="0.0429%" height="15" fill="rgb(216,99,12)" fg:x="29" fg:w="1"/><text x="1.4941%" y="479.50"></text></g><g><title>`0x7FFB505B3B99 (1 samples, 0.04%)</title><rect x="1.2870%" y="549" width="0.0429%" height="15" fill="rgb(226,22,26)" fg:x="30" fg:w="1"/><text x="1.5370%" y="559.50"></text></g><g><title>`0x7FFB505B3DBD (1 samples, 0.04%)</title><rect x="1.3299%" y="549" width="0.0429%" height="15" fill="rgb(217,163,10)" fg:x="31" fg:w="1"/><text x="1.5799%" y="559.50"></text></g><g><title>`0x7FFB505B3F1F (1 samples, 0.04%)</title><rect x="1.3728%" y="549" width="0.0429%" height="15" fill="rgb(213,25,53)" fg:x="32" fg:w="1"/><text x="1.6228%" y="559.50"></text></g><g><title>`0x7FFB5056A86D (1 samples, 0.04%)</title><rect x="1.3728%" y="533" width="0.0429%" height="15" fill="rgb(252,105,26)" fg:x="32" fg:w="1"/><text x="1.6228%" y="543.50"></text></g><g><title>`0x7FFB5068C66C (1 samples, 0.04%)</title><rect x="1.3728%" y="517" width="0.0429%" height="15" fill="rgb(220,39,43)" fg:x="32" fg:w="1"/><text x="1.6228%" y="527.50"></text></g><g><title>`0x7FFB505C55CD (7 samples, 0.30%)</title><rect x="1.1583%" y="597" width="0.3003%" height="15" fill="rgb(229,68,48)" fg:x="27" fg:w="7"/><text x="1.4083%" y="607.50"></text></g><g><title>`0x7FFB5059CE47 (7 samples, 0.30%)</title><rect x="1.1583%" y="581" width="0.3003%" height="15" fill="rgb(252,8,32)" fg:x="27" fg:w="7"/><text x="1.4083%" y="591.50"></text></g><g><title>`0x7FFB505DC371 (4 samples, 0.17%)</title><rect x="1.2870%" y="565" width="0.1716%" height="15" fill="rgb(223,20,43)" fg:x="30" fg:w="4"/><text x="1.5370%" y="575.50"></text></g><g><title>`0x7FFB505B44A6 (1 samples, 0.04%)</title><rect x="1.4157%" y="549" width="0.0429%" height="15" fill="rgb(229,81,49)" fg:x="33" fg:w="1"/><text x="1.6657%" y="559.50"></text></g><g><title>`0x7FFB505A0063 (1 samples, 0.04%)</title><rect x="1.4157%" y="533" width="0.0429%" height="15" fill="rgb(236,28,36)" fg:x="33" fg:w="1"/><text x="1.6657%" y="543.50"></text></g><g><title>`0x7FFB505A0BB0 (1 samples, 0.04%)</title><rect x="1.4157%" y="517" width="0.0429%" height="15" fill="rgb(249,185,26)" fg:x="33" fg:w="1"/><text x="1.6657%" y="527.50"></text></g><g><title>`0x7FFB505A01D9 (1 samples, 0.04%)</title><rect x="1.4157%" y="501" width="0.0429%" height="15" fill="rgb(249,174,33)" fg:x="33" fg:w="1"/><text x="1.6657%" y="511.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="1.4157%" y="485" width="0.0429%" height="15" fill="rgb(233,201,37)" fg:x="33" fg:w="1"/><text x="1.6657%" y="495.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="1.4157%" y="469" width="0.0429%" height="15" fill="rgb(221,78,26)" fg:x="33" fg:w="1"/><text x="1.6657%" y="479.50"></text></g><g><title>`0x7FFB50570709 (1 samples, 0.04%)</title><rect x="1.4157%" y="453" width="0.0429%" height="15" fill="rgb(250,127,30)" fg:x="33" fg:w="1"/><text x="1.6657%" y="463.50"></text></g><g><title>`0x7FFB505DA1B2 (1 samples, 0.04%)</title><rect x="1.4157%" y="437" width="0.0429%" height="15" fill="rgb(230,49,44)" fg:x="33" fg:w="1"/><text x="1.6657%" y="447.50"></text></g><g><title>`0x7FFB505DAA3F (1 samples, 0.04%)</title><rect x="1.4157%" y="421" width="0.0429%" height="15" fill="rgb(229,67,23)" fg:x="33" fg:w="1"/><text x="1.6657%" y="431.50"></text></g><g><title>`0x7FFB50599778 (1 samples, 0.04%)</title><rect x="1.4157%" y="405" width="0.0429%" height="15" fill="rgb(249,83,47)" fg:x="33" fg:w="1"/><text x="1.6657%" y="415.50"></text></g><g><title>`0x7FFB4D59063F (1 samples, 0.04%)</title><rect x="1.4586%" y="501" width="0.0429%" height="15" fill="rgb(215,43,3)" fg:x="34" fg:w="1"/><text x="1.7086%" y="511.50"></text></g><g><title>`0x7FFB4D58903D (1 samples, 0.04%)</title><rect x="1.4586%" y="485" width="0.0429%" height="15" fill="rgb(238,154,13)" fg:x="34" fg:w="1"/><text x="1.7086%" y="495.50"></text></g><g><title>`0x7FFB4D5891DC (1 samples, 0.04%)</title><rect x="1.4586%" y="469" width="0.0429%" height="15" fill="rgb(219,56,2)" fg:x="34" fg:w="1"/><text x="1.7086%" y="479.50"></text></g><g><title>`0x7FFB50563883 (1 samples, 0.04%)</title><rect x="1.4586%" y="453" width="0.0429%" height="15" fill="rgb(233,0,4)" fg:x="34" fg:w="1"/><text x="1.7086%" y="463.50"></text></g><g><title>`0x7FFB50563A11 (1 samples, 0.04%)</title><rect x="1.4586%" y="437" width="0.0429%" height="15" fill="rgb(235,30,7)" fg:x="34" fg:w="1"/><text x="1.7086%" y="447.50"></text></g><g><title>`0x7FFB50562772 (1 samples, 0.04%)</title><rect x="1.4586%" y="421" width="0.0429%" height="15" fill="rgb(250,79,13)" fg:x="34" fg:w="1"/><text x="1.7086%" y="431.50"></text></g><g><title>`0x7FFB506C6364 (1 samples, 0.04%)</title><rect x="1.4586%" y="405" width="0.0429%" height="15" fill="rgb(211,146,34)" fg:x="34" fg:w="1"/><text x="1.7086%" y="415.50"></text></g><g><title>`0x7FFB5059BC7A (2 samples, 0.09%)</title><rect x="1.4586%" y="565" width="0.0858%" height="15" fill="rgb(228,22,38)" fg:x="34" fg:w="2"/><text x="1.7086%" y="575.50"></text></g><g><title>`0x7FFB505D196C (2 samples, 0.09%)</title><rect x="1.4586%" y="549" width="0.0858%" height="15" fill="rgb(235,168,5)" fg:x="34" fg:w="2"/><text x="1.7086%" y="559.50"></text></g><g><title>`0x7FFB505D29FE (2 samples, 0.09%)</title><rect x="1.4586%" y="533" width="0.0858%" height="15" fill="rgb(221,155,16)" fg:x="34" fg:w="2"/><text x="1.7086%" y="543.50"></text></g><g><title>`0x7FFB506C0CEE (2 samples, 0.09%)</title><rect x="1.4586%" y="517" width="0.0858%" height="15" fill="rgb(215,215,53)" fg:x="34" fg:w="2"/><text x="1.7086%" y="527.50"></text></g><g><title>`0x7FFB4DA78562 (1 samples, 0.04%)</title><rect x="1.5015%" y="501" width="0.0429%" height="15" fill="rgb(223,4,10)" fg:x="35" fg:w="1"/><text x="1.7515%" y="511.50"></text></g><g><title>`0x7FFB4DA787FD (1 samples, 0.04%)</title><rect x="1.5015%" y="485" width="0.0429%" height="15" fill="rgb(234,103,6)" fg:x="35" fg:w="1"/><text x="1.7515%" y="495.50"></text></g><g><title>`0x7FFB4DA7D4EB (1 samples, 0.04%)</title><rect x="1.5015%" y="469" width="0.0429%" height="15" fill="rgb(227,97,0)" fg:x="35" fg:w="1"/><text x="1.7515%" y="479.50"></text></g><g><title>`0x7FFB5056209C (1 samples, 0.04%)</title><rect x="1.5015%" y="453" width="0.0429%" height="15" fill="rgb(234,150,53)" fg:x="35" fg:w="1"/><text x="1.7515%" y="463.50"></text></g><g><title>`0x7FFB505621D2 (1 samples, 0.04%)</title><rect x="1.5015%" y="437" width="0.0429%" height="15" fill="rgb(228,201,54)" fg:x="35" fg:w="1"/><text x="1.7515%" y="447.50"></text></g><g><title>`0x7FFB506C6364 (1 samples, 0.04%)</title><rect x="1.5015%" y="421" width="0.0429%" height="15" fill="rgb(222,22,37)" fg:x="35" fg:w="1"/><text x="1.7515%" y="431.50"></text></g><g><title>`0x7FFB4E1B6E26 (1 samples, 0.04%)</title><rect x="1.5444%" y="485" width="0.0429%" height="15" fill="rgb(237,53,32)" fg:x="36" fg:w="1"/><text x="1.7944%" y="495.50"></text></g><g><title>`0x7FFB4E21AD56 (1 samples, 0.04%)</title><rect x="1.5444%" y="469" width="0.0429%" height="15" fill="rgb(233,25,53)" fg:x="36" fg:w="1"/><text x="1.7944%" y="479.50"></text></g><g><title>`0x7FFB4E1A8D09 (1 samples, 0.04%)</title><rect x="1.5444%" y="453" width="0.0429%" height="15" fill="rgb(210,40,34)" fg:x="36" fg:w="1"/><text x="1.7944%" y="463.50"></text></g><g><title>`0x7FFB4E1A9880 (1 samples, 0.04%)</title><rect x="1.5444%" y="437" width="0.0429%" height="15" fill="rgb(241,220,44)" fg:x="36" fg:w="1"/><text x="1.7944%" y="447.50"></text></g><g><title>`0x7FFB4E1CC386 (1 samples, 0.04%)</title><rect x="1.5444%" y="421" width="0.0429%" height="15" fill="rgb(235,28,35)" fg:x="36" fg:w="1"/><text x="1.7944%" y="431.50"></text></g><g><title>`0x7FFB4E1B00A3 (1 samples, 0.04%)</title><rect x="1.5444%" y="405" width="0.0429%" height="15" fill="rgb(210,56,17)" fg:x="36" fg:w="1"/><text x="1.7944%" y="415.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="1.5444%" y="389" width="0.0429%" height="15" fill="rgb(224,130,29)" fg:x="36" fg:w="1"/><text x="1.7944%" y="399.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="1.5444%" y="373" width="0.0429%" height="15" fill="rgb(235,212,8)" fg:x="36" fg:w="1"/><text x="1.7944%" y="383.50"></text></g><g><title>`0x7FFB5056FA31 (1 samples, 0.04%)</title><rect x="1.5444%" y="357" width="0.0429%" height="15" fill="rgb(223,33,50)" fg:x="36" fg:w="1"/><text x="1.7944%" y="367.50"></text></g><g><title>`0x7FFB4EDB98D9 (1 samples, 0.04%)</title><rect x="1.5873%" y="485" width="0.0429%" height="15" fill="rgb(219,149,13)" fg:x="37" fg:w="1"/><text x="1.8373%" y="495.50"></text></g><g><title>`0x7FFB4EDB97A4 (1 samples, 0.04%)</title><rect x="1.5873%" y="469" width="0.0429%" height="15" fill="rgb(250,156,29)" fg:x="37" fg:w="1"/><text x="1.8373%" y="479.50"></text></g><g><title>`0x7FFB4DE99512 (1 samples, 0.04%)</title><rect x="1.5873%" y="453" width="0.0429%" height="15" fill="rgb(216,193,19)" fg:x="37" fg:w="1"/><text x="1.8373%" y="463.50"></text></g><g><title>`0x7FFB4EDAE2D9 (1 samples, 0.04%)</title><rect x="1.5873%" y="437" width="0.0429%" height="15" fill="rgb(216,135,14)" fg:x="37" fg:w="1"/><text x="1.8373%" y="447.50"></text></g><g><title>`0x7FFB4EDAE330 (1 samples, 0.04%)</title><rect x="1.5873%" y="421" width="0.0429%" height="15" fill="rgb(241,47,5)" fg:x="37" fg:w="1"/><text x="1.8373%" y="431.50"></text></g><g><title>`0x7FFB4EDAE640 (1 samples, 0.04%)</title><rect x="1.5873%" y="405" width="0.0429%" height="15" fill="rgb(233,42,35)" fg:x="37" fg:w="1"/><text x="1.8373%" y="415.50"></text></g><g><title>`0x7FFB4EDAE6C9 (1 samples, 0.04%)</title><rect x="1.5873%" y="389" width="0.0429%" height="15" fill="rgb(231,13,6)" fg:x="37" fg:w="1"/><text x="1.8373%" y="399.50"></text></g><g><title>`0x7FFB4EDFD2AF (1 samples, 0.04%)</title><rect x="1.5873%" y="373" width="0.0429%" height="15" fill="rgb(207,181,40)" fg:x="37" fg:w="1"/><text x="1.8373%" y="383.50"></text></g><g><title>`0x7FFB4F132322 (1 samples, 0.04%)</title><rect x="1.6302%" y="485" width="0.0429%" height="15" fill="rgb(254,173,49)" fg:x="38" fg:w="1"/><text x="1.8802%" y="495.50"></text></g><g><title>`0x7FFB4F132390 (1 samples, 0.04%)</title><rect x="1.6302%" y="469" width="0.0429%" height="15" fill="rgb(221,1,38)" fg:x="38" fg:w="1"/><text x="1.8802%" y="479.50"></text></g><g><title>`0x7FFB4F1383EB (1 samples, 0.04%)</title><rect x="1.6302%" y="453" width="0.0429%" height="15" fill="rgb(206,124,46)" fg:x="38" fg:w="1"/><text x="1.8802%" y="463.50"></text></g><g><title>`0x7FFB5056209C (1 samples, 0.04%)</title><rect x="1.6302%" y="437" width="0.0429%" height="15" fill="rgb(249,21,11)" fg:x="38" fg:w="1"/><text x="1.8802%" y="447.50"></text></g><g><title>`0x7FFB505621D2 (1 samples, 0.04%)</title><rect x="1.6302%" y="421" width="0.0429%" height="15" fill="rgb(222,201,40)" fg:x="38" fg:w="1"/><text x="1.8802%" y="431.50"></text></g><g><title>`0x7FFB506C6364 (1 samples, 0.04%)</title><rect x="1.6302%" y="405" width="0.0429%" height="15" fill="rgb(235,61,29)" fg:x="38" fg:w="1"/><text x="1.8802%" y="415.50"></text></g><g><title>`0x7FFB50595FCE (39 samples, 1.67%)</title><rect x="0.0429%" y="645" width="1.6731%" height="15" fill="rgb(219,207,3)" fg:x="1" fg:w="39"/><text x="0.2929%" y="655.50"></text></g><g><title>`0x7FFB505C367E (38 samples, 1.63%)</title><rect x="0.0858%" y="629" width="1.6302%" height="15" fill="rgb(222,56,46)" fg:x="2" fg:w="38"/><text x="0.3358%" y="639.50"></text></g><g><title>`0x7FFB505C3894 (38 samples, 1.63%)</title><rect x="0.0858%" y="613" width="1.6302%" height="15" fill="rgb(239,76,54)" fg:x="2" fg:w="38"/><text x="0.3358%" y="623.50"></text></g><g><title>`0x7FFB505C56DC (6 samples, 0.26%)</title><rect x="1.4586%" y="597" width="0.2574%" height="15" fill="rgb(231,124,27)" fg:x="34" fg:w="6"/><text x="1.7086%" y="607.50"></text></g><g><title>`0x7FFB5059BCA6 (6 samples, 0.26%)</title><rect x="1.4586%" y="581" width="0.2574%" height="15" fill="rgb(249,195,6)" fg:x="34" fg:w="6"/><text x="1.7086%" y="591.50"></text></g><g><title>`0x7FFB5059BCA6 (4 samples, 0.17%)</title><rect x="1.5444%" y="565" width="0.1716%" height="15" fill="rgb(237,174,47)" fg:x="36" fg:w="4"/><text x="1.7944%" y="575.50"></text></g><g><title>`0x7FFB5059BC7A (4 samples, 0.17%)</title><rect x="1.5444%" y="549" width="0.1716%" height="15" fill="rgb(206,201,31)" fg:x="36" fg:w="4"/><text x="1.7944%" y="559.50"></text></g><g><title>`0x7FFB505D196C (4 samples, 0.17%)</title><rect x="1.5444%" y="533" width="0.1716%" height="15" fill="rgb(231,57,52)" fg:x="36" fg:w="4"/><text x="1.7944%" y="543.50"></text></g><g><title>`0x7FFB505D29FE (4 samples, 0.17%)</title><rect x="1.5444%" y="517" width="0.1716%" height="15" fill="rgb(248,177,22)" fg:x="36" fg:w="4"/><text x="1.7944%" y="527.50"></text></g><g><title>`0x7FFB506C0CEE (4 samples, 0.17%)</title><rect x="1.5444%" y="501" width="0.1716%" height="15" fill="rgb(215,211,37)" fg:x="36" fg:w="4"/><text x="1.7944%" y="511.50"></text></g><g><title>`0x7FFB4F787A70 (1 samples, 0.04%)</title><rect x="1.6731%" y="485" width="0.0429%" height="15" fill="rgb(241,128,51)" fg:x="39" fg:w="1"/><text x="1.9231%" y="495.50"></text></g><g><title>`0x7FFB4F79DD57 (1 samples, 0.04%)</title><rect x="1.6731%" y="469" width="0.0429%" height="15" fill="rgb(227,165,31)" fg:x="39" fg:w="1"/><text x="1.9231%" y="479.50"></text></g><g><title>`0x7FFB4DE912E0 (1 samples, 0.04%)</title><rect x="1.6731%" y="453" width="0.0429%" height="15" fill="rgb(228,167,24)" fg:x="39" fg:w="1"/><text x="1.9231%" y="463.50"></text></g><g><title>`0x7FFB5059C320 (1 samples, 0.04%)</title><rect x="1.7160%" y="645" width="0.0429%" height="15" fill="rgb(228,143,12)" fg:x="40" fg:w="1"/><text x="1.9660%" y="655.50"></text></g><g><title>`0x7FFB505F22F8 (1 samples, 0.04%)</title><rect x="1.7589%" y="613" width="0.0429%" height="15" fill="rgb(249,149,8)" fg:x="41" fg:w="1"/><text x="2.0089%" y="623.50"></text></g><g><title>`0x7FFB50655B61 (1 samples, 0.04%)</title><rect x="1.7589%" y="597" width="0.0429%" height="15" fill="rgb(243,35,44)" fg:x="41" fg:w="1"/><text x="2.0089%" y="607.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="1.7589%" y="581" width="0.0429%" height="15" fill="rgb(246,89,9)" fg:x="41" fg:w="1"/><text x="2.0089%" y="591.50"></text></g><g><title>`0x7FFB5056F591 (1 samples, 0.04%)</title><rect x="1.7589%" y="565" width="0.0429%" height="15" fill="rgb(233,213,13)" fg:x="41" fg:w="1"/><text x="2.0089%" y="575.50"></text></g><g><title>`0x7FFB505A62AA (1 samples, 0.04%)</title><rect x="1.7589%" y="549" width="0.0429%" height="15" fill="rgb(233,141,41)" fg:x="41" fg:w="1"/><text x="2.0089%" y="559.50"></text></g><g><title>`0x7FFB505CE141 (1 samples, 0.04%)</title><rect x="1.8018%" y="565" width="0.0429%" height="15" fill="rgb(239,167,4)" fg:x="42" fg:w="1"/><text x="2.0518%" y="575.50"></text></g><g><title>`0x7FFB505CE819 (1 samples, 0.04%)</title><rect x="1.8018%" y="549" width="0.0429%" height="15" fill="rgb(209,217,16)" fg:x="42" fg:w="1"/><text x="2.0518%" y="559.50"></text></g><g><title>`0x7FFB505CED70 (1 samples, 0.04%)</title><rect x="1.8018%" y="533" width="0.0429%" height="15" fill="rgb(219,88,35)" fg:x="42" fg:w="1"/><text x="2.0518%" y="543.50"></text></g><g><title>`0x7FFB505CF0A3 (1 samples, 0.04%)</title><rect x="1.8018%" y="517" width="0.0429%" height="15" fill="rgb(220,193,23)" fg:x="42" fg:w="1"/><text x="2.0518%" y="527.50"></text></g><g><title>`0x7FFB506C3054 (1 samples, 0.04%)</title><rect x="1.8018%" y="501" width="0.0429%" height="15" fill="rgb(230,90,52)" fg:x="42" fg:w="1"/><text x="2.0518%" y="511.50"></text></g><g><title>`0x7FFB505DC2AA (2 samples, 0.09%)</title><rect x="1.8018%" y="581" width="0.0858%" height="15" fill="rgb(252,106,19)" fg:x="42" fg:w="2"/><text x="2.0518%" y="591.50"></text></g><g><title>`0x7FFB505CE26C (1 samples, 0.04%)</title><rect x="1.8447%" y="565" width="0.0429%" height="15" fill="rgb(206,74,20)" fg:x="43" fg:w="1"/><text x="2.0947%" y="575.50"></text></g><g><title>`0x7FFB505D06A9 (1 samples, 0.04%)</title><rect x="1.8447%" y="549" width="0.0429%" height="15" fill="rgb(230,138,44)" fg:x="43" fg:w="1"/><text x="2.0947%" y="559.50"></text></g><g><title>`0x7FFB506C2A94 (1 samples, 0.04%)</title><rect x="1.8447%" y="533" width="0.0429%" height="15" fill="rgb(235,182,43)" fg:x="43" fg:w="1"/><text x="2.0947%" y="543.50"></text></g><g><title>`0x7FFB505B3C8A (1 samples, 0.04%)</title><rect x="1.8876%" y="565" width="0.0429%" height="15" fill="rgb(242,16,51)" fg:x="44" fg:w="1"/><text x="2.1376%" y="575.50"></text></g><g><title>`0x7FFB505B3CDF (1 samples, 0.04%)</title><rect x="1.9305%" y="565" width="0.0429%" height="15" fill="rgb(248,9,4)" fg:x="45" fg:w="1"/><text x="2.1805%" y="575.50"></text></g><g><title>`0x7FFB505F2A21 (5 samples, 0.21%)</title><rect x="1.8018%" y="613" width="0.2145%" height="15" fill="rgb(210,31,22)" fg:x="42" fg:w="5"/><text x="2.0518%" y="623.50"></text></g><g><title>`0x7FFB505DB430 (5 samples, 0.21%)</title><rect x="1.8018%" y="597" width="0.2145%" height="15" fill="rgb(239,54,39)" fg:x="42" fg:w="5"/><text x="2.0518%" y="607.50"></text></g><g><title>`0x7FFB505DC371 (3 samples, 0.13%)</title><rect x="1.8876%" y="581" width="0.1287%" height="15" fill="rgb(230,99,41)" fg:x="44" fg:w="3"/><text x="2.1376%" y="591.50"></text></g><g><title>`0x7FFB505B3D77 (1 samples, 0.04%)</title><rect x="1.9734%" y="565" width="0.0429%" height="15" fill="rgb(253,106,12)" fg:x="46" fg:w="1"/><text x="2.2234%" y="575.50"></text></g><g><title>`0x7FFB4E20E716 (1 samples, 0.04%)</title><rect x="2.0163%" y="597" width="0.0429%" height="15" fill="rgb(213,46,41)" fg:x="47" fg:w="1"/><text x="2.2663%" y="607.50"></text></g><g><title>mnist-trainer.exe`pre_cpp_initialization() (1 samples, 0.04%)</title><rect x="2.0163%" y="581" width="0.0429%" height="15" fill="rgb(215,133,35)" fg:x="47" fg:w="1"/><text x="2.2663%" y="591.50"></text></g><g><title>`0x7FFB4DE906B8 (1 samples, 0.04%)</title><rect x="2.0163%" y="565" width="0.0429%" height="15" fill="rgb(213,28,5)" fg:x="47" fg:w="1"/><text x="2.2663%" y="575.50"></text></g><g><title>`0x7FFB4DE9086B (1 samples, 0.04%)</title><rect x="2.0163%" y="549" width="0.0429%" height="15" fill="rgb(215,77,49)" fg:x="47" fg:w="1"/><text x="2.2663%" y="559.50"></text></g><g><title>`0x7FFB506C2D14 (1 samples, 0.04%)</title><rect x="2.0163%" y="533" width="0.0429%" height="15" fill="rgb(248,100,22)" fg:x="47" fg:w="1"/><text x="2.2663%" y="543.50"></text></g><g><title>`0x7FFB50568793 (1 samples, 0.04%)</title><rect x="2.0592%" y="485" width="0.0429%" height="15" fill="rgb(208,67,9)" fg:x="48" fg:w="1"/><text x="2.3092%" y="495.50"></text></g><g><title>`0x7FFB505D9696 (1 samples, 0.04%)</title><rect x="2.0592%" y="469" width="0.0429%" height="15" fill="rgb(219,133,21)" fg:x="48" fg:w="1"/><text x="2.3092%" y="479.50"></text></g><g><title>`0x7FFB505D9AF9 (1 samples, 0.04%)</title><rect x="2.0592%" y="453" width="0.0429%" height="15" fill="rgb(246,46,29)" fg:x="48" fg:w="1"/><text x="2.3092%" y="463.50"></text></g><g><title>`0x7FFB50687991 (1 samples, 0.04%)</title><rect x="2.0592%" y="437" width="0.0429%" height="15" fill="rgb(246,185,52)" fg:x="48" fg:w="1"/><text x="2.3092%" y="447.50"></text></g><g><title>`0x7FFB50687A18 (1 samples, 0.04%)</title><rect x="2.0592%" y="421" width="0.0429%" height="15" fill="rgb(252,136,11)" fg:x="48" fg:w="1"/><text x="2.3092%" y="431.50"></text></g><g><title>`0x7FFB5068E44F (1 samples, 0.04%)</title><rect x="2.0592%" y="405" width="0.0429%" height="15" fill="rgb(219,138,53)" fg:x="48" fg:w="1"/><text x="2.3092%" y="415.50"></text></g><g><title>`0x7FFB50691259 (1 samples, 0.04%)</title><rect x="2.0592%" y="389" width="0.0429%" height="15" fill="rgb(211,51,23)" fg:x="48" fg:w="1"/><text x="2.3092%" y="399.50"></text></g><g><title>`0x7FFB5063A62E (1 samples, 0.04%)</title><rect x="2.0592%" y="373" width="0.0429%" height="15" fill="rgb(247,221,28)" fg:x="48" fg:w="1"/><text x="2.3092%" y="383.50"></text></g><g><title>`0x7FFB505D0537 (1 samples, 0.04%)</title><rect x="2.1021%" y="437" width="0.0429%" height="15" fill="rgb(251,222,45)" fg:x="49" fg:w="1"/><text x="2.3521%" y="447.50"></text></g><g><title>`0x7FFB506C2F14 (1 samples, 0.04%)</title><rect x="2.1021%" y="421" width="0.0429%" height="15" fill="rgb(217,162,53)" fg:x="49" fg:w="1"/><text x="2.3521%" y="431.50"></text></g><g><title>`0x7FFB4E240046 (3 samples, 0.13%)</title><rect x="2.0592%" y="597" width="0.1287%" height="15" fill="rgb(229,93,14)" fg:x="48" fg:w="3"/><text x="2.3092%" y="607.50"></text></g><g><title>`0x7FFB4E22553D (3 samples, 0.13%)</title><rect x="2.0592%" y="581" width="0.1287%" height="15" fill="rgb(209,67,49)" fg:x="48" fg:w="3"/><text x="2.3092%" y="591.50"></text></g><g><title>`0x7FFB4E1B423B (3 samples, 0.13%)</title><rect x="2.0592%" y="565" width="0.1287%" height="15" fill="rgb(213,87,29)" fg:x="48" fg:w="3"/><text x="2.3092%" y="575.50"></text></g><g><title>`0x7FFB4E216225 (3 samples, 0.13%)</title><rect x="2.0592%" y="549" width="0.1287%" height="15" fill="rgb(205,151,52)" fg:x="48" fg:w="3"/><text x="2.3092%" y="559.50"></text></g><g><title>`0x7FFB4DDB2AC6 (3 samples, 0.13%)</title><rect x="2.0592%" y="533" width="0.1287%" height="15" fill="rgb(253,215,39)" fg:x="48" fg:w="3"/><text x="2.3092%" y="543.50"></text></g><g><title>`0x7FFB505B5D80 (3 samples, 0.13%)</title><rect x="2.0592%" y="517" width="0.1287%" height="15" fill="rgb(221,220,41)" fg:x="48" fg:w="3"/><text x="2.3092%" y="527.50"></text></g><g><title>`0x7FFB505684E0 (3 samples, 0.13%)</title><rect x="2.0592%" y="501" width="0.1287%" height="15" fill="rgb(218,133,21)" fg:x="48" fg:w="3"/><text x="2.3092%" y="511.50"></text></g><g><title>`0x7FFB50568860 (2 samples, 0.09%)</title><rect x="2.1021%" y="485" width="0.0858%" height="15" fill="rgb(221,193,43)" fg:x="49" fg:w="2"/><text x="2.3521%" y="495.50"></text></g><g><title>`0x7FFB505DC384 (2 samples, 0.09%)</title><rect x="2.1021%" y="469" width="0.0858%" height="15" fill="rgb(240,128,52)" fg:x="49" fg:w="2"/><text x="2.3521%" y="479.50"></text></g><g><title>`0x7FFB505CE55D (2 samples, 0.09%)</title><rect x="2.1021%" y="453" width="0.0858%" height="15" fill="rgb(253,114,12)" fg:x="49" fg:w="2"/><text x="2.3521%" y="463.50"></text></g><g><title>`0x7FFB505D068C (1 samples, 0.04%)</title><rect x="2.1450%" y="437" width="0.0429%" height="15" fill="rgb(215,223,47)" fg:x="50" fg:w="1"/><text x="2.3950%" y="447.50"></text></g><g><title>`0x7FFB505CBC8C (1 samples, 0.04%)</title><rect x="2.1450%" y="421" width="0.0429%" height="15" fill="rgb(248,225,23)" fg:x="50" fg:w="1"/><text x="2.3950%" y="431.50"></text></g><g><title>`0x7FFB505CC77A (1 samples, 0.04%)</title><rect x="2.1450%" y="405" width="0.0429%" height="15" fill="rgb(250,108,0)" fg:x="50" fg:w="1"/><text x="2.3950%" y="415.50"></text></g><g><title>`0x7FFB505A3E59 (1 samples, 0.04%)</title><rect x="2.1450%" y="389" width="0.0429%" height="15" fill="rgb(228,208,7)" fg:x="50" fg:w="1"/><text x="2.3950%" y="399.50"></text></g><g><title>`0x7FFB505A3A97 (1 samples, 0.04%)</title><rect x="2.1450%" y="373" width="0.0429%" height="15" fill="rgb(244,45,10)" fg:x="50" fg:w="1"/><text x="2.3950%" y="383.50"></text></g><g><title>`0x7FFB5059FD02 (1 samples, 0.04%)</title><rect x="2.1450%" y="357" width="0.0429%" height="15" fill="rgb(207,125,25)" fg:x="50" fg:w="1"/><text x="2.3950%" y="367.50"></text></g><g><title>`0x7FFB5059FDB6 (1 samples, 0.04%)</title><rect x="2.1450%" y="341" width="0.0429%" height="15" fill="rgb(210,195,18)" fg:x="50" fg:w="1"/><text x="2.3950%" y="351.50"></text></g><g><title>`0x7FFB506C32A0 (1 samples, 0.04%)</title><rect x="2.1450%" y="325" width="0.0429%" height="15" fill="rgb(249,80,12)" fg:x="50" fg:w="1"/><text x="2.3950%" y="335.50"></text></g><g><title>`0x7FFB4DA785D7 (1 samples, 0.04%)</title><rect x="2.1879%" y="501" width="0.0429%" height="15" fill="rgb(221,65,9)" fg:x="51" fg:w="1"/><text x="2.4379%" y="511.50"></text></g><g><title>`0x7FFB4DA78E06 (1 samples, 0.04%)</title><rect x="2.1879%" y="485" width="0.0429%" height="15" fill="rgb(235,49,36)" fg:x="51" fg:w="1"/><text x="2.4379%" y="495.50"></text></g><g><title>`0x7FFB4DA78EA4 (1 samples, 0.04%)</title><rect x="2.1879%" y="469" width="0.0429%" height="15" fill="rgb(225,32,20)" fg:x="51" fg:w="1"/><text x="2.4379%" y="479.50"></text></g><g><title>`0x7FFB4DE16249 (1 samples, 0.04%)</title><rect x="2.1879%" y="453" width="0.0429%" height="15" fill="rgb(215,141,46)" fg:x="51" fg:w="1"/><text x="2.4379%" y="463.50"></text></g><g><title>`0x7FFB506C2A94 (1 samples, 0.04%)</title><rect x="2.1879%" y="437" width="0.0429%" height="15" fill="rgb(250,160,47)" fg:x="51" fg:w="1"/><text x="2.4379%" y="447.50"></text></g><g><title>`0x7FFB4E240093 (2 samples, 0.09%)</title><rect x="2.1879%" y="597" width="0.0858%" height="15" fill="rgb(216,222,40)" fg:x="51" fg:w="2"/><text x="2.4379%" y="607.50"></text></g><g><title>`0x7FFB4F6F18AB (2 samples, 0.09%)</title><rect x="2.1879%" y="581" width="0.0858%" height="15" fill="rgb(234,217,39)" fg:x="51" fg:w="2"/><text x="2.4379%" y="591.50"></text></g><g><title>`0x7FFB5059C504 (2 samples, 0.09%)</title><rect x="2.1879%" y="565" width="0.0858%" height="15" fill="rgb(207,178,40)" fg:x="51" fg:w="2"/><text x="2.4379%" y="575.50"></text></g><g><title>`0x7FFB5059DC2F (2 samples, 0.09%)</title><rect x="2.1879%" y="549" width="0.0858%" height="15" fill="rgb(221,136,13)" fg:x="51" fg:w="2"/><text x="2.4379%" y="559.50"></text></g><g><title>`0x7FFB505D29FE (2 samples, 0.09%)</title><rect x="2.1879%" y="533" width="0.0858%" height="15" fill="rgb(249,199,10)" fg:x="51" fg:w="2"/><text x="2.4379%" y="543.50"></text></g><g><title>`0x7FFB506C0CEE (2 samples, 0.09%)</title><rect x="2.1879%" y="517" width="0.0858%" height="15" fill="rgb(249,222,13)" fg:x="51" fg:w="2"/><text x="2.4379%" y="527.50"></text></g><g><title>`0x7FFB4DEC2246 (1 samples, 0.04%)</title><rect x="2.2308%" y="501" width="0.0429%" height="15" fill="rgb(244,185,38)" fg:x="52" fg:w="1"/><text x="2.4808%" y="511.50"></text></g><g><title>`0x7FFB4DE30E80 (1 samples, 0.04%)</title><rect x="2.2308%" y="485" width="0.0429%" height="15" fill="rgb(236,202,9)" fg:x="52" fg:w="1"/><text x="2.4808%" y="495.50"></text></g><g><title>`0x7FFB4DE312FF (1 samples, 0.04%)</title><rect x="2.2308%" y="469" width="0.0429%" height="15" fill="rgb(250,229,37)" fg:x="52" fg:w="1"/><text x="2.4808%" y="479.50"></text></g><g><title>`0x7FFB4DE32BEC (1 samples, 0.04%)</title><rect x="2.2308%" y="453" width="0.0429%" height="15" fill="rgb(206,174,23)" fg:x="52" fg:w="1"/><text x="2.4808%" y="463.50"></text></g><g><title>`0x7FFB4DDF9A05 (1 samples, 0.04%)</title><rect x="2.2308%" y="437" width="0.0429%" height="15" fill="rgb(211,33,43)" fg:x="52" fg:w="1"/><text x="2.4808%" y="447.50"></text></g><g><title>`0x7FFB4DDF9B26 (1 samples, 0.04%)</title><rect x="2.2308%" y="421" width="0.0429%" height="15" fill="rgb(245,58,50)" fg:x="52" fg:w="1"/><text x="2.4808%" y="431.50"></text></g><g><title>`0x7FFB4DE3235E (1 samples, 0.04%)</title><rect x="2.2308%" y="405" width="0.0429%" height="15" fill="rgb(244,68,36)" fg:x="52" fg:w="1"/><text x="2.4808%" y="415.50"></text></g><g><title>`0x7FFB4DE3182A (1 samples, 0.04%)</title><rect x="2.2308%" y="389" width="0.0429%" height="15" fill="rgb(232,229,15)" fg:x="52" fg:w="1"/><text x="2.4808%" y="399.50"></text></g><g><title>`0x7FFB4DDF937C (1 samples, 0.04%)</title><rect x="2.2308%" y="373" width="0.0429%" height="15" fill="rgb(254,30,23)" fg:x="52" fg:w="1"/><text x="2.4808%" y="383.50"></text></g><g><title>`0x7FFB4DDF998F (1 samples, 0.04%)</title><rect x="2.2308%" y="357" width="0.0429%" height="15" fill="rgb(235,160,14)" fg:x="52" fg:w="1"/><text x="2.4808%" y="367.50"></text></g><g><title>`0x7FFB4DEAD99B (1 samples, 0.04%)</title><rect x="2.2308%" y="341" width="0.0429%" height="15" fill="rgb(212,155,44)" fg:x="52" fg:w="1"/><text x="2.4808%" y="351.50"></text></g><g><title>`0x7FFB4DEAC095 (1 samples, 0.04%)</title><rect x="2.2308%" y="325" width="0.0429%" height="15" fill="rgb(226,2,50)" fg:x="52" fg:w="1"/><text x="2.4808%" y="335.50"></text></g><g><title>`0x7FFB4DDF8C51 (1 samples, 0.04%)</title><rect x="2.2308%" y="309" width="0.0429%" height="15" fill="rgb(234,177,6)" fg:x="52" fg:w="1"/><text x="2.4808%" y="319.50"></text></g><g><title>`0x7FFB4DDF8E1B (1 samples, 0.04%)</title><rect x="2.2308%" y="293" width="0.0429%" height="15" fill="rgb(217,24,9)" fg:x="52" fg:w="1"/><text x="2.4808%" y="303.50"></text></g><g><title>`0x7FFB4DDF9701 (1 samples, 0.04%)</title><rect x="2.2308%" y="277" width="0.0429%" height="15" fill="rgb(220,13,46)" fg:x="52" fg:w="1"/><text x="2.4808%" y="287.50"></text></g><g><title>`0x7FFB4DDF905D (1 samples, 0.04%)</title><rect x="2.2308%" y="261" width="0.0429%" height="15" fill="rgb(239,221,27)" fg:x="52" fg:w="1"/><text x="2.4808%" y="271.50"></text></g><g><title>`0x7FFB506C8315 (1 samples, 0.04%)</title><rect x="2.2308%" y="245" width="0.0429%" height="15" fill="rgb(222,198,25)" fg:x="52" fg:w="1"/><text x="2.4808%" y="255.50"></text></g><g><title>mnist-trainer.exe`Unknown (1 samples, 0.04%)</title><rect x="2.2737%" y="437" width="0.0429%" height="15" fill="rgb(211,99,13)" fg:x="53" fg:w="1"/><text x="2.5237%" y="447.50"></text></g><g><title>`0x7FFB505F58C8 (1 samples, 0.04%)</title><rect x="2.2737%" y="421" width="0.0429%" height="15" fill="rgb(232,111,31)" fg:x="53" fg:w="1"/><text x="2.5237%" y="431.50"></text></g><g><title>`0x7FFB50572974 (1 samples, 0.04%)</title><rect x="2.2737%" y="405" width="0.0429%" height="15" fill="rgb(245,82,37)" fg:x="53" fg:w="1"/><text x="2.5237%" y="415.50"></text></g><g><title>`0x7FFB505F5960 (1 samples, 0.04%)</title><rect x="2.2737%" y="389" width="0.0429%" height="15" fill="rgb(227,149,46)" fg:x="53" fg:w="1"/><text x="2.5237%" y="399.50"></text></g><g><title>`0x7FFB505749D6 (1 samples, 0.04%)</title><rect x="2.2737%" y="373" width="0.0429%" height="15" fill="rgb(218,36,50)" fg:x="53" fg:w="1"/><text x="2.5237%" y="383.50"></text></g><g><title>`0x7FFB50589B68 (1 samples, 0.04%)</title><rect x="2.2737%" y="357" width="0.0429%" height="15" fill="rgb(226,80,48)" fg:x="53" fg:w="1"/><text x="2.5237%" y="367.50"></text></g><g><title>`0x7FFB5057801E (1 samples, 0.04%)</title><rect x="2.2737%" y="341" width="0.0429%" height="15" fill="rgb(238,224,15)" fg:x="53" fg:w="1"/><text x="2.5237%" y="351.50"></text></g><g><title>`0x7FFB5064B449 (1 samples, 0.04%)</title><rect x="2.2737%" y="325" width="0.0429%" height="15" fill="rgb(241,136,10)" fg:x="53" fg:w="1"/><text x="2.5237%" y="335.50"></text></g><g><title>`0x7FFB506C2C74 (1 samples, 0.04%)</title><rect x="2.2737%" y="309" width="0.0429%" height="15" fill="rgb(208,32,45)" fg:x="53" fg:w="1"/><text x="2.5237%" y="319.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::RawVecInner (1 samples, 0.04%)</title><rect x="2.3595%" y="405" width="0.0429%" height="15" fill="rgb(207,135,9)" fg:x="55" fg:w="1"/><text x="2.6095%" y="415.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="2.3595%" y="389" width="0.0429%" height="15" fill="rgb(206,86,44)" fg:x="55" fg:w="1"/><text x="2.6095%" y="399.50"></text></g><g><title>`0x7FFB505A8F8D (1 samples, 0.04%)</title><rect x="2.3595%" y="373" width="0.0429%" height="15" fill="rgb(245,177,15)" fg:x="55" fg:w="1"/><text x="2.6095%" y="383.50"></text></g><g><title>`0x7FFB505A9235 (1 samples, 0.04%)</title><rect x="2.3595%" y="357" width="0.0429%" height="15" fill="rgb(206,64,50)" fg:x="55" fg:w="1"/><text x="2.6095%" y="367.50"></text></g><g><title>`0x7FFB505AA07D (1 samples, 0.04%)</title><rect x="2.3595%" y="341" width="0.0429%" height="15" fill="rgb(234,36,40)" fg:x="55" fg:w="1"/><text x="2.6095%" y="351.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="2.3595%" y="325" width="0.0429%" height="15" fill="rgb(213,64,8)" fg:x="55" fg:w="1"/><text x="2.6095%" y="335.50"></text></g><g><title>`0x7FFB5056F591 (1 samples, 0.04%)</title><rect x="2.3595%" y="309" width="0.0429%" height="15" fill="rgb(210,75,36)" fg:x="55" fg:w="1"/><text x="2.6095%" y="319.50"></text></g><g><title>`0x7FFB505A5B10 (1 samples, 0.04%)</title><rect x="2.3595%" y="293" width="0.0429%" height="15" fill="rgb(229,88,21)" fg:x="55" fg:w="1"/><text x="2.6095%" y="303.50"></text></g><g><title>mnist-trainer.exe`&lt;&amp;mut csv::deserializer::DeRecordWrap (6 samples, 0.26%)</title><rect x="2.4453%" y="373" width="0.2574%" height="15" fill="rgb(252,204,47)" fg:x="57" fg:w="6"/><text x="2.6953%" y="383.50"></text></g><g><title>`0x7FFB5056FFFF (1 samples, 0.04%)</title><rect x="2.7027%" y="165" width="0.0429%" height="15" fill="rgb(208,77,27)" fg:x="63" fg:w="1"/><text x="2.9527%" y="175.50"></text></g><g><title>mnist-trainer.exe`csv::deserializer::deserialize_string_record (9 samples, 0.39%)</title><rect x="2.4024%" y="405" width="0.3861%" height="15" fill="rgb(221,76,26)" fg:x="56" fg:w="9"/><text x="2.6524%" y="415.50"></text></g><g><title>mnist-trainer.exe`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor (9 samples, 0.39%)</title><rect x="2.4024%" y="389" width="0.3861%" height="15" fill="rgb(225,139,18)" fg:x="56" fg:w="9"/><text x="2.6524%" y="399.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::RawVec::grow_one&lt;u16,alloc::alloc::Global&gt; (2 samples, 0.09%)</title><rect x="2.7027%" y="373" width="0.0858%" height="15" fill="rgb(230,137,11)" fg:x="63" fg:w="2"/><text x="2.9527%" y="383.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::RawVecInner::grow_one (2 samples, 0.09%)</title><rect x="2.7027%" y="357" width="0.0858%" height="15" fill="rgb(212,28,1)" fg:x="63" fg:w="2"/><text x="2.9527%" y="367.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::RawVecInner::grow_amortized (2 samples, 0.09%)</title><rect x="2.7027%" y="341" width="0.0858%" height="15" fill="rgb(248,164,17)" fg:x="63" fg:w="2"/><text x="2.9527%" y="351.50"></text></g><g><title>mnist-trainer.exe`core::result::impl$27::branch (2 samples, 0.09%)</title><rect x="2.7027%" y="325" width="0.0858%" height="15" fill="rgb(222,171,42)" fg:x="63" fg:w="2"/><text x="2.9527%" y="335.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (2 samples, 0.09%)</title><rect x="2.7027%" y="309" width="0.0858%" height="15" fill="rgb(243,84,45)" fg:x="63" fg:w="2"/><text x="2.9527%" y="319.50"></text></g><g><title>mnist-trainer.exe`alloc::alloc::impl$1::grow (2 samples, 0.09%)</title><rect x="2.7027%" y="293" width="0.0858%" height="15" fill="rgb(252,49,23)" fg:x="63" fg:w="2"/><text x="2.9527%" y="303.50"></text></g><g><title>mnist-trainer.exe`alloc::alloc::Global::grow_impl (2 samples, 0.09%)</title><rect x="2.7027%" y="277" width="0.0858%" height="15" fill="rgb(215,19,7)" fg:x="63" fg:w="2"/><text x="2.9527%" y="287.50"></text></g><g><title>mnist-trainer.exe`core::result::impl$27::branch (2 samples, 0.09%)</title><rect x="2.7027%" y="261" width="0.0858%" height="15" fill="rgb(238,81,41)" fg:x="63" fg:w="2"/><text x="2.9527%" y="271.50"></text></g><g><title>`0x7FFB505A8F8D (2 samples, 0.09%)</title><rect x="2.7027%" y="245" width="0.0858%" height="15" fill="rgb(210,199,37)" fg:x="63" fg:w="2"/><text x="2.9527%" y="255.50"></text></g><g><title>`0x7FFB505A9235 (2 samples, 0.09%)</title><rect x="2.7027%" y="229" width="0.0858%" height="15" fill="rgb(244,192,49)" fg:x="63" fg:w="2"/><text x="2.9527%" y="239.50"></text></g><g><title>`0x7FFB505A9AEA (2 samples, 0.09%)</title><rect x="2.7027%" y="213" width="0.0858%" height="15" fill="rgb(226,211,11)" fg:x="63" fg:w="2"/><text x="2.9527%" y="223.50"></text></g><g><title>`0x7FFB5056F164 (2 samples, 0.09%)</title><rect x="2.7027%" y="197" width="0.0858%" height="15" fill="rgb(236,162,54)" fg:x="63" fg:w="2"/><text x="2.9527%" y="207.50"></text></g><g><title>`0x7FFB5056F2A4 (2 samples, 0.09%)</title><rect x="2.7027%" y="181" width="0.0858%" height="15" fill="rgb(220,229,9)" fg:x="63" fg:w="2"/><text x="2.9527%" y="191.50"></text></g><g><title>`0x7FFB50570032 (1 samples, 0.04%)</title><rect x="2.7456%" y="165" width="0.0429%" height="15" fill="rgb(250,87,22)" fg:x="64" fg:w="1"/><text x="2.9956%" y="175.50"></text></g><g><title>mnist-trainer.exe`csv_core::reader::Reader::read_record (7 samples, 0.30%)</title><rect x="2.7885%" y="405" width="0.3003%" height="15" fill="rgb(239,43,17)" fg:x="65" fg:w="7"/><text x="3.0385%" y="415.50"></text></g><g><title>mnist-trainer.exe`&lt;csv::reader::DeserializeRecordsIter (22 samples, 0.94%)</title><rect x="2.3166%" y="421" width="0.9438%" height="15" fill="rgb(231,177,25)" fg:x="54" fg:w="22"/><text x="2.5666%" y="431.50"></text></g><g><title>mnist-trainer.exe`std::sys::pal::windows::handle::Handle::read_buf (4 samples, 0.17%)</title><rect x="3.0888%" y="405" width="0.1716%" height="15" fill="rgb(219,179,1)" fg:x="72" fg:w="4"/><text x="3.3388%" y="415.50"></text></g><g><title>mnist-trainer.exe`std::sys::pal::windows::handle::Handle::synchronous_read (4 samples, 0.17%)</title><rect x="3.0888%" y="389" width="0.1716%" height="15" fill="rgb(238,219,53)" fg:x="72" fg:w="4"/><text x="3.3388%" y="399.50"></text></g><g><title>`0x7FFB506C2974 (4 samples, 0.17%)</title><rect x="3.0888%" y="373" width="0.1716%" height="15" fill="rgb(232,167,36)" fg:x="72" fg:w="4"/><text x="3.3388%" y="383.50"></text></g><g><title>`0x7FFB4DE61917 (2 samples, 0.09%)</title><rect x="3.2604%" y="229" width="0.0858%" height="15" fill="rgb(244,19,51)" fg:x="76" fg:w="2"/><text x="3.5104%" y="239.50"></text></g><g><title>`0x7FFB506C3354 (2 samples, 0.09%)</title><rect x="3.2604%" y="213" width="0.0858%" height="15" fill="rgb(224,6,22)" fg:x="76" fg:w="2"/><text x="3.5104%" y="223.50"></text></g><g><title>mnist-trainer.exe`csv::reader::ReaderBuilder::from_path (3 samples, 0.13%)</title><rect x="3.2604%" y="421" width="0.1287%" height="15" fill="rgb(224,145,5)" fg:x="76" fg:w="3"/><text x="3.5104%" y="431.50"></text></g><g><title>mnist-trainer.exe`std::fs::OpenOptions::_open (3 samples, 0.13%)</title><rect x="3.2604%" y="405" width="0.1287%" height="15" fill="rgb(234,130,49)" fg:x="76" fg:w="3"/><text x="3.5104%" y="415.50"></text></g><g><title>mnist-trainer.exe`std::sys::fs::windows::File::open (3 samples, 0.13%)</title><rect x="3.2604%" y="389" width="0.1287%" height="15" fill="rgb(254,6,2)" fg:x="76" fg:w="3"/><text x="3.5104%" y="399.50"></text></g><g><title>mnist-trainer.exe`core::ptr::drop_in_place (3 samples, 0.13%)</title><rect x="3.2604%" y="373" width="0.1287%" height="15" fill="rgb(208,96,46)" fg:x="76" fg:w="3"/><text x="3.5104%" y="383.50"></text></g><g><title>mnist-trainer.exe`core::ptr::drop_in_place (3 samples, 0.13%)</title><rect x="3.2604%" y="357" width="0.1287%" height="15" fill="rgb(239,3,39)" fg:x="76" fg:w="3"/><text x="3.5104%" y="367.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::impl$3::drop (3 samples, 0.13%)</title><rect x="3.2604%" y="341" width="0.1287%" height="15" fill="rgb(233,210,1)" fg:x="76" fg:w="3"/><text x="3.5104%" y="351.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::RawVecInner::deallocate (3 samples, 0.13%)</title><rect x="3.2604%" y="325" width="0.1287%" height="15" fill="rgb(244,137,37)" fg:x="76" fg:w="3"/><text x="3.5104%" y="335.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::RawVecInner::current_memory (3 samples, 0.13%)</title><rect x="3.2604%" y="309" width="0.1287%" height="15" fill="rgb(240,136,2)" fg:x="76" fg:w="3"/><text x="3.5104%" y="319.50"></text></g><g><title>mnist-trainer.exe`std::sys::fs::windows::File::open_native (3 samples, 0.13%)</title><rect x="3.2604%" y="293" width="0.1287%" height="15" fill="rgb(239,18,37)" fg:x="76" fg:w="3"/><text x="3.5104%" y="303.50"></text></g><g><title>mnist-trainer.exe`std::os::windows::io::handle::impl$13::try_from (3 samples, 0.13%)</title><rect x="3.2604%" y="277" width="0.1287%" height="15" fill="rgb(218,185,22)" fg:x="76" fg:w="3"/><text x="3.5104%" y="287.50"></text></g><g><title>mnist-trainer.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (3 samples, 0.13%)</title><rect x="3.2604%" y="261" width="0.1287%" height="15" fill="rgb(225,218,4)" fg:x="76" fg:w="3"/><text x="3.5104%" y="271.50"></text></g><g><title>`0x7FFB4DE16395 (3 samples, 0.13%)</title><rect x="3.2604%" y="245" width="0.1287%" height="15" fill="rgb(230,182,32)" fg:x="76" fg:w="3"/><text x="3.5104%" y="255.50"></text></g><g><title>`0x7FFB4DE61C22 (1 samples, 0.04%)</title><rect x="3.3462%" y="229" width="0.0429%" height="15" fill="rgb(242,56,43)" fg:x="78" fg:w="1"/><text x="3.5962%" y="239.50"></text></g><g><title>`0x7FFB50564DF0 (1 samples, 0.04%)</title><rect x="3.3462%" y="213" width="0.0429%" height="15" fill="rgb(233,99,24)" fg:x="78" fg:w="1"/><text x="3.5962%" y="223.50"></text></g><g><title>`0x7FFB5056FFFF (1 samples, 0.04%)</title><rect x="3.3891%" y="373" width="0.0429%" height="15" fill="rgb(234,209,42)" fg:x="79" fg:w="1"/><text x="3.6391%" y="383.50"></text></g><g><title>mnist-trainer.exe`mnist_trainer::import_csv::load_data_from_csv (30 samples, 1.29%)</title><rect x="2.3166%" y="437" width="1.2870%" height="15" fill="rgb(227,7,12)" fg:x="54" fg:w="30"/><text x="2.5666%" y="447.50"></text></g><g><title>mnist-trainer.exe`mnist_trainer::types::HandwrittenExample::new (5 samples, 0.21%)</title><rect x="3.3891%" y="421" width="0.2145%" height="15" fill="rgb(245,203,43)" fg:x="79" fg:w="5"/><text x="3.6391%" y="431.50"></text></g><g><title>`0x7FFB5056F164 (5 samples, 0.21%)</title><rect x="3.3891%" y="405" width="0.2145%" height="15" fill="rgb(238,205,33)" fg:x="79" fg:w="5"/><text x="3.6391%" y="415.50"></text></g><g><title>`0x7FFB5056F2A4 (5 samples, 0.21%)</title><rect x="3.3891%" y="389" width="0.2145%" height="15" fill="rgb(231,56,7)" fg:x="79" fg:w="5"/><text x="3.6391%" y="399.50"></text></g><g><title>`0x7FFB5057043F (4 samples, 0.17%)</title><rect x="3.4320%" y="373" width="0.1716%" height="15" fill="rgb(244,186,29)" fg:x="80" fg:w="4"/><text x="3.6820%" y="383.50"></text></g><g><title>`0x7FFB505DADA2 (4 samples, 0.17%)</title><rect x="3.4320%" y="357" width="0.1716%" height="15" fill="rgb(234,111,31)" fg:x="80" fg:w="4"/><text x="3.6820%" y="367.50"></text></g><g><title>mnist-trainer.exe`model::unit::types::linear_unit::LinearUnit::from_config (1 samples, 0.04%)</title><rect x="3.6036%" y="405" width="0.0429%" height="15" fill="rgb(241,149,10)" fg:x="84" fg:w="1"/><text x="3.8536%" y="415.50"></text></g><g><title>mnist-trainer.exe`model::unit::types::linear_unit::LinearUnit::new (1 samples, 0.04%)</title><rect x="3.6036%" y="389" width="0.0429%" height="15" fill="rgb(249,206,44)" fg:x="84" fg:w="1"/><text x="3.8536%" y="399.50"></text></g><g><title>mnist-trainer.exe`model::node::types::weight_node::WeightNode::new (1 samples, 0.04%)</title><rect x="3.6036%" y="373" width="0.0429%" height="15" fill="rgb(251,153,30)" fg:x="84" fg:w="1"/><text x="3.8536%" y="383.50"></text></g><g><title>mnist-trainer.exe`ndarray::iterators::to_vec_mapped (1 samples, 0.04%)</title><rect x="3.6036%" y="357" width="0.0429%" height="15" fill="rgb(239,152,38)" fg:x="84" fg:w="1"/><text x="3.8536%" y="367.50"></text></g><g><title>mnist-trainer.exe`model::network::types::classifier::builder::build_from_config (2 samples, 0.09%)</title><rect x="3.6036%" y="421" width="0.0858%" height="15" fill="rgb(249,139,47)" fg:x="84" fg:w="2"/><text x="3.8536%" y="431.50"></text></g><g><title>mnist-trainer.exe`model::unit::types::softmax_unit::SoftmaxUnit::from_config (1 samples, 0.04%)</title><rect x="3.6465%" y="405" width="0.0429%" height="15" fill="rgb(244,64,35)" fg:x="85" fg:w="1"/><text x="3.8965%" y="415.50"></text></g><g><title>mnist-trainer.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="3.6894%" y="405" width="0.0429%" height="15" fill="rgb(216,46,15)" fg:x="86" fg:w="1"/><text x="3.9394%" y="415.50"></text></g><g><title>`0x7FFB3F2C007B (1 samples, 0.04%)</title><rect x="3.7323%" y="389" width="0.0429%" height="15" fill="rgb(250,74,19)" fg:x="87" fg:w="1"/><text x="3.9823%" y="399.50"></text></g><g><title>mnist-trainer.exe`ndarray::iterators::to_vec_mapped (1 samples, 0.04%)</title><rect x="3.7752%" y="389" width="0.0429%" height="15" fill="rgb(249,42,33)" fg:x="88" fg:w="1"/><text x="4.0252%" y="399.50"></text></g><g><title>mnist-trainer.exe`model::network::types::classifier::ClassifierNetwork::new (6 samples, 0.26%)</title><rect x="3.6036%" y="437" width="0.2574%" height="15" fill="rgb(242,149,17)" fg:x="84" fg:w="6"/><text x="3.8536%" y="447.50"></text></g><g><title>mnist-trainer.exe`model::network::types::classifier::config::ClassifierConfig::new (4 samples, 0.17%)</title><rect x="3.6894%" y="421" width="0.1716%" height="15" fill="rgb(244,29,21)" fg:x="86" fg:w="4"/><text x="3.9394%" y="431.50"></text></g><g><title>mnist-trainer.exe`model::network::config_types::unit_params::UnitParams::new_linear (3 samples, 0.13%)</title><rect x="3.7323%" y="405" width="0.1287%" height="15" fill="rgb(220,130,37)" fg:x="87" fg:w="3"/><text x="3.9823%" y="415.50"></text></g><g><title>mnist-trainer.exe`ndarray_rand::get_rng (1 samples, 0.04%)</title><rect x="3.8181%" y="389" width="0.0429%" height="15" fill="rgb(211,67,2)" fg:x="89" fg:w="1"/><text x="4.0681%" y="399.50"></text></g><g><title>mnist-trainer.exe`rand::rngs::thread::thread_rng (1 samples, 0.04%)</title><rect x="3.8181%" y="373" width="0.0429%" height="15" fill="rgb(235,68,52)" fg:x="89" fg:w="1"/><text x="4.0681%" y="383.50"></text></g><g><title>mnist-trainer.exe`std::sys::thread_local::native::lazy::Storage (1 samples, 0.04%)</title><rect x="3.8181%" y="357" width="0.0429%" height="15" fill="rgb(246,142,3)" fg:x="89" fg:w="1"/><text x="4.0681%" y="367.50"></text></g><g><title>mnist-trainer.exe`&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (1 samples, 0.04%)</title><rect x="3.8181%" y="341" width="0.0429%" height="15" fill="rgb(241,25,7)" fg:x="89" fg:w="1"/><text x="4.0681%" y="351.50"></text></g><g><title>mnist-trainer.exe`getrandom::imp::getrandom_inner (1 samples, 0.04%)</title><rect x="3.8181%" y="325" width="0.0429%" height="15" fill="rgb(242,119,39)" fg:x="89" fg:w="1"/><text x="4.0681%" y="335.50"></text></g><g><title>`0x7FFB4D5814AC (1 samples, 0.04%)</title><rect x="3.8181%" y="309" width="0.0429%" height="15" fill="rgb(241,98,45)" fg:x="89" fg:w="1"/><text x="4.0681%" y="319.50"></text></g><g><title>`0x7FFB4D5815DD (1 samples, 0.04%)</title><rect x="3.8181%" y="293" width="0.0429%" height="15" fill="rgb(254,28,30)" fg:x="89" fg:w="1"/><text x="4.0681%" y="303.50"></text></g><g><title>`0x7FFB4D58179D (1 samples, 0.04%)</title><rect x="3.8181%" y="277" width="0.0429%" height="15" fill="rgb(241,142,54)" fg:x="89" fg:w="1"/><text x="4.0681%" y="287.50"></text></g><g><title>`0x7FFB4D58708C (1 samples, 0.04%)</title><rect x="3.8181%" y="261" width="0.0429%" height="15" fill="rgb(222,85,15)" fg:x="89" fg:w="1"/><text x="4.0681%" y="271.50"></text></g><g><title>`0x7FFB506C2994 (1 samples, 0.04%)</title><rect x="3.8181%" y="245" width="0.0429%" height="15" fill="rgb(210,85,47)" fg:x="89" fg:w="1"/><text x="4.0681%" y="255.50"></text></g><g><title>`0x7FFB3F2C059B (2 samples, 0.09%)</title><rect x="3.9039%" y="405" width="0.0858%" height="15" fill="rgb(224,206,25)" fg:x="91" fg:w="2"/><text x="4.1539%" y="415.50"></text></g><g><title>`0x7FFB3F2C05A2 (2 samples, 0.09%)</title><rect x="3.9897%" y="405" width="0.0858%" height="15" fill="rgb(243,201,19)" fg:x="93" fg:w="2"/><text x="4.2397%" y="415.50"></text></g><g><title>`0x7FFB3F2C05E9 (1 samples, 0.04%)</title><rect x="4.0755%" y="405" width="0.0429%" height="15" fill="rgb(236,59,4)" fg:x="95" fg:w="1"/><text x="4.3255%" y="415.50"></text></g><g><title>`0x7FFB3F2C05EE (1 samples, 0.04%)</title><rect x="4.1184%" y="405" width="0.0429%" height="15" fill="rgb(254,179,45)" fg:x="96" fg:w="1"/><text x="4.3684%" y="415.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="4.1613%" y="405" width="0.0429%" height="15" fill="rgb(226,14,10)" fg:x="97" fg:w="1"/><text x="4.4113%" y="415.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="4.1613%" y="389" width="0.0429%" height="15" fill="rgb(244,27,41)" fg:x="97" fg:w="1"/><text x="4.4113%" y="399.50"></text></g><g><title>`0x7FFB5056FB00 (1 samples, 0.04%)</title><rect x="4.1613%" y="373" width="0.0429%" height="15" fill="rgb(235,35,32)" fg:x="97" fg:w="1"/><text x="4.4113%" y="383.50"></text></g><g><title>mnist-trainer.exe`&lt;alloc::vec::Vec (1 samples, 0.04%)</title><rect x="4.2042%" y="405" width="0.0429%" height="15" fill="rgb(218,68,31)" fg:x="98" fg:w="1"/><text x="4.4542%" y="415.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="4.2042%" y="389" width="0.0429%" height="15" fill="rgb(207,120,37)" fg:x="98" fg:w="1"/><text x="4.4542%" y="399.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="4.2042%" y="373" width="0.0429%" height="15" fill="rgb(227,98,0)" fg:x="98" fg:w="1"/><text x="4.4542%" y="383.50"></text></g><g><title>`0x7FFB5056F991 (1 samples, 0.04%)</title><rect x="4.2042%" y="357" width="0.0429%" height="15" fill="rgb(207,7,3)" fg:x="98" fg:w="1"/><text x="4.4542%" y="367.50"></text></g><g><title>`0x7FFB3F2C007B (1 samples, 0.04%)</title><rect x="4.2471%" y="341" width="0.0429%" height="15" fill="rgb(206,98,19)" fg:x="99" fg:w="1"/><text x="4.4971%" y="351.50"></text></g><g><title>mnist-trainer.exe`&lt;model::network::types::classifier::ClassifierNetwork as model::network::Network&gt;::create_config (3 samples, 0.13%)</title><rect x="4.2471%" y="405" width="0.1287%" height="15" fill="rgb(217,5,26)" fg:x="99" fg:w="3"/><text x="4.4971%" y="415.50"></text></g><g><title>mnist-trainer.exe`model::network::types::classifier::config::ClassifierConfig::from_network (3 samples, 0.13%)</title><rect x="4.2471%" y="389" width="0.1287%" height="15" fill="rgb(235,190,38)" fg:x="99" fg:w="3"/><text x="4.4971%" y="399.50"></text></g><g><title>mnist-trainer.exe`model::network::config_types::unit_params::UnitParams::from_linear_unit (3 samples, 0.13%)</title><rect x="4.2471%" y="373" width="0.1287%" height="15" fill="rgb(247,86,24)" fg:x="99" fg:w="3"/><text x="4.4971%" y="383.50"></text></g><g><title>mnist-trainer.exe`model::unit::types::linear_unit::LinearUnit::get_weights (3 samples, 0.13%)</title><rect x="4.2471%" y="357" width="0.1287%" height="15" fill="rgb(205,101,16)" fg:x="99" fg:w="3"/><text x="4.4971%" y="367.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::weight_node::WeightNode as model::node::Node&gt;::get_data (2 samples, 0.09%)</title><rect x="4.2900%" y="341" width="0.0858%" height="15" fill="rgb(246,168,33)" fg:x="100" fg:w="2"/><text x="4.5400%" y="351.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::plus (2 samples, 0.09%)</title><rect x="4.2900%" y="325" width="0.0858%" height="15" fill="rgb(231,114,1)" fg:x="100" fg:w="2"/><text x="4.5400%" y="335.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::plus (2 samples, 0.09%)</title><rect x="4.2900%" y="309" width="0.0858%" height="15" fill="rgb(207,184,53)" fg:x="100" fg:w="2"/><text x="4.5400%" y="319.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase (2 samples, 0.09%)</title><rect x="4.2900%" y="293" width="0.0858%" height="15" fill="rgb(224,95,51)" fg:x="100" fg:w="2"/><text x="4.5400%" y="303.50"></text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (2 samples, 0.09%)</title><rect x="4.2900%" y="277" width="0.0858%" height="15" fill="rgb(212,188,45)" fg:x="100" fg:w="2"/><text x="4.5400%" y="287.50"></text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (2 samples, 0.09%)</title><rect x="4.2900%" y="261" width="0.0858%" height="15" fill="rgb(223,154,38)" fg:x="100" fg:w="2"/><text x="4.5400%" y="271.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::input_node::InputNode as model::node::Node&gt;::set_data (1 samples, 0.04%)</title><rect x="4.3758%" y="389" width="0.0429%" height="15" fill="rgb(251,22,52)" fg:x="102" fg:w="1"/><text x="4.6258%" y="399.50"></text></g><g><title>`0x7FFB505F5434 (1 samples, 0.04%)</title><rect x="4.3758%" y="373" width="0.0429%" height="15" fill="rgb(229,209,22)" fg:x="102" fg:w="1"/><text x="4.6258%" y="383.50"></text></g><g><title>`0x7FFB505F54C3 (1 samples, 0.04%)</title><rect x="4.4187%" y="373" width="0.0429%" height="15" fill="rgb(234,138,34)" fg:x="103" fg:w="1"/><text x="4.6687%" y="383.50"></text></g><g><title>`0x7FFB505F5438 (1 samples, 0.04%)</title><rect x="4.4616%" y="309" width="0.0429%" height="15" fill="rgb(212,95,11)" fg:x="104" fg:w="1"/><text x="4.7116%" y="319.50"></text></g><g><title>`0x7FFB505F5434 (1 samples, 0.04%)</title><rect x="4.5045%" y="277" width="0.0429%" height="15" fill="rgb(240,179,47)" fg:x="105" fg:w="1"/><text x="4.7545%" y="287.50"></text></g><g><title>`0x7FFB505F5960 (11 samples, 0.47%)</title><rect x="4.5474%" y="277" width="0.4719%" height="15" fill="rgb(240,163,11)" fg:x="106" fg:w="11"/><text x="4.7974%" y="287.50"></text></g><g><title>`0x7FFB505749D6 (11 samples, 0.47%)</title><rect x="4.5474%" y="261" width="0.4719%" height="15" fill="rgb(236,37,12)" fg:x="106" fg:w="11"/><text x="4.7974%" y="271.50"></text></g><g><title>`0x7FFB50589B68 (11 samples, 0.47%)</title><rect x="4.5474%" y="245" width="0.4719%" height="15" fill="rgb(232,164,16)" fg:x="106" fg:w="11"/><text x="4.7974%" y="255.50"></text></g><g><title>`0x7FFB5057801E (11 samples, 0.47%)</title><rect x="4.5474%" y="229" width="0.4719%" height="15" fill="rgb(244,205,15)" fg:x="106" fg:w="11"/><text x="4.7974%" y="239.50"></text></g><g><title>`0x7FFB5064B449 (11 samples, 0.47%)</title><rect x="4.5474%" y="213" width="0.4719%" height="15" fill="rgb(223,117,47)" fg:x="106" fg:w="11"/><text x="4.7974%" y="223.50"></text></g><g><title>`0x7FFB506C2C74 (11 samples, 0.47%)</title><rect x="4.5474%" y="197" width="0.4719%" height="15" fill="rgb(244,107,35)" fg:x="106" fg:w="11"/><text x="4.7974%" y="207.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_constructors::&lt;impl ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="5.0193%" y="197" width="0.0429%" height="15" fill="rgb(205,140,8)" fg:x="117" fg:w="1"/><text x="5.2693%" y="207.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="5.0193%" y="181" width="0.0429%" height="15" fill="rgb(228,84,46)" fg:x="117" fg:w="1"/><text x="5.2693%" y="191.50"></text></g><g><title>`0x7FFB5056F591 (1 samples, 0.04%)</title><rect x="5.0193%" y="165" width="0.0429%" height="15" fill="rgb(254,188,9)" fg:x="117" fg:w="1"/><text x="5.2693%" y="175.50"></text></g><g><title>`0x7FFB505A68E4 (1 samples, 0.04%)</title><rect x="5.0193%" y="149" width="0.0429%" height="15" fill="rgb(206,112,54)" fg:x="117" fg:w="1"/><text x="5.2693%" y="159.50"></text></g><g><title>`0x7FFB505892C8 (1 samples, 0.04%)</title><rect x="5.0193%" y="133" width="0.0429%" height="15" fill="rgb(216,84,49)" fg:x="117" fg:w="1"/><text x="5.2693%" y="143.50"></text></g><g><title>`0x7FFB506C2BB4 (1 samples, 0.04%)</title><rect x="5.0193%" y="117" width="0.0429%" height="15" fill="rgb(214,194,35)" fg:x="117" fg:w="1"/><text x="5.2693%" y="127.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::weight_node::WeightNode as model::node::Node&gt;::get_data (47 samples, 2.02%)</title><rect x="5.0193%" y="277" width="2.0163%" height="15" fill="rgb(249,28,3)" fg:x="117" fg:w="47"/><text x="5.2693%" y="287.50">m..</text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::plus (47 samples, 2.02%)</title><rect x="5.0193%" y="261" width="2.0163%" height="15" fill="rgb(222,56,52)" fg:x="117" fg:w="47"/><text x="5.2693%" y="271.50">m..</text></g><g><title>mnist-trainer.exe`model::data::Data::plus (47 samples, 2.02%)</title><rect x="5.0193%" y="245" width="2.0163%" height="15" fill="rgb(245,217,50)" fg:x="117" fg:w="47"/><text x="5.2693%" y="255.50">m..</text></g><g><title>mnist-trainer.exe`ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase (47 samples, 2.02%)</title><rect x="5.0193%" y="229" width="2.0163%" height="15" fill="rgb(213,201,24)" fg:x="117" fg:w="47"/><text x="5.2693%" y="239.50">m..</text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (47 samples, 2.02%)</title><rect x="5.0193%" y="213" width="2.0163%" height="15" fill="rgb(248,116,28)" fg:x="117" fg:w="47"/><text x="5.2693%" y="223.50">m..</text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (46 samples, 1.97%)</title><rect x="5.0622%" y="197" width="1.9734%" height="15" fill="rgb(219,72,43)" fg:x="118" fg:w="46"/><text x="5.3122%" y="207.50">m..</text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="7.0356%" y="213" width="0.0429%" height="15" fill="rgb(209,138,14)" fg:x="164" fg:w="1"/><text x="7.2856%" y="223.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="7.0356%" y="197" width="0.0429%" height="15" fill="rgb(222,18,33)" fg:x="164" fg:w="1"/><text x="7.2856%" y="207.50"></text></g><g><title>`0x7FFB5056F9CC (1 samples, 0.04%)</title><rect x="7.0356%" y="181" width="0.0429%" height="15" fill="rgb(213,199,7)" fg:x="164" fg:w="1"/><text x="7.2856%" y="191.50"></text></g><g><title>`0x7FFB505F5960 (1 samples, 0.04%)</title><rect x="7.0785%" y="213" width="0.0429%" height="15" fill="rgb(250,110,10)" fg:x="165" fg:w="1"/><text x="7.3285%" y="223.50"></text></g><g><title>`0x7FFB50574518 (1 samples, 0.04%)</title><rect x="7.0785%" y="197" width="0.0429%" height="15" fill="rgb(248,123,6)" fg:x="165" fg:w="1"/><text x="7.3285%" y="207.50"></text></g><g><title>`0x7FFB50575CF7 (1 samples, 0.04%)</title><rect x="7.0785%" y="181" width="0.0429%" height="15" fill="rgb(206,91,31)" fg:x="165" fg:w="1"/><text x="7.3285%" y="191.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::packing::pack_avx2 (29 samples, 1.24%)</title><rect x="7.1214%" y="197" width="1.2441%" height="15" fill="rgb(211,154,13)" fg:x="166" fg:w="29"/><text x="7.3714%" y="207.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::matmul (42 samples, 1.80%)</title><rect x="7.0356%" y="277" width="1.8018%" height="15" fill="rgb(225,148,7)" fg:x="164" fg:w="42"/><text x="7.2856%" y="287.50">m..</text></g><g><title>mnist-trainer.exe`model::data::Data::matmul (42 samples, 1.80%)</title><rect x="7.0356%" y="261" width="1.8018%" height="15" fill="rgb(220,160,43)" fg:x="164" fg:w="42"/><text x="7.2856%" y="271.50">m..</text></g><g><title>mnist-trainer.exe`model::data::operations::matmul::DataMatMul::matmul_matrix_vector (42 samples, 1.80%)</title><rect x="7.0356%" y="245" width="1.8018%" height="15" fill="rgb(213,52,39)" fg:x="164" fg:w="42"/><text x="7.2856%" y="255.50">m..</text></g><g><title>mnist-trainer.exe`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim (42 samples, 1.80%)</title><rect x="7.0356%" y="229" width="1.8018%" height="15" fill="rgb(243,137,7)" fg:x="164" fg:w="42"/><text x="7.2856%" y="239.50">m..</text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::gemm_loop (40 samples, 1.72%)</title><rect x="7.1214%" y="213" width="1.7160%" height="15" fill="rgb(230,79,13)" fg:x="166" fg:w="40"/><text x="7.3714%" y="223.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::threading::RangeChunkParallel (11 samples, 0.47%)</title><rect x="8.3655%" y="197" width="0.4719%" height="15" fill="rgb(247,105,23)" fg:x="195" fg:w="11"/><text x="8.6155%" y="207.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::masked_kernel (11 samples, 0.47%)</title><rect x="8.3655%" y="181" width="0.4719%" height="15" fill="rgb(223,179,41)" fg:x="195" fg:w="11"/><text x="8.6155%" y="191.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::sgemm_kernel::kernel_target_fma (11 samples, 0.47%)</title><rect x="8.3655%" y="165" width="0.4719%" height="15" fill="rgb(218,9,34)" fg:x="195" fg:w="11"/><text x="8.6155%" y="175.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::activation_node::ActivationNode as model::node::Node&gt;::apply_operation (103 samples, 4.42%)</title><rect x="4.4616%" y="325" width="4.4187%" height="15" fill="rgb(222,106,8)" fg:x="104" fg:w="103"/><text x="4.7116%" y="335.50">mnist..</text></g><g><title>mnist-trainer.exe`&lt;model::node::types::add_node::AddNode as model::node::Node&gt;::apply_operation (102 samples, 4.38%)</title><rect x="4.5045%" y="309" width="4.3758%" height="15" fill="rgb(211,220,0)" fg:x="105" fg:w="102"/><text x="4.7545%" y="319.50">mnist..</text></g><g><title>mnist-trainer.exe`&lt;model::node::types::matrix_multiply_node::MatrixMultiplyNode as model::node::Node&gt;::apply_operation (102 samples, 4.38%)</title><rect x="4.5045%" y="293" width="4.3758%" height="15" fill="rgb(229,52,16)" fg:x="105" fg:w="102"/><text x="4.7545%" y="303.50">mnist..</text></g><g><title>mnist-trainer.exe`model::node::node_base::NodeBase::set_data (1 samples, 0.04%)</title><rect x="8.8374%" y="277" width="0.0429%" height="15" fill="rgb(212,155,18)" fg:x="206" fg:w="1"/><text x="9.0874%" y="287.50"></text></g><g><title>`0x7FFB505F5438 (1 samples, 0.04%)</title><rect x="8.8374%" y="261" width="0.0429%" height="15" fill="rgb(242,21,14)" fg:x="206" fg:w="1"/><text x="9.0874%" y="271.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::multiply_node::MultiplyNode as model::node::Node&gt;::get_data (1 samples, 0.04%)</title><rect x="8.8803%" y="325" width="0.0429%" height="15" fill="rgb(222,19,48)" fg:x="207" fg:w="1"/><text x="9.1303%" y="335.50"></text></g><g><title>mnist-trainer.exe`&lt;model::data::data_container::DataContainer as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="8.8803%" y="309" width="0.0429%" height="15" fill="rgb(232,45,27)" fg:x="207" fg:w="1"/><text x="9.1303%" y="319.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="8.8803%" y="293" width="0.0429%" height="15" fill="rgb(249,103,42)" fg:x="207" fg:w="1"/><text x="9.1303%" y="303.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="8.8803%" y="277" width="0.0429%" height="15" fill="rgb(246,81,33)" fg:x="207" fg:w="1"/><text x="9.1303%" y="287.50"></text></g><g><title>`0x7FFB5056FB77 (1 samples, 0.04%)</title><rect x="8.8803%" y="261" width="0.0429%" height="15" fill="rgb(252,33,42)" fg:x="207" fg:w="1"/><text x="9.1303%" y="271.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::weight_node::WeightNode as model::node::Node&gt;::get_data (2 samples, 0.09%)</title><rect x="8.9232%" y="325" width="0.0858%" height="15" fill="rgb(209,212,41)" fg:x="208" fg:w="2"/><text x="9.1732%" y="335.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::plus (2 samples, 0.09%)</title><rect x="8.9232%" y="309" width="0.0858%" height="15" fill="rgb(207,154,6)" fg:x="208" fg:w="2"/><text x="9.1732%" y="319.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::plus (2 samples, 0.09%)</title><rect x="8.9232%" y="293" width="0.0858%" height="15" fill="rgb(223,64,47)" fg:x="208" fg:w="2"/><text x="9.1732%" y="303.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase (2 samples, 0.09%)</title><rect x="8.9232%" y="277" width="0.0858%" height="15" fill="rgb(211,161,38)" fg:x="208" fg:w="2"/><text x="9.1732%" y="287.50"></text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (2 samples, 0.09%)</title><rect x="8.9232%" y="261" width="0.0858%" height="15" fill="rgb(219,138,40)" fg:x="208" fg:w="2"/><text x="9.1732%" y="271.50"></text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (2 samples, 0.09%)</title><rect x="8.9232%" y="245" width="0.0858%" height="15" fill="rgb(241,228,46)" fg:x="208" fg:w="2"/><text x="9.1732%" y="255.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::add_node::AddNode as model::node::Node&gt;::apply_operation (107 samples, 4.59%)</title><rect x="4.4616%" y="357" width="4.5903%" height="15" fill="rgb(223,209,38)" fg:x="104" fg:w="107"/><text x="4.7116%" y="367.50">mnist..</text></g><g><title>mnist-trainer.exe`&lt;model::node::types::matrix_multiply_node::MatrixMultiplyNode as model::node::Node&gt;::apply_operation (107 samples, 4.59%)</title><rect x="4.4616%" y="341" width="4.5903%" height="15" fill="rgb(236,164,45)" fg:x="104" fg:w="107"/><text x="4.7116%" y="351.50">mnist..</text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::matmul (1 samples, 0.04%)</title><rect x="9.0090%" y="325" width="0.0429%" height="15" fill="rgb(231,15,5)" fg:x="210" fg:w="1"/><text x="9.2590%" y="335.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::matmul (1 samples, 0.04%)</title><rect x="9.0090%" y="309" width="0.0429%" height="15" fill="rgb(252,35,15)" fg:x="210" fg:w="1"/><text x="9.2590%" y="319.50"></text></g><g><title>mnist-trainer.exe`model::data::operations::matmul::DataMatMul::matmul_matrix_vector (1 samples, 0.04%)</title><rect x="9.0090%" y="293" width="0.0429%" height="15" fill="rgb(248,181,18)" fg:x="210" fg:w="1"/><text x="9.2590%" y="303.50"></text></g><g><title>mnist-trainer.exe`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim (1 samples, 0.04%)</title><rect x="9.0090%" y="277" width="0.0429%" height="15" fill="rgb(233,39,42)" fg:x="210" fg:w="1"/><text x="9.2590%" y="287.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::gemm_loop (1 samples, 0.04%)</title><rect x="9.0090%" y="261" width="0.0429%" height="15" fill="rgb(238,110,33)" fg:x="210" fg:w="1"/><text x="9.2590%" y="271.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::threading::RangeChunkParallel (1 samples, 0.04%)</title><rect x="9.0090%" y="245" width="0.0429%" height="15" fill="rgb(233,195,10)" fg:x="210" fg:w="1"/><text x="9.2590%" y="255.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::masked_kernel (1 samples, 0.04%)</title><rect x="9.0090%" y="229" width="0.0429%" height="15" fill="rgb(254,105,3)" fg:x="210" fg:w="1"/><text x="9.2590%" y="239.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::sgemm_kernel::kernel_target_fma (1 samples, 0.04%)</title><rect x="9.0090%" y="213" width="0.0429%" height="15" fill="rgb(221,225,9)" fg:x="210" fg:w="1"/><text x="9.2590%" y="223.50"></text></g><g><title>mnist-trainer.exe`&lt;model::network::types::classifier::ClassifierNetwork as model::network::Network&gt;::predict (110 samples, 4.72%)</title><rect x="4.3758%" y="405" width="4.7190%" height="15" fill="rgb(224,227,45)" fg:x="102" fg:w="110"/><text x="4.6258%" y="415.50">mnist..</text></g><g><title>mnist-trainer.exe`&lt;model::node::types::softmax_node::SoftmaxNode as model::node::Node&gt;::apply_operation (109 samples, 4.68%)</title><rect x="4.4187%" y="389" width="4.6761%" height="15" fill="rgb(229,198,43)" fg:x="103" fg:w="109"/><text x="4.6687%" y="399.50">mnist..</text></g><g><title>mnist-trainer.exe`&lt;model::node::types::activation_node::ActivationNode as model::node::Node&gt;::apply_operation (108 samples, 4.63%)</title><rect x="4.4616%" y="373" width="4.6332%" height="15" fill="rgb(206,209,35)" fg:x="104" fg:w="108"/><text x="4.7116%" y="383.50">mnist..</text></g><g><title>mnist-trainer.exe`model::node::activation::activation_function::ActivationFunction::apply_all (1 samples, 0.04%)</title><rect x="9.0519%" y="357" width="0.0429%" height="15" fill="rgb(245,195,53)" fg:x="211" fg:w="1"/><text x="9.3019%" y="367.50"></text></g><g><title>`0x7FFB505F541D (1 samples, 0.04%)</title><rect x="9.1806%" y="357" width="0.0429%" height="15" fill="rgb(240,92,26)" fg:x="214" fg:w="1"/><text x="9.4306%" y="367.50"></text></g><g><title>`0x7FFB505F544E (1 samples, 0.04%)</title><rect x="9.2235%" y="357" width="0.0429%" height="15" fill="rgb(207,40,23)" fg:x="215" fg:w="1"/><text x="9.4735%" y="367.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="9.2664%" y="293" width="0.0429%" height="15" fill="rgb(223,111,35)" fg:x="216" fg:w="1"/><text x="9.5164%" y="303.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="9.2664%" y="277" width="0.0429%" height="15" fill="rgb(229,147,28)" fg:x="216" fg:w="1"/><text x="9.5164%" y="287.50"></text></g><g><title>`0x7FFB5057002D (1 samples, 0.04%)</title><rect x="9.2664%" y="261" width="0.0429%" height="15" fill="rgb(211,29,28)" fg:x="216" fg:w="1"/><text x="9.5164%" y="271.50"></text></g><g><title>`0x7FFB5056F17D (1 samples, 0.04%)</title><rect x="9.3093%" y="293" width="0.0429%" height="15" fill="rgb(228,72,33)" fg:x="217" fg:w="1"/><text x="9.5593%" y="303.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::loss::types::base_cross_entropy::BaseCrossEntropy as model::node::loss::loss_function::LossType&gt;::diff (3 samples, 0.13%)</title><rect x="9.2664%" y="357" width="0.1287%" height="15" fill="rgb(205,214,31)" fg:x="216" fg:w="3"/><text x="9.5164%" y="367.50"></text></g><g><title>mnist-trainer.exe`model::node::loss::helpers::container_apply (3 samples, 0.13%)</title><rect x="9.2664%" y="341" width="0.1287%" height="15" fill="rgb(224,111,15)" fg:x="216" fg:w="3"/><text x="9.5164%" y="351.50"></text></g><g><title>mnist-trainer.exe`model::node::loss::helpers::data_diff_vector (3 samples, 0.13%)</title><rect x="9.2664%" y="325" width="0.1287%" height="15" fill="rgb(253,21,26)" fg:x="216" fg:w="3"/><text x="9.5164%" y="335.50"></text></g><g><title>mnist-trainer.exe`model::node::loss::types::base_cross_entropy::BaseCrossEntropy::diff_calc (3 samples, 0.13%)</title><rect x="9.2664%" y="309" width="0.1287%" height="15" fill="rgb(245,139,43)" fg:x="216" fg:w="3"/><text x="9.5164%" y="319.50"></text></g><g><title>mnist-trainer.exe`logf (1 samples, 0.04%)</title><rect x="9.3522%" y="293" width="0.0429%" height="15" fill="rgb(252,170,7)" fg:x="218" fg:w="1"/><text x="9.6022%" y="303.50"></text></g><g><title>`0x7FFB505F53C1 (1 samples, 0.04%)</title><rect x="9.3951%" y="341" width="0.0429%" height="15" fill="rgb(231,118,14)" fg:x="219" fg:w="1"/><text x="9.6451%" y="351.50"></text></g><g><title>`0x7FFB505F5960 (1 samples, 0.04%)</title><rect x="9.4380%" y="341" width="0.0429%" height="15" fill="rgb(238,83,0)" fg:x="220" fg:w="1"/><text x="9.6880%" y="351.50"></text></g><g><title>`0x7FFB50574695 (1 samples, 0.04%)</title><rect x="9.4380%" y="325" width="0.0429%" height="15" fill="rgb(221,39,39)" fg:x="220" fg:w="1"/><text x="9.6880%" y="335.50"></text></g><g><title>mnist-trainer.exe`&lt;model::data::data_container::DataContainer as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="9.4809%" y="341" width="0.0429%" height="15" fill="rgb(222,119,46)" fg:x="221" fg:w="1"/><text x="9.7309%" y="351.50"></text></g><g><title>mnist-trainer.exe`&lt;alloc::vec::Vec (1 samples, 0.04%)</title><rect x="9.4809%" y="325" width="0.0429%" height="15" fill="rgb(222,165,49)" fg:x="221" fg:w="1"/><text x="9.7309%" y="335.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="9.4809%" y="309" width="0.0429%" height="15" fill="rgb(219,113,52)" fg:x="221" fg:w="1"/><text x="9.7309%" y="319.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="9.4809%" y="293" width="0.0429%" height="15" fill="rgb(214,7,15)" fg:x="221" fg:w="1"/><text x="9.7309%" y="303.50"></text></g><g><title>`0x7FFB5056FFFF (1 samples, 0.04%)</title><rect x="9.4809%" y="277" width="0.0429%" height="15" fill="rgb(235,32,4)" fg:x="221" fg:w="1"/><text x="9.7309%" y="287.50"></text></g><g><title>mnist-trainer.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (1 samples, 0.04%)</title><rect x="9.5667%" y="325" width="0.0429%" height="15" fill="rgb(238,90,54)" fg:x="223" fg:w="1"/><text x="9.8167%" y="335.50"></text></g><g><title>mnist-trainer.exe`&lt;core::iter::adapters::map::Map (1 samples, 0.04%)</title><rect x="9.5667%" y="309" width="0.0429%" height="15" fill="rgb(213,208,19)" fg:x="223" fg:w="1"/><text x="9.8167%" y="319.50"></text></g><g><title>`0x7FFB505F548F (1 samples, 0.04%)</title><rect x="9.6096%" y="261" width="0.0429%" height="15" fill="rgb(233,156,4)" fg:x="224" fg:w="1"/><text x="9.8596%" y="271.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::average_batch (2 samples, 0.09%)</title><rect x="9.6096%" y="277" width="0.0858%" height="15" fill="rgb(207,194,5)" fg:x="224" fg:w="2"/><text x="9.8596%" y="287.50"></text></g><g><title>`0x7FFB505F54C3 (1 samples, 0.04%)</title><rect x="9.6525%" y="261" width="0.0429%" height="15" fill="rgb(206,111,30)" fg:x="225" fg:w="1"/><text x="9.9025%" y="271.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::bias_node::BiasNode as model::node::Node&gt;::apply_jacobian (3 samples, 0.13%)</title><rect x="9.6096%" y="309" width="0.1287%" height="15" fill="rgb(243,70,54)" fg:x="224" fg:w="3"/><text x="9.8596%" y="319.50"></text></g><g><title>mnist-trainer.exe`model::node::node_base::NodeBase::process_gradient (3 samples, 0.13%)</title><rect x="9.6096%" y="293" width="0.1287%" height="15" fill="rgb(242,28,8)" fg:x="224" fg:w="3"/><text x="9.8596%" y="303.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::minus (1 samples, 0.04%)</title><rect x="9.6954%" y="277" width="0.0429%" height="15" fill="rgb(219,106,18)" fg:x="226" fg:w="1"/><text x="9.9454%" y="287.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::minus (1 samples, 0.04%)</title><rect x="9.6954%" y="261" width="0.0429%" height="15" fill="rgb(244,222,10)" fg:x="226" fg:w="1"/><text x="9.9454%" y="271.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Sub&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="9.6954%" y="245" width="0.0429%" height="15" fill="rgb(236,179,52)" fg:x="226" fg:w="1"/><text x="9.9454%" y="255.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_constructors::&lt;impl ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="9.6954%" y="229" width="0.0429%" height="15" fill="rgb(213,23,39)" fg:x="226" fg:w="1"/><text x="9.9454%" y="239.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="9.6954%" y="213" width="0.0429%" height="15" fill="rgb(238,48,10)" fg:x="226" fg:w="1"/><text x="9.9454%" y="223.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="9.6954%" y="197" width="0.0429%" height="15" fill="rgb(251,196,23)" fg:x="226" fg:w="1"/><text x="9.9454%" y="207.50"></text></g><g><title>`0x7FFB5056FFFF (1 samples, 0.04%)</title><rect x="9.6954%" y="181" width="0.0429%" height="15" fill="rgb(250,152,24)" fg:x="226" fg:w="1"/><text x="9.9454%" y="191.50"></text></g><g><title>mnist-trainer.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (1 samples, 0.04%)</title><rect x="9.7383%" y="293" width="0.0429%" height="15" fill="rgb(209,150,17)" fg:x="227" fg:w="1"/><text x="9.9883%" y="303.50"></text></g><g><title>`0x7FFB505F5445 (1 samples, 0.04%)</title><rect x="9.7812%" y="277" width="0.0429%" height="15" fill="rgb(234,202,34)" fg:x="228" fg:w="1"/><text x="10.0312%" y="287.50"></text></g><g><title>`0x7FFB505F544A (1 samples, 0.04%)</title><rect x="9.8241%" y="277" width="0.0429%" height="15" fill="rgb(253,148,53)" fg:x="229" fg:w="1"/><text x="10.0741%" y="287.50"></text></g><g><title>`0x7FFB505F53DE (1 samples, 0.04%)</title><rect x="9.9099%" y="213" width="0.0429%" height="15" fill="rgb(218,129,16)" fg:x="231" fg:w="1"/><text x="10.1599%" y="223.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::average_batch (2 samples, 0.09%)</title><rect x="9.9099%" y="229" width="0.0858%" height="15" fill="rgb(216,85,19)" fg:x="231" fg:w="2"/><text x="10.1599%" y="239.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::plus (1 samples, 0.04%)</title><rect x="9.9528%" y="213" width="0.0429%" height="15" fill="rgb(235,228,7)" fg:x="232" fg:w="1"/><text x="10.2028%" y="223.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="9.9528%" y="197" width="0.0429%" height="15" fill="rgb(245,175,0)" fg:x="232" fg:w="1"/><text x="10.2028%" y="207.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_constructors::&lt;impl ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="9.9528%" y="181" width="0.0429%" height="15" fill="rgb(208,168,36)" fg:x="232" fg:w="1"/><text x="10.2028%" y="191.50"></text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (1 samples, 0.04%)</title><rect x="9.9528%" y="165" width="0.0429%" height="15" fill="rgb(246,171,24)" fg:x="232" fg:w="1"/><text x="10.2028%" y="175.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::bias_node::BiasNode as model::node::Node&gt;::apply_jacobian (3 samples, 0.13%)</title><rect x="9.9099%" y="261" width="0.1287%" height="15" fill="rgb(215,142,24)" fg:x="231" fg:w="3"/><text x="10.1599%" y="271.50"></text></g><g><title>mnist-trainer.exe`model::node::node_base::NodeBase::process_gradient (3 samples, 0.13%)</title><rect x="9.9099%" y="245" width="0.1287%" height="15" fill="rgb(250,187,7)" fg:x="231" fg:w="3"/><text x="10.1599%" y="255.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::minus (1 samples, 0.04%)</title><rect x="9.9957%" y="229" width="0.0429%" height="15" fill="rgb(228,66,33)" fg:x="233" fg:w="1"/><text x="10.2457%" y="239.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::minus (1 samples, 0.04%)</title><rect x="9.9957%" y="213" width="0.0429%" height="15" fill="rgb(234,215,21)" fg:x="233" fg:w="1"/><text x="10.2457%" y="223.50"></text></g><g><title>`0x7FFB505F541D (1 samples, 0.04%)</title><rect x="10.1673%" y="245" width="0.0429%" height="15" fill="rgb(222,191,20)" fg:x="237" fg:w="1"/><text x="10.4173%" y="255.50"></text></g><g><title>`0x7FFB505F5431 (1 samples, 0.04%)</title><rect x="10.2102%" y="245" width="0.0429%" height="15" fill="rgb(245,79,54)" fg:x="238" fg:w="1"/><text x="10.4602%" y="255.50"></text></g><g><title>`0x7FFB505F5434 (1 samples, 0.04%)</title><rect x="10.2531%" y="245" width="0.0429%" height="15" fill="rgb(240,10,37)" fg:x="239" fg:w="1"/><text x="10.5031%" y="255.50"></text></g><g><title>`0x7FFB505F55D9 (1 samples, 0.04%)</title><rect x="10.2960%" y="245" width="0.0429%" height="15" fill="rgb(214,192,32)" fg:x="240" fg:w="1"/><text x="10.5460%" y="255.50"></text></g><g><title>`0x7FFB50574828 (1 samples, 0.04%)</title><rect x="10.3389%" y="229" width="0.0429%" height="15" fill="rgb(209,36,54)" fg:x="241" fg:w="1"/><text x="10.5889%" y="239.50"></text></g><g><title>`0x7FFB50577FB8 (1 samples, 0.04%)</title><rect x="10.3818%" y="197" width="0.0429%" height="15" fill="rgb(220,10,11)" fg:x="242" fg:w="1"/><text x="10.6318%" y="207.50"></text></g><g><title>`0x7FFB50578000 (1 samples, 0.04%)</title><rect x="10.4247%" y="197" width="0.0429%" height="15" fill="rgb(221,106,17)" fg:x="243" fg:w="1"/><text x="10.6747%" y="207.50"></text></g><g><title>`0x7FFB5064B449 (146 samples, 6.26%)</title><rect x="10.4676%" y="181" width="6.2634%" height="15" fill="rgb(251,142,44)" fg:x="244" fg:w="146"/><text x="10.7176%" y="191.50">`0x7FFB5..</text></g><g><title>`0x7FFB506C2C74 (146 samples, 6.26%)</title><rect x="10.4676%" y="165" width="6.2634%" height="15" fill="rgb(238,13,15)" fg:x="244" fg:w="146"/><text x="10.7176%" y="175.50">`0x7FFB5..</text></g><g><title>`0x7FFB5064B490 (1 samples, 0.04%)</title><rect x="16.7310%" y="181" width="0.0429%" height="15" fill="rgb(208,107,27)" fg:x="390" fg:w="1"/><text x="16.9810%" y="191.50"></text></g><g><title>`0x7FFB505F1BC9 (1 samples, 0.04%)</title><rect x="16.7310%" y="165" width="0.0429%" height="15" fill="rgb(205,136,37)" fg:x="390" fg:w="1"/><text x="16.9810%" y="175.50"></text></g><g><title>`0x7FFB5057801E (148 samples, 6.35%)</title><rect x="10.4676%" y="197" width="6.3492%" height="15" fill="rgb(250,205,27)" fg:x="244" fg:w="148"/><text x="10.7176%" y="207.50">`0x7FFB5..</text></g><g><title>`0x7FFB5064B51C (1 samples, 0.04%)</title><rect x="16.7739%" y="181" width="0.0429%" height="15" fill="rgb(210,80,43)" fg:x="391" fg:w="1"/><text x="17.0239%" y="191.50"></text></g><g><title>`0x7FFB505749D6 (151 samples, 6.48%)</title><rect x="10.3818%" y="229" width="6.4779%" height="15" fill="rgb(247,160,36)" fg:x="242" fg:w="151"/><text x="10.6318%" y="239.50">`0x7FFB5..</text></g><g><title>`0x7FFB50589B68 (151 samples, 6.48%)</title><rect x="10.3818%" y="213" width="6.4779%" height="15" fill="rgb(234,13,49)" fg:x="242" fg:w="151"/><text x="10.6318%" y="223.50">`0x7FFB5..</text></g><g><title>`0x7FFB5057803E (1 samples, 0.04%)</title><rect x="16.8168%" y="197" width="0.0429%" height="15" fill="rgb(234,122,0)" fg:x="392" fg:w="1"/><text x="17.0668%" y="207.50"></text></g><g><title>`0x7FFB50575205 (6 samples, 0.26%)</title><rect x="16.8597%" y="229" width="0.2574%" height="15" fill="rgb(207,146,38)" fg:x="393" fg:w="6"/><text x="17.1097%" y="239.50"></text></g><g><title>`0x7FFB505892C8 (6 samples, 0.26%)</title><rect x="16.8597%" y="213" width="0.2574%" height="15" fill="rgb(207,177,25)" fg:x="393" fg:w="6"/><text x="17.1097%" y="223.50"></text></g><g><title>`0x7FFB506C2BB4 (6 samples, 0.26%)</title><rect x="16.8597%" y="197" width="0.2574%" height="15" fill="rgb(211,178,42)" fg:x="393" fg:w="6"/><text x="17.1097%" y="207.50"></text></g><g><title>`0x7FFB505F5960 (160 samples, 6.86%)</title><rect x="10.3389%" y="245" width="6.8640%" height="15" fill="rgb(230,69,54)" fg:x="241" fg:w="160"/><text x="10.5889%" y="255.50">`0x7FFB50..</text></g><g><title>`0x7FFB505758E7 (2 samples, 0.09%)</title><rect x="17.1171%" y="229" width="0.0858%" height="15" fill="rgb(214,135,41)" fg:x="399" fg:w="2"/><text x="17.3671%" y="239.50"></text></g><g><title>`0x7FFB505892C8 (2 samples, 0.09%)</title><rect x="17.1171%" y="213" width="0.0858%" height="15" fill="rgb(237,67,25)" fg:x="399" fg:w="2"/><text x="17.3671%" y="223.50"></text></g><g><title>`0x7FFB506C2BB4 (2 samples, 0.09%)</title><rect x="17.1171%" y="197" width="0.0858%" height="15" fill="rgb(222,189,50)" fg:x="399" fg:w="2"/><text x="17.3671%" y="207.50"></text></g><g><title>`0x7FFB505744A6 (1 samples, 0.04%)</title><rect x="17.2029%" y="197" width="0.0429%" height="15" fill="rgb(245,148,34)" fg:x="401" fg:w="1"/><text x="17.4529%" y="207.50"></text></g><g><title>`0x7FFB50589758 (1 samples, 0.04%)</title><rect x="17.2458%" y="181" width="0.0429%" height="15" fill="rgb(222,29,6)" fg:x="402" fg:w="1"/><text x="17.4958%" y="191.50"></text></g><g><title>`0x7FFB5064B449 (38 samples, 1.63%)</title><rect x="17.2887%" y="149" width="1.6302%" height="15" fill="rgb(221,189,43)" fg:x="403" fg:w="38"/><text x="17.5387%" y="159.50"></text></g><g><title>`0x7FFB506C2C74 (38 samples, 1.63%)</title><rect x="17.2887%" y="133" width="1.6302%" height="15" fill="rgb(207,36,27)" fg:x="403" fg:w="38"/><text x="17.5387%" y="143.50"></text></g><g><title>`0x7FFB505F5960 (41 samples, 1.76%)</title><rect x="17.2029%" y="213" width="1.7589%" height="15" fill="rgb(217,90,24)" fg:x="401" fg:w="41"/><text x="17.4529%" y="223.50"></text></g><g><title>`0x7FFB505749D6 (40 samples, 1.72%)</title><rect x="17.2458%" y="197" width="1.7160%" height="15" fill="rgb(224,66,35)" fg:x="402" fg:w="40"/><text x="17.4958%" y="207.50"></text></g><g><title>`0x7FFB50589B68 (39 samples, 1.67%)</title><rect x="17.2887%" y="181" width="1.6731%" height="15" fill="rgb(221,13,50)" fg:x="403" fg:w="39"/><text x="17.5387%" y="191.50"></text></g><g><title>`0x7FFB5057801E (39 samples, 1.67%)</title><rect x="17.2887%" y="165" width="1.6731%" height="15" fill="rgb(236,68,49)" fg:x="403" fg:w="39"/><text x="17.5387%" y="175.50"></text></g><g><title>`0x7FFB5064B44B (1 samples, 0.04%)</title><rect x="18.9189%" y="149" width="0.0429%" height="15" fill="rgb(229,146,28)" fg:x="441" fg:w="1"/><text x="19.1689%" y="159.50"></text></g><g><title>`0x7FFB505A5B10 (3 samples, 0.13%)</title><rect x="22.4367%" y="133" width="0.1287%" height="15" fill="rgb(225,31,38)" fg:x="523" fg:w="3"/><text x="22.6867%" y="143.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_methods::&lt;impl ndarray::ArrayBase (84 samples, 3.60%)</title><rect x="19.0047%" y="181" width="3.6036%" height="15" fill="rgb(250,208,3)" fg:x="443" fg:w="84"/><text x="19.2547%" y="191.50">mnis..</text></g><g><title>`0x7FFB5056F164 (4 samples, 0.17%)</title><rect x="22.4367%" y="165" width="0.1716%" height="15" fill="rgb(246,54,23)" fg:x="523" fg:w="4"/><text x="22.6867%" y="175.50"></text></g><g><title>`0x7FFB5056F591 (4 samples, 0.17%)</title><rect x="22.4367%" y="149" width="0.1716%" height="15" fill="rgb(243,76,11)" fg:x="523" fg:w="4"/><text x="22.6867%" y="159.50"></text></g><g><title>`0x7FFB505A5F0D (1 samples, 0.04%)</title><rect x="22.5654%" y="133" width="0.0429%" height="15" fill="rgb(245,21,50)" fg:x="526" fg:w="1"/><text x="22.8154%" y="143.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_constructors::&lt;impl ndarray::ArrayBase (4 samples, 0.17%)</title><rect x="22.6083%" y="149" width="0.1716%" height="15" fill="rgb(228,9,43)" fg:x="527" fg:w="4"/><text x="22.8583%" y="159.50"></text></g><g><title>`0x7FFB5056F164 (4 samples, 0.17%)</title><rect x="22.6083%" y="133" width="0.1716%" height="15" fill="rgb(208,100,47)" fg:x="527" fg:w="4"/><text x="22.8583%" y="143.50"></text></g><g><title>`0x7FFB5056F591 (4 samples, 0.17%)</title><rect x="22.6083%" y="117" width="0.1716%" height="15" fill="rgb(232,26,8)" fg:x="527" fg:w="4"/><text x="22.8583%" y="127.50"></text></g><g><title>`0x7FFB505A5B10 (4 samples, 0.17%)</title><rect x="22.6083%" y="101" width="0.1716%" height="15" fill="rgb(216,166,38)" fg:x="527" fg:w="4"/><text x="22.8583%" y="111.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::plus (201 samples, 8.62%)</title><rect x="19.0047%" y="197" width="8.6229%" height="15" fill="rgb(251,202,51)" fg:x="443" fg:w="201"/><text x="19.2547%" y="207.50">mnist-traine..</text></g><g><title>mnist-trainer.exe`ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase (117 samples, 5.02%)</title><rect x="22.6083%" y="181" width="5.0193%" height="15" fill="rgb(254,216,34)" fg:x="527" fg:w="117"/><text x="22.8583%" y="191.50">mnist-..</text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (117 samples, 5.02%)</title><rect x="22.6083%" y="165" width="5.0193%" height="15" fill="rgb(251,32,27)" fg:x="527" fg:w="117"/><text x="22.8583%" y="175.50">mnist-..</text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (113 samples, 4.85%)</title><rect x="22.7799%" y="149" width="4.8477%" height="15" fill="rgb(208,127,28)" fg:x="531" fg:w="113"/><text x="23.0299%" y="159.50">mnist-..</text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::average_batch (210 samples, 9.01%)</title><rect x="18.9618%" y="213" width="9.0090%" height="15" fill="rgb(224,137,22)" fg:x="442" fg:w="210"/><text x="19.2118%" y="223.50">mnist-trainer..</text></g><g><title>mnist-trainer.exe`model::data::Data::times (8 samples, 0.34%)</title><rect x="27.6276%" y="197" width="0.3432%" height="15" fill="rgb(254,70,32)" fg:x="644" fg:w="8"/><text x="27.8776%" y="207.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_methods::&lt;impl ndarray::ArrayBase (8 samples, 0.34%)</title><rect x="27.6276%" y="181" width="0.3432%" height="15" fill="rgb(229,75,37)" fg:x="644" fg:w="8"/><text x="27.8776%" y="191.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_constructors::&lt;impl ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="27.9708%" y="149" width="0.0429%" height="15" fill="rgb(252,64,23)" fg:x="652" fg:w="1"/><text x="28.2208%" y="159.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="27.9708%" y="133" width="0.0429%" height="15" fill="rgb(232,162,48)" fg:x="652" fg:w="1"/><text x="28.2208%" y="143.50"></text></g><g><title>`0x7FFB5056F591 (1 samples, 0.04%)</title><rect x="27.9708%" y="117" width="0.0429%" height="15" fill="rgb(246,160,12)" fg:x="652" fg:w="1"/><text x="28.2208%" y="127.50"></text></g><g><title>`0x7FFB505A5B10 (1 samples, 0.04%)</title><rect x="27.9708%" y="101" width="0.0429%" height="15" fill="rgb(247,166,0)" fg:x="652" fg:w="1"/><text x="28.2208%" y="111.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::minus (83 samples, 3.56%)</title><rect x="27.9708%" y="213" width="3.5607%" height="15" fill="rgb(249,219,21)" fg:x="652" fg:w="83"/><text x="28.2208%" y="223.50">mnis..</text></g><g><title>mnist-trainer.exe`model::data::Data::minus (83 samples, 3.56%)</title><rect x="27.9708%" y="197" width="3.5607%" height="15" fill="rgb(205,209,3)" fg:x="652" fg:w="83"/><text x="28.2208%" y="207.50">mnis..</text></g><g><title>mnist-trainer.exe`ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Sub&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase (83 samples, 3.56%)</title><rect x="27.9708%" y="181" width="3.5607%" height="15" fill="rgb(243,44,1)" fg:x="652" fg:w="83"/><text x="28.2208%" y="191.50">mnis..</text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (83 samples, 3.56%)</title><rect x="27.9708%" y="165" width="3.5607%" height="15" fill="rgb(206,159,16)" fg:x="652" fg:w="83"/><text x="28.2208%" y="175.50">mnis..</text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (82 samples, 3.52%)</title><rect x="28.0137%" y="149" width="3.5178%" height="15" fill="rgb(244,77,30)" fg:x="653" fg:w="82"/><text x="28.2637%" y="159.50">mni..</text></g><g><title>mnist-trainer.exe`ndarray::impl_constructors::&lt;impl ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="31.5744%" y="149" width="0.0429%" height="15" fill="rgb(218,69,12)" fg:x="736" fg:w="1"/><text x="31.8244%" y="159.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="31.5744%" y="133" width="0.0429%" height="15" fill="rgb(212,87,7)" fg:x="736" fg:w="1"/><text x="31.8244%" y="143.50"></text></g><g><title>`0x7FFB5056F591 (1 samples, 0.04%)</title><rect x="31.5744%" y="117" width="0.0429%" height="15" fill="rgb(245,114,25)" fg:x="736" fg:w="1"/><text x="31.8244%" y="127.50"></text></g><g><title>`0x7FFB505A68E4 (1 samples, 0.04%)</title><rect x="31.5744%" y="101" width="0.0429%" height="15" fill="rgb(210,61,42)" fg:x="736" fg:w="1"/><text x="31.8244%" y="111.50"></text></g><g><title>`0x7FFB505892C8 (1 samples, 0.04%)</title><rect x="31.5744%" y="85" width="0.0429%" height="15" fill="rgb(211,52,33)" fg:x="736" fg:w="1"/><text x="31.8244%" y="95.50"></text></g><g><title>`0x7FFB506C2BB4 (1 samples, 0.04%)</title><rect x="31.5744%" y="69" width="0.0429%" height="15" fill="rgb(234,58,33)" fg:x="736" fg:w="1"/><text x="31.8244%" y="79.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::plus (50 samples, 2.15%)</title><rect x="31.5315%" y="213" width="2.1450%" height="15" fill="rgb(220,115,36)" fg:x="735" fg:w="50"/><text x="31.7815%" y="223.50">m..</text></g><g><title>mnist-trainer.exe`model::data::Data::plus (49 samples, 2.10%)</title><rect x="31.5744%" y="197" width="2.1021%" height="15" fill="rgb(243,153,54)" fg:x="736" fg:w="49"/><text x="31.8244%" y="207.50">m..</text></g><g><title>mnist-trainer.exe`ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase (49 samples, 2.10%)</title><rect x="31.5744%" y="181" width="2.1021%" height="15" fill="rgb(251,47,18)" fg:x="736" fg:w="49"/><text x="31.8244%" y="191.50">m..</text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (49 samples, 2.10%)</title><rect x="31.5744%" y="165" width="2.1021%" height="15" fill="rgb(242,102,42)" fg:x="736" fg:w="49"/><text x="31.8244%" y="175.50">m..</text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (48 samples, 2.06%)</title><rect x="31.6173%" y="149" width="2.0592%" height="15" fill="rgb(234,31,38)" fg:x="737" fg:w="48"/><text x="31.8673%" y="159.50">m..</text></g><g><title>mnist-trainer.exe`&lt;model::node::types::bias_node::BiasNode as model::node::Node&gt;::apply_jacobian (410 samples, 17.59%)</title><rect x="17.2029%" y="245" width="17.5890%" height="15" fill="rgb(221,117,51)" fg:x="401" fg:w="410"/><text x="17.4529%" y="255.50">mnist-trainer.exe`&lt;model::n..</text></g><g><title>mnist-trainer.exe`model::node::node_base::NodeBase::process_momentum (410 samples, 17.59%)</title><rect x="17.2029%" y="229" width="17.5890%" height="15" fill="rgb(212,20,18)" fg:x="401" fg:w="410"/><text x="17.4529%" y="239.50">mnist-trainer.exe`model::no..</text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::times (26 samples, 1.12%)</title><rect x="33.6765%" y="213" width="1.1154%" height="15" fill="rgb(245,133,36)" fg:x="785" fg:w="26"/><text x="33.9265%" y="223.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::times (26 samples, 1.12%)</title><rect x="33.6765%" y="197" width="1.1154%" height="15" fill="rgb(212,6,19)" fg:x="785" fg:w="26"/><text x="33.9265%" y="207.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_methods::&lt;impl ndarray::ArrayBase (26 samples, 1.12%)</title><rect x="33.6765%" y="181" width="1.1154%" height="15" fill="rgb(218,1,36)" fg:x="785" fg:w="26"/><text x="33.9265%" y="191.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::input_node::InputNode as model::node::Node&gt;::get_data (1 samples, 0.04%)</title><rect x="34.7919%" y="245" width="0.0429%" height="15" fill="rgb(246,84,54)" fg:x="811" fg:w="1"/><text x="35.0419%" y="255.50"></text></g><g><title>mnist-trainer.exe`&lt;model::data::data_container::DataContainer as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="34.7919%" y="229" width="0.0429%" height="15" fill="rgb(242,110,6)" fg:x="811" fg:w="1"/><text x="35.0419%" y="239.50"></text></g><g><title>mnist-trainer.exe`&lt;alloc::vec::Vec (1 samples, 0.04%)</title><rect x="34.7919%" y="213" width="0.0429%" height="15" fill="rgb(214,47,5)" fg:x="811" fg:w="1"/><text x="35.0419%" y="223.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="34.7919%" y="197" width="0.0429%" height="15" fill="rgb(218,159,25)" fg:x="811" fg:w="1"/><text x="35.0419%" y="207.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="34.7919%" y="181" width="0.0429%" height="15" fill="rgb(215,211,28)" fg:x="811" fg:w="1"/><text x="35.0419%" y="191.50"></text></g><g><title>`0x7FFB5056FB80 (1 samples, 0.04%)</title><rect x="34.7919%" y="165" width="0.0429%" height="15" fill="rgb(238,59,32)" fg:x="811" fg:w="1"/><text x="35.0419%" y="175.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_methods::&lt;impl ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="34.8348%" y="197" width="0.0429%" height="15" fill="rgb(226,82,3)" fg:x="812" fg:w="1"/><text x="35.0848%" y="207.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::weight_node::WeightNode as model::node::Node&gt;::get_data (108 samples, 4.63%)</title><rect x="34.8348%" y="245" width="4.6332%" height="15" fill="rgb(240,164,32)" fg:x="812" fg:w="108"/><text x="35.0848%" y="255.50">mnist..</text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::plus (108 samples, 4.63%)</title><rect x="34.8348%" y="229" width="4.6332%" height="15" fill="rgb(232,46,7)" fg:x="812" fg:w="108"/><text x="35.0848%" y="239.50">mnist..</text></g><g><title>mnist-trainer.exe`model::data::Data::plus (108 samples, 4.63%)</title><rect x="34.8348%" y="213" width="4.6332%" height="15" fill="rgb(229,129,53)" fg:x="812" fg:w="108"/><text x="35.0848%" y="223.50">mnist..</text></g><g><title>mnist-trainer.exe`ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase (107 samples, 4.59%)</title><rect x="34.8777%" y="197" width="4.5903%" height="15" fill="rgb(234,188,29)" fg:x="813" fg:w="107"/><text x="35.1277%" y="207.50">mnist..</text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (107 samples, 4.59%)</title><rect x="34.8777%" y="181" width="4.5903%" height="15" fill="rgb(246,141,4)" fg:x="813" fg:w="107"/><text x="35.1277%" y="191.50">mnist..</text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (106 samples, 4.55%)</title><rect x="34.9206%" y="165" width="4.5474%" height="15" fill="rgb(229,23,39)" fg:x="814" fg:w="106"/><text x="35.1706%" y="175.50">mnist..</text></g><g><title>`0x7FFB3F2C007B (114 samples, 4.89%)</title><rect x="39.4680%" y="213" width="4.8906%" height="15" fill="rgb(206,12,3)" fg:x="920" fg:w="114"/><text x="39.7180%" y="223.50">`0x7FF..</text></g><g><title>`0x7FFB505A5B10 (1 samples, 0.04%)</title><rect x="44.3586%" y="181" width="0.0429%" height="15" fill="rgb(252,226,20)" fg:x="1034" fg:w="1"/><text x="44.6086%" y="191.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::transpose (116 samples, 4.98%)</title><rect x="39.4680%" y="245" width="4.9764%" height="15" fill="rgb(216,123,35)" fg:x="920" fg:w="116"/><text x="39.7180%" y="255.50">mnist-..</text></g><g><title>mnist-trainer.exe`ndarray::impl_methods::&lt;impl ndarray::ArrayBase (116 samples, 4.98%)</title><rect x="39.4680%" y="229" width="4.9764%" height="15" fill="rgb(212,68,40)" fg:x="920" fg:w="116"/><text x="39.7180%" y="239.50">mnist-..</text></g><g><title>`0x7FFB5056F164 (2 samples, 0.09%)</title><rect x="44.3586%" y="213" width="0.0858%" height="15" fill="rgb(254,125,32)" fg:x="1034" fg:w="2"/><text x="44.6086%" y="223.50"></text></g><g><title>`0x7FFB5056F591 (2 samples, 0.09%)</title><rect x="44.3586%" y="197" width="0.0858%" height="15" fill="rgb(253,97,22)" fg:x="1034" fg:w="2"/><text x="44.6086%" y="207.50"></text></g><g><title>`0x7FFB505A6117 (1 samples, 0.04%)</title><rect x="44.4015%" y="181" width="0.0429%" height="15" fill="rgb(241,101,14)" fg:x="1035" fg:w="1"/><text x="44.6515%" y="191.50"></text></g><g><title>`0x7FFB505A5B10 (2 samples, 0.09%)</title><rect x="44.4444%" y="149" width="0.0858%" height="15" fill="rgb(238,103,29)" fg:x="1036" fg:w="2"/><text x="44.6944%" y="159.50"></text></g><g><title>`0x7FFB505A6133 (1 samples, 0.04%)</title><rect x="44.5302%" y="149" width="0.0429%" height="15" fill="rgb(233,195,47)" fg:x="1038" fg:w="1"/><text x="44.7802%" y="159.50"></text></g><g><title>`0x7FFB505892C8 (2 samples, 0.09%)</title><rect x="44.5731%" y="133" width="0.0858%" height="15" fill="rgb(246,218,30)" fg:x="1039" fg:w="2"/><text x="44.8231%" y="143.50"></text></g><g><title>`0x7FFB506C2BB4 (2 samples, 0.09%)</title><rect x="44.5731%" y="117" width="0.0858%" height="15" fill="rgb(219,145,47)" fg:x="1039" fg:w="2"/><text x="44.8231%" y="127.50"></text></g><g><title>`0x7FFB5056F164 (6 samples, 0.26%)</title><rect x="44.4444%" y="181" width="0.2574%" height="15" fill="rgb(243,12,26)" fg:x="1036" fg:w="6"/><text x="44.6944%" y="191.50"></text></g><g><title>`0x7FFB5056F591 (6 samples, 0.26%)</title><rect x="44.4444%" y="165" width="0.2574%" height="15" fill="rgb(214,87,16)" fg:x="1036" fg:w="6"/><text x="44.6944%" y="175.50"></text></g><g><title>`0x7FFB505A68E4 (3 samples, 0.13%)</title><rect x="44.5731%" y="149" width="0.1287%" height="15" fill="rgb(208,99,42)" fg:x="1039" fg:w="3"/><text x="44.8231%" y="159.50"></text></g><g><title>`0x7FFB505892D0 (1 samples, 0.04%)</title><rect x="44.6589%" y="133" width="0.0429%" height="15" fill="rgb(253,99,2)" fg:x="1041" fg:w="1"/><text x="44.9089%" y="143.50"></text></g><g><title>`0x7FFB505F5960 (1 samples, 0.04%)</title><rect x="44.7018%" y="181" width="0.0429%" height="15" fill="rgb(220,168,23)" fg:x="1042" fg:w="1"/><text x="44.9518%" y="191.50"></text></g><g><title>`0x7FFB50574518 (1 samples, 0.04%)</title><rect x="44.7018%" y="165" width="0.0429%" height="15" fill="rgb(242,38,24)" fg:x="1042" fg:w="1"/><text x="44.9518%" y="175.50"></text></g><g><title>`0x7FFB50575CF7 (1 samples, 0.04%)</title><rect x="44.7018%" y="149" width="0.0429%" height="15" fill="rgb(225,182,9)" fg:x="1042" fg:w="1"/><text x="44.9518%" y="159.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::packing::pack_avx2 (1 samples, 0.04%)</title><rect x="44.7447%" y="165" width="0.0429%" height="15" fill="rgb(243,178,37)" fg:x="1043" fg:w="1"/><text x="44.9947%" y="175.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::masked_kernel (15 samples, 0.64%)</title><rect x="46.3749%" y="149" width="0.6435%" height="15" fill="rgb(232,139,19)" fg:x="1081" fg:w="15"/><text x="46.6249%" y="159.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::sgemm_kernel::kernel_target_fma (12 samples, 0.51%)</title><rect x="46.5036%" y="133" width="0.5148%" height="15" fill="rgb(225,201,24)" fg:x="1084" fg:w="12"/><text x="46.7536%" y="143.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::threading::RangeChunkParallel (403 samples, 17.29%)</title><rect x="44.7876%" y="165" width="17.2887%" height="15" fill="rgb(221,47,46)" fg:x="1044" fg:w="403"/><text x="45.0376%" y="175.50">mnist-trainer.exe`matrixmul..</text></g><g><title>mnist-trainer.exe`matrixmultiply::sgemm_kernel::kernel_target_fma (351 samples, 15.06%)</title><rect x="47.0184%" y="149" width="15.0579%" height="15" fill="rgb(249,23,13)" fg:x="1096" fg:w="351"/><text x="47.2684%" y="159.50">mnist-trainer.exe`matri..</text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="62.0764%" y="117" width="0.0429%" height="15" fill="rgb(219,9,5)" fg:x="1447" fg:w="1"/><text x="62.3264%" y="127.50"></text></g><g><title>`0x7FFB5056F591 (1 samples, 0.04%)</title><rect x="62.0764%" y="101" width="0.0429%" height="15" fill="rgb(254,171,16)" fg:x="1447" fg:w="1"/><text x="62.3264%" y="111.50"></text></g><g><title>`0x7FFB505A5AEE (1 samples, 0.04%)</title><rect x="62.0764%" y="85" width="0.0429%" height="15" fill="rgb(230,171,20)" fg:x="1447" fg:w="1"/><text x="62.3264%" y="95.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::operations::matmul::ContainerMatMul::matmul_batches (413 samples, 17.72%)</title><rect x="44.4444%" y="229" width="17.7177%" height="15" fill="rgb(210,71,41)" fg:x="1036" fg:w="413"/><text x="44.6944%" y="239.50">mnist-trainer.exe`model::dat..</text></g><g><title>mnist-trainer.exe`model::data::Data::matmul (413 samples, 17.72%)</title><rect x="44.4444%" y="213" width="17.7177%" height="15" fill="rgb(206,173,20)" fg:x="1036" fg:w="413"/><text x="44.6944%" y="223.50">mnist-trainer.exe`model::dat..</text></g><g><title>mnist-trainer.exe`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim (413 samples, 17.72%)</title><rect x="44.4444%" y="197" width="17.7177%" height="15" fill="rgb(233,88,34)" fg:x="1036" fg:w="413"/><text x="44.6944%" y="207.50">mnist-trainer.exe`&lt;ndarray::..</text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::gemm_loop (406 samples, 17.42%)</title><rect x="44.7447%" y="181" width="17.4174%" height="15" fill="rgb(223,209,46)" fg:x="1043" fg:w="406"/><text x="44.9947%" y="191.50">mnist-trainer.exe`matrixmul..</text></g><g><title>mnist-trainer.exe`std::alloc::__default_lib_allocator::__rdl_alloc (2 samples, 0.09%)</title><rect x="62.0764%" y="165" width="0.0858%" height="15" fill="rgb(250,43,18)" fg:x="1447" fg:w="2"/><text x="62.3264%" y="175.50"></text></g><g><title>mnist-trainer.exe`std::sys::alloc::windows::impl$0::alloc (2 samples, 0.09%)</title><rect x="62.0764%" y="149" width="0.0858%" height="15" fill="rgb(208,13,10)" fg:x="1447" fg:w="2"/><text x="62.3264%" y="159.50"></text></g><g><title>mnist-trainer.exe`std::sys::alloc::windows::allocate (2 samples, 0.09%)</title><rect x="62.0764%" y="133" width="0.0858%" height="15" fill="rgb(212,200,36)" fg:x="1447" fg:w="2"/><text x="62.3264%" y="143.50"></text></g><g><title>`0x7FFB5056F17A (1 samples, 0.04%)</title><rect x="62.1193%" y="117" width="0.0429%" height="15" fill="rgb(225,90,30)" fg:x="1448" fg:w="1"/><text x="62.3693%" y="127.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::RawVec (2 samples, 0.09%)</title><rect x="62.1622%" y="213" width="0.0858%" height="15" fill="rgb(236,182,39)" fg:x="1449" fg:w="2"/><text x="62.4122%" y="223.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="62.2051%" y="197" width="0.0429%" height="15" fill="rgb(212,144,35)" fg:x="1450" fg:w="1"/><text x="62.4551%" y="207.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="62.2051%" y="181" width="0.0429%" height="15" fill="rgb(228,63,44)" fg:x="1450" fg:w="1"/><text x="62.4551%" y="191.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="62.2051%" y="165" width="0.0429%" height="15" fill="rgb(228,109,6)" fg:x="1450" fg:w="1"/><text x="62.4551%" y="175.50"></text></g><g><title>`0x7FFB5056FBC0 (1 samples, 0.04%)</title><rect x="62.2051%" y="149" width="0.0429%" height="15" fill="rgb(238,117,24)" fg:x="1450" fg:w="1"/><text x="62.4551%" y="159.50"></text></g><g><title>`0x7FFB5056F921 (1 samples, 0.04%)</title><rect x="62.2480%" y="133" width="0.0429%" height="15" fill="rgb(242,26,26)" fg:x="1451" fg:w="1"/><text x="62.4980%" y="143.50"></text></g><g><title>`0x7FFB5056F164 (2 samples, 0.09%)</title><rect x="62.2480%" y="165" width="0.0858%" height="15" fill="rgb(221,92,48)" fg:x="1451" fg:w="2"/><text x="62.4980%" y="175.50"></text></g><g><title>`0x7FFB5056F2A4 (2 samples, 0.09%)</title><rect x="62.2480%" y="149" width="0.0858%" height="15" fill="rgb(209,209,32)" fg:x="1451" fg:w="2"/><text x="62.4980%" y="159.50"></text></g><g><title>`0x7FFB5056FB69 (1 samples, 0.04%)</title><rect x="62.2909%" y="133" width="0.0429%" height="15" fill="rgb(221,70,22)" fg:x="1452" fg:w="1"/><text x="62.5409%" y="143.50"></text></g><g><title>`0x7FFB50574585 (1 samples, 0.04%)</title><rect x="62.3338%" y="149" width="0.0429%" height="15" fill="rgb(248,145,5)" fg:x="1453" fg:w="1"/><text x="62.5838%" y="159.50"></text></g><g><title>`0x7FFB5057881E (1 samples, 0.04%)</title><rect x="62.3767%" y="117" width="0.0429%" height="15" fill="rgb(226,116,26)" fg:x="1454" fg:w="1"/><text x="62.6267%" y="127.50"></text></g><g><title>`0x7FFB505F5960 (3 samples, 0.13%)</title><rect x="62.3338%" y="165" width="0.1287%" height="15" fill="rgb(244,5,17)" fg:x="1453" fg:w="3"/><text x="62.5838%" y="175.50"></text></g><g><title>`0x7FFB505749D6 (2 samples, 0.09%)</title><rect x="62.3767%" y="149" width="0.0858%" height="15" fill="rgb(252,159,33)" fg:x="1454" fg:w="2"/><text x="62.6267%" y="159.50"></text></g><g><title>`0x7FFB5058988F (2 samples, 0.09%)</title><rect x="62.3767%" y="133" width="0.0858%" height="15" fill="rgb(206,71,0)" fg:x="1454" fg:w="2"/><text x="62.6267%" y="143.50"></text></g><g><title>`0x7FFB50578AC9 (1 samples, 0.04%)</title><rect x="62.4196%" y="117" width="0.0429%" height="15" fill="rgb(233,118,54)" fg:x="1455" fg:w="1"/><text x="62.6696%" y="127.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::packing::pack_avx2 (17 samples, 0.73%)</title><rect x="62.5054%" y="149" width="0.7293%" height="15" fill="rgb(234,83,48)" fg:x="1457" fg:w="17"/><text x="62.7554%" y="159.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::threading::RangeChunkParallel (67 samples, 2.87%)</title><rect x="63.2347%" y="149" width="2.8743%" height="15" fill="rgb(228,3,54)" fg:x="1474" fg:w="67"/><text x="63.4847%" y="159.50">mn..</text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::masked_kernel (64 samples, 2.75%)</title><rect x="63.3634%" y="133" width="2.7456%" height="15" fill="rgb(226,155,13)" fg:x="1477" fg:w="64"/><text x="63.6134%" y="143.50">mn..</text></g><g><title>mnist-trainer.exe`matrixmultiply::sgemm_kernel::kernel_target_fma (60 samples, 2.57%)</title><rect x="63.5350%" y="117" width="2.5740%" height="15" fill="rgb(241,28,37)" fg:x="1481" fg:w="60"/><text x="63.7850%" y="127.50">mn..</text></g><g><title>`0x7FFB505A5B10 (3 samples, 0.13%)</title><rect x="66.1090%" y="69" width="0.1287%" height="15" fill="rgb(233,93,10)" fg:x="1541" fg:w="3"/><text x="66.3590%" y="79.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::matmul (509 samples, 21.84%)</title><rect x="44.4444%" y="245" width="21.8361%" height="15" fill="rgb(225,113,19)" fg:x="1036" fg:w="509"/><text x="44.6944%" y="255.50">mnist-trainer.exe`model::data::data..</text></g><g><title>mnist-trainer.exe`model::data::data_container::operations::matmul::ContainerMatMul::matmul_data_batch (96 samples, 4.12%)</title><rect x="62.1622%" y="229" width="4.1184%" height="15" fill="rgb(241,2,18)" fg:x="1449" fg:w="96"/><text x="62.4122%" y="239.50">mnis..</text></g><g><title>mnist-trainer.exe`model::data::Data::matmul (94 samples, 4.03%)</title><rect x="62.2480%" y="213" width="4.0326%" height="15" fill="rgb(228,207,21)" fg:x="1451" fg:w="94"/><text x="62.4980%" y="223.50">mnis..</text></g><g><title>mnist-trainer.exe`model::data::operations::matmul::DataMatMul::matmul_matrix_vector (94 samples, 4.03%)</title><rect x="62.2480%" y="197" width="4.0326%" height="15" fill="rgb(213,211,35)" fg:x="1451" fg:w="94"/><text x="62.4980%" y="207.50">mnis..</text></g><g><title>mnist-trainer.exe`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim (94 samples, 4.03%)</title><rect x="62.2480%" y="181" width="4.0326%" height="15" fill="rgb(209,83,10)" fg:x="1451" fg:w="94"/><text x="62.4980%" y="191.50">mnis..</text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::gemm_loop (89 samples, 3.82%)</title><rect x="62.4625%" y="165" width="3.8181%" height="15" fill="rgb(209,164,1)" fg:x="1456" fg:w="89"/><text x="62.7125%" y="175.50">mnis..</text></g><g><title>mnist-trainer.exe`std::alloc::__default_lib_allocator::__rdl_alloc (4 samples, 0.17%)</title><rect x="66.1090%" y="149" width="0.1716%" height="15" fill="rgb(213,184,43)" fg:x="1541" fg:w="4"/><text x="66.3590%" y="159.50"></text></g><g><title>mnist-trainer.exe`std::sys::alloc::windows::impl$0::alloc (4 samples, 0.17%)</title><rect x="66.1090%" y="133" width="0.1716%" height="15" fill="rgb(231,61,34)" fg:x="1541" fg:w="4"/><text x="66.3590%" y="143.50"></text></g><g><title>mnist-trainer.exe`std::sys::alloc::windows::allocate (4 samples, 0.17%)</title><rect x="66.1090%" y="117" width="0.1716%" height="15" fill="rgb(235,75,3)" fg:x="1541" fg:w="4"/><text x="66.3590%" y="127.50"></text></g><g><title>`0x7FFB5056F164 (4 samples, 0.17%)</title><rect x="66.1090%" y="101" width="0.1716%" height="15" fill="rgb(220,106,47)" fg:x="1541" fg:w="4"/><text x="66.3590%" y="111.50"></text></g><g><title>`0x7FFB5056F591 (4 samples, 0.17%)</title><rect x="66.1090%" y="85" width="0.1716%" height="15" fill="rgb(210,196,33)" fg:x="1541" fg:w="4"/><text x="66.3590%" y="95.50"></text></g><g><title>`0x7FFB505A68E4 (1 samples, 0.04%)</title><rect x="66.2377%" y="69" width="0.0429%" height="15" fill="rgb(229,154,42)" fg:x="1544" fg:w="1"/><text x="66.4877%" y="79.50"></text></g><g><title>`0x7FFB505892C8 (1 samples, 0.04%)</title><rect x="66.2377%" y="53" width="0.0429%" height="15" fill="rgb(228,114,26)" fg:x="1544" fg:w="1"/><text x="66.4877%" y="63.50"></text></g><g><title>`0x7FFB506C2BB4 (1 samples, 0.04%)</title><rect x="66.2377%" y="37" width="0.0429%" height="15" fill="rgb(208,144,1)" fg:x="1544" fg:w="1"/><text x="66.4877%" y="47.50"></text></g><g><title>`0x7FFB505A552B (1 samples, 0.04%)</title><rect x="78.3784%" y="133" width="0.0429%" height="15" fill="rgb(239,112,37)" fg:x="1827" fg:w="1"/><text x="78.6284%" y="143.50"></text></g><g><title>`0x7FFB50575D0E (1 samples, 0.04%)</title><rect x="78.3784%" y="117" width="0.0429%" height="15" fill="rgb(210,96,50)" fg:x="1827" fg:w="1"/><text x="78.6284%" y="127.50"></text></g><g><title>`0x7FFB505A5AE9 (1 samples, 0.04%)</title><rect x="78.4213%" y="133" width="0.0429%" height="15" fill="rgb(222,178,2)" fg:x="1828" fg:w="1"/><text x="78.6713%" y="143.50"></text></g><g><title>`0x7FFB505A5B10 (9 samples, 0.39%)</title><rect x="78.4642%" y="133" width="0.3861%" height="15" fill="rgb(226,74,18)" fg:x="1829" fg:w="9"/><text x="78.7142%" y="143.50"></text></g><g><title>`0x7FFB505A6127 (1 samples, 0.04%)</title><rect x="78.8503%" y="133" width="0.0429%" height="15" fill="rgb(225,67,54)" fg:x="1838" fg:w="1"/><text x="79.1003%" y="143.50"></text></g><g><title>mnist-trainer.exe`model::node::node_base::NodeBase::add_to_gradient (295 samples, 12.66%)</title><rect x="66.2806%" y="245" width="12.6555%" height="15" fill="rgb(251,92,32)" fg:x="1545" fg:w="295"/><text x="66.5306%" y="255.50">mnist-trainer.exe`m..</text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::plus (295 samples, 12.66%)</title><rect x="66.2806%" y="229" width="12.6555%" height="15" fill="rgb(228,149,22)" fg:x="1545" fg:w="295"/><text x="66.5306%" y="239.50">mnist-trainer.exe`m..</text></g><g><title>mnist-trainer.exe`model::data::data_container::operations::plus::ContainerPlus::sum_batch_data (295 samples, 12.66%)</title><rect x="66.2806%" y="213" width="12.6555%" height="15" fill="rgb(243,54,13)" fg:x="1545" fg:w="295"/><text x="66.5306%" y="223.50">mnist-trainer.exe`m..</text></g><g><title>mnist-trainer.exe`model::data::Data::plus (295 samples, 12.66%)</title><rect x="66.2806%" y="197" width="12.6555%" height="15" fill="rgb(243,180,28)" fg:x="1545" fg:w="295"/><text x="66.5306%" y="207.50">mnist-trainer.exe`m..</text></g><g><title>mnist-trainer.exe`ndarray::impl_methods::&lt;impl ndarray::ArrayBase (294 samples, 12.61%)</title><rect x="66.3235%" y="181" width="12.6126%" height="15" fill="rgb(208,167,24)" fg:x="1546" fg:w="294"/><text x="66.5735%" y="191.50">mnist-trainer.exe`n..</text></g><g><title>`0x7FFB5056F164 (13 samples, 0.56%)</title><rect x="78.3784%" y="165" width="0.5577%" height="15" fill="rgb(245,73,45)" fg:x="1827" fg:w="13"/><text x="78.6284%" y="175.50"></text></g><g><title>`0x7FFB5056F591 (13 samples, 0.56%)</title><rect x="78.3784%" y="149" width="0.5577%" height="15" fill="rgb(237,203,48)" fg:x="1827" fg:w="13"/><text x="78.6284%" y="159.50"></text></g><g><title>`0x7FFB505A68E4 (1 samples, 0.04%)</title><rect x="78.8932%" y="133" width="0.0429%" height="15" fill="rgb(211,197,16)" fg:x="1839" fg:w="1"/><text x="79.1432%" y="143.50"></text></g><g><title>`0x7FFB505892C8 (1 samples, 0.04%)</title><rect x="78.8932%" y="117" width="0.0429%" height="15" fill="rgb(243,99,51)" fg:x="1839" fg:w="1"/><text x="79.1432%" y="127.50"></text></g><g><title>`0x7FFB506C2BB4 (1 samples, 0.04%)</title><rect x="78.8932%" y="101" width="0.0429%" height="15" fill="rgb(215,123,29)" fg:x="1839" fg:w="1"/><text x="79.1432%" y="111.50"></text></g><g><title>`0x7FFB505F53C1 (1 samples, 0.04%)</title><rect x="78.9361%" y="229" width="0.0429%" height="15" fill="rgb(239,186,37)" fg:x="1840" fg:w="1"/><text x="79.1861%" y="239.50"></text></g><g><title>`0x7FFB505F5537 (1 samples, 0.04%)</title><rect x="78.9790%" y="229" width="0.0429%" height="15" fill="rgb(252,136,39)" fg:x="1841" fg:w="1"/><text x="79.2290%" y="239.50"></text></g><g><title>`0x7FFB5058988F (1 samples, 0.04%)</title><rect x="79.0219%" y="197" width="0.0429%" height="15" fill="rgb(223,213,32)" fg:x="1842" fg:w="1"/><text x="79.2719%" y="207.50"></text></g><g><title>`0x7FFB50578ABB (1 samples, 0.04%)</title><rect x="79.0219%" y="181" width="0.0429%" height="15" fill="rgb(233,115,5)" fg:x="1842" fg:w="1"/><text x="79.2719%" y="191.50"></text></g><g><title>`0x7FFB50577FB8 (2 samples, 0.09%)</title><rect x="79.0648%" y="181" width="0.0858%" height="15" fill="rgb(207,226,44)" fg:x="1843" fg:w="2"/><text x="79.3148%" y="191.50"></text></g><g><title>`0x7FFB505749D6 (81 samples, 3.47%)</title><rect x="79.0219%" y="213" width="3.4749%" height="15" fill="rgb(208,126,0)" fg:x="1842" fg:w="81"/><text x="79.2719%" y="223.50">`0x..</text></g><g><title>`0x7FFB50589B68 (80 samples, 3.43%)</title><rect x="79.0648%" y="197" width="3.4320%" height="15" fill="rgb(244,66,21)" fg:x="1843" fg:w="80"/><text x="79.3148%" y="207.50">`0x..</text></g><g><title>`0x7FFB5057801E (78 samples, 3.35%)</title><rect x="79.1506%" y="181" width="3.3462%" height="15" fill="rgb(222,97,12)" fg:x="1845" fg:w="78"/><text x="79.4006%" y="191.50">`0x..</text></g><g><title>`0x7FFB5064B449 (78 samples, 3.35%)</title><rect x="79.1506%" y="165" width="3.3462%" height="15" fill="rgb(219,213,19)" fg:x="1845" fg:w="78"/><text x="79.4006%" y="175.50">`0x..</text></g><g><title>`0x7FFB506C2C74 (77 samples, 3.30%)</title><rect x="79.1935%" y="149" width="3.3033%" height="15" fill="rgb(252,169,30)" fg:x="1846" fg:w="77"/><text x="79.4435%" y="159.50">`0x..</text></g><g><title>`0x7FFB505749DE (1 samples, 0.04%)</title><rect x="82.4968%" y="213" width="0.0429%" height="15" fill="rgb(206,32,51)" fg:x="1923" fg:w="1"/><text x="82.7468%" y="223.50"></text></g><g><title>`0x7FFB50575205 (2 samples, 0.09%)</title><rect x="82.5397%" y="213" width="0.0858%" height="15" fill="rgb(250,172,42)" fg:x="1924" fg:w="2"/><text x="82.7897%" y="223.50"></text></g><g><title>`0x7FFB505892C8 (2 samples, 0.09%)</title><rect x="82.5397%" y="197" width="0.0858%" height="15" fill="rgb(209,34,43)" fg:x="1924" fg:w="2"/><text x="82.7897%" y="207.50"></text></g><g><title>`0x7FFB506C2BB4 (2 samples, 0.09%)</title><rect x="82.5397%" y="181" width="0.0858%" height="15" fill="rgb(223,11,35)" fg:x="1924" fg:w="2"/><text x="82.7897%" y="191.50"></text></g><g><title>mnist-trainer.exe`model::node::node_base::NodeBase::reset_gradient (87 samples, 3.73%)</title><rect x="78.9361%" y="245" width="3.7323%" height="15" fill="rgb(251,219,26)" fg:x="1840" fg:w="87"/><text x="79.1861%" y="255.50">mnis..</text></g><g><title>`0x7FFB505F5960 (85 samples, 3.65%)</title><rect x="79.0219%" y="229" width="3.6465%" height="15" fill="rgb(231,119,3)" fg:x="1842" fg:w="85"/><text x="79.2719%" y="239.50">`0x7..</text></g><g><title>`0x7FFB50575B47 (1 samples, 0.04%)</title><rect x="82.6255%" y="213" width="0.0429%" height="15" fill="rgb(216,97,11)" fg:x="1926" fg:w="1"/><text x="82.8755%" y="223.50"></text></g><g><title>`0x7FFB505DA236 (1 samples, 0.04%)</title><rect x="82.6255%" y="197" width="0.0429%" height="15" fill="rgb(223,59,9)" fg:x="1926" fg:w="1"/><text x="82.8755%" y="207.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::matrix_multiply_node::MatrixMultiplyNode as model::node::Node&gt;::apply_jacobian (1,694 samples, 72.67%)</title><rect x="10.0386%" y="261" width="72.6727%" height="15" fill="rgb(233,93,31)" fg:x="234" fg:w="1694"/><text x="10.2886%" y="271.50">mnist-trainer.exe`&lt;model::node::types::matrix_multiply_node::MatrixMultiplyNode as model::node::Node&gt;::apply_jacobian</text></g><g><title>mnist-trainer.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 0.04%)</title><rect x="82.6684%" y="245" width="0.0429%" height="15" fill="rgb(239,81,33)" fg:x="1927" fg:w="1"/><text x="82.9184%" y="255.50"></text></g><g><title>mnist-trainer.exe`std::sys::alloc::windows::impl$0::dealloc (1 samples, 0.04%)</title><rect x="82.6684%" y="229" width="0.0429%" height="15" fill="rgb(213,120,34)" fg:x="1927" fg:w="1"/><text x="82.9184%" y="239.50"></text></g><g><title>`0x7FFB4F6D3F90 (1 samples, 0.04%)</title><rect x="82.6684%" y="213" width="0.0429%" height="15" fill="rgb(243,49,53)" fg:x="1927" fg:w="1"/><text x="82.9184%" y="223.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::add_node::AddNode as model::node::Node&gt;::apply_jacobian (1,699 samples, 72.89%)</title><rect x="9.8670%" y="277" width="72.8872%" height="15" fill="rgb(247,216,33)" fg:x="230" fg:w="1699"/><text x="10.1170%" y="287.50">mnist-trainer.exe`&lt;model::node::types::add_node::AddNode as model::node::Node&gt;::apply_jacobian</text></g><g><title>mnist-trainer.exe`model::node::node_base::NodeBase::add_to_gradient (1 samples, 0.04%)</title><rect x="82.7113%" y="261" width="0.0429%" height="15" fill="rgb(226,26,14)" fg:x="1928" fg:w="1"/><text x="82.9613%" y="271.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::plus (1 samples, 0.04%)</title><rect x="82.7113%" y="245" width="0.0429%" height="15" fill="rgb(215,49,53)" fg:x="1928" fg:w="1"/><text x="82.9613%" y="255.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::activation_node::ActivationNode as model::node::Node&gt;::apply_jacobian (1,702 samples, 73.02%)</title><rect x="9.7812%" y="293" width="73.0159%" height="15" fill="rgb(245,162,40)" fg:x="228" fg:w="1702"/><text x="10.0312%" y="303.50">mnist-trainer.exe`&lt;model::node::types::activation_node::ActivationNode as model::node::Node&gt;::apply_jacobian</text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::times (1 samples, 0.04%)</title><rect x="82.7542%" y="277" width="0.0429%" height="15" fill="rgb(229,68,17)" fg:x="1929" fg:w="1"/><text x="83.0042%" y="287.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::operations::times::ContainerTimes::multiply_batches (1 samples, 0.04%)</title><rect x="82.7542%" y="261" width="0.0429%" height="15" fill="rgb(213,182,10)" fg:x="1929" fg:w="1"/><text x="83.0042%" y="271.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::times (1 samples, 0.04%)</title><rect x="82.7542%" y="245" width="0.0429%" height="15" fill="rgb(245,125,30)" fg:x="1929" fg:w="1"/><text x="83.0042%" y="255.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Mul&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="82.7542%" y="229" width="0.0429%" height="15" fill="rgb(232,202,2)" fg:x="1929" fg:w="1"/><text x="83.0042%" y="239.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_constructors::&lt;impl ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="82.7542%" y="213" width="0.0429%" height="15" fill="rgb(237,140,51)" fg:x="1929" fg:w="1"/><text x="83.0042%" y="223.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::average_batch (1 samples, 0.04%)</title><rect x="82.7971%" y="261" width="0.0429%" height="15" fill="rgb(236,157,25)" fg:x="1930" fg:w="1"/><text x="83.0471%" y="271.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::plus (1 samples, 0.04%)</title><rect x="82.7971%" y="245" width="0.0429%" height="15" fill="rgb(219,209,0)" fg:x="1930" fg:w="1"/><text x="83.0471%" y="255.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="82.7971%" y="229" width="0.0429%" height="15" fill="rgb(240,116,54)" fg:x="1930" fg:w="1"/><text x="83.0471%" y="239.50"></text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (1 samples, 0.04%)</title><rect x="82.7971%" y="213" width="0.0429%" height="15" fill="rgb(216,10,36)" fg:x="1930" fg:w="1"/><text x="83.0471%" y="223.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_constructors::&lt;impl ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="82.7971%" y="197" width="0.0429%" height="15" fill="rgb(222,72,44)" fg:x="1930" fg:w="1"/><text x="83.0471%" y="207.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="82.7971%" y="181" width="0.0429%" height="15" fill="rgb(232,159,9)" fg:x="1930" fg:w="1"/><text x="83.0471%" y="191.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="82.7971%" y="165" width="0.0429%" height="15" fill="rgb(210,39,32)" fg:x="1930" fg:w="1"/><text x="83.0471%" y="175.50"></text></g><g><title>`0x7FFB5056FFFF (1 samples, 0.04%)</title><rect x="82.7971%" y="149" width="0.0429%" height="15" fill="rgb(216,194,45)" fg:x="1930" fg:w="1"/><text x="83.0471%" y="159.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::bias_node::BiasNode as model::node::Node&gt;::apply_jacobian (2 samples, 0.09%)</title><rect x="82.7971%" y="293" width="0.0858%" height="15" fill="rgb(218,18,35)" fg:x="1930" fg:w="2"/><text x="83.0471%" y="303.50"></text></g><g><title>mnist-trainer.exe`model::node::node_base::NodeBase::process_momentum (2 samples, 0.09%)</title><rect x="82.7971%" y="277" width="0.0858%" height="15" fill="rgb(207,83,51)" fg:x="1930" fg:w="2"/><text x="83.0471%" y="287.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::minus (1 samples, 0.04%)</title><rect x="82.8400%" y="261" width="0.0429%" height="15" fill="rgb(225,63,43)" fg:x="1931" fg:w="1"/><text x="83.0900%" y="271.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::minus (1 samples, 0.04%)</title><rect x="82.8400%" y="245" width="0.0429%" height="15" fill="rgb(207,57,36)" fg:x="1931" fg:w="1"/><text x="83.0900%" y="255.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Sub&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="82.8400%" y="229" width="0.0429%" height="15" fill="rgb(216,99,33)" fg:x="1931" fg:w="1"/><text x="83.0900%" y="239.50"></text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (1 samples, 0.04%)</title><rect x="82.8400%" y="213" width="0.0429%" height="15" fill="rgb(225,42,16)" fg:x="1931" fg:w="1"/><text x="83.0900%" y="223.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::operations::matmul::ContainerMatMul::matmul_batches (1 samples, 0.04%)</title><rect x="82.9258%" y="277" width="0.0429%" height="15" fill="rgb(220,201,45)" fg:x="1933" fg:w="1"/><text x="83.1758%" y="287.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::matmul (1 samples, 0.04%)</title><rect x="82.9258%" y="261" width="0.0429%" height="15" fill="rgb(225,33,4)" fg:x="1933" fg:w="1"/><text x="83.1758%" y="271.50"></text></g><g><title>mnist-trainer.exe`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim (1 samples, 0.04%)</title><rect x="82.9258%" y="245" width="0.0429%" height="15" fill="rgb(224,33,50)" fg:x="1933" fg:w="1"/><text x="83.1758%" y="255.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::gemm_loop (1 samples, 0.04%)</title><rect x="82.9258%" y="229" width="0.0429%" height="15" fill="rgb(246,198,51)" fg:x="1933" fg:w="1"/><text x="83.1758%" y="239.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::threading::RangeChunkParallel (1 samples, 0.04%)</title><rect x="82.9258%" y="213" width="0.0429%" height="15" fill="rgb(205,22,4)" fg:x="1933" fg:w="1"/><text x="83.1758%" y="223.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::masked_kernel (1 samples, 0.04%)</title><rect x="82.9258%" y="197" width="0.0429%" height="15" fill="rgb(206,3,8)" fg:x="1933" fg:w="1"/><text x="83.1758%" y="207.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::sgemm_kernel::kernel_target_fma (1 samples, 0.04%)</title><rect x="82.9258%" y="181" width="0.0429%" height="15" fill="rgb(251,23,15)" fg:x="1933" fg:w="1"/><text x="83.1758%" y="191.50"></text></g><g><title>`0x7FFB505F5960 (1 samples, 0.04%)</title><rect x="82.9687%" y="213" width="0.0429%" height="15" fill="rgb(252,88,28)" fg:x="1934" fg:w="1"/><text x="83.2187%" y="223.50"></text></g><g><title>`0x7FFB50575B47 (1 samples, 0.04%)</title><rect x="82.9687%" y="197" width="0.0429%" height="15" fill="rgb(212,127,14)" fg:x="1934" fg:w="1"/><text x="83.2187%" y="207.50"></text></g><g><title>`0x7FFB505DA1F5 (1 samples, 0.04%)</title><rect x="82.9687%" y="181" width="0.0429%" height="15" fill="rgb(247,145,37)" fg:x="1934" fg:w="1"/><text x="83.2187%" y="191.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::threading::RangeChunkParallel (2 samples, 0.09%)</title><rect x="83.0116%" y="197" width="0.0858%" height="15" fill="rgb(209,117,53)" fg:x="1935" fg:w="2"/><text x="83.2616%" y="207.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::masked_kernel (2 samples, 0.09%)</title><rect x="83.0116%" y="181" width="0.0858%" height="15" fill="rgb(212,90,42)" fg:x="1935" fg:w="2"/><text x="83.2616%" y="191.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::sgemm_kernel::kernel_target_fma (2 samples, 0.09%)</title><rect x="83.0116%" y="165" width="0.0858%" height="15" fill="rgb(218,164,37)" fg:x="1935" fg:w="2"/><text x="83.2616%" y="175.50"></text></g><g><title>`0x7FFB5056F397 (1 samples, 0.04%)</title><rect x="83.0974%" y="133" width="0.0429%" height="15" fill="rgb(246,65,34)" fg:x="1937" fg:w="1"/><text x="83.3474%" y="143.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::matmul (7 samples, 0.30%)</title><rect x="82.8829%" y="293" width="0.3003%" height="15" fill="rgb(231,100,33)" fg:x="1932" fg:w="7"/><text x="83.1329%" y="303.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::operations::matmul::ContainerMatMul::matmul_data_batch (5 samples, 0.21%)</title><rect x="82.9687%" y="277" width="0.2145%" height="15" fill="rgb(228,126,14)" fg:x="1934" fg:w="5"/><text x="83.2187%" y="287.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::matmul (5 samples, 0.21%)</title><rect x="82.9687%" y="261" width="0.2145%" height="15" fill="rgb(215,173,21)" fg:x="1934" fg:w="5"/><text x="83.2187%" y="271.50"></text></g><g><title>mnist-trainer.exe`model::data::operations::matmul::DataMatMul::matmul_matrix_vector (5 samples, 0.21%)</title><rect x="82.9687%" y="245" width="0.2145%" height="15" fill="rgb(210,6,40)" fg:x="1934" fg:w="5"/><text x="83.2187%" y="255.50"></text></g><g><title>mnist-trainer.exe`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim (5 samples, 0.21%)</title><rect x="82.9687%" y="229" width="0.2145%" height="15" fill="rgb(212,48,18)" fg:x="1934" fg:w="5"/><text x="83.2187%" y="239.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::gemm_loop (4 samples, 0.17%)</title><rect x="83.0116%" y="213" width="0.1716%" height="15" fill="rgb(230,214,11)" fg:x="1935" fg:w="4"/><text x="83.2616%" y="223.50"></text></g><g><title>mnist-trainer.exe`std::alloc::__default_lib_allocator::__rdl_alloc (2 samples, 0.09%)</title><rect x="83.0974%" y="197" width="0.0858%" height="15" fill="rgb(254,105,39)" fg:x="1937" fg:w="2"/><text x="83.3474%" y="207.50"></text></g><g><title>mnist-trainer.exe`std::sys::alloc::windows::impl$0::alloc (2 samples, 0.09%)</title><rect x="83.0974%" y="181" width="0.0858%" height="15" fill="rgb(245,158,5)" fg:x="1937" fg:w="2"/><text x="83.3474%" y="191.50"></text></g><g><title>mnist-trainer.exe`std::sys::alloc::windows::allocate (2 samples, 0.09%)</title><rect x="83.0974%" y="165" width="0.0858%" height="15" fill="rgb(249,208,11)" fg:x="1937" fg:w="2"/><text x="83.3474%" y="175.50"></text></g><g><title>`0x7FFB5056F164 (2 samples, 0.09%)</title><rect x="83.0974%" y="149" width="0.0858%" height="15" fill="rgb(210,39,28)" fg:x="1937" fg:w="2"/><text x="83.3474%" y="159.50"></text></g><g><title>`0x7FFB5056F591 (1 samples, 0.04%)</title><rect x="83.1403%" y="133" width="0.0429%" height="15" fill="rgb(211,56,53)" fg:x="1938" fg:w="1"/><text x="83.3903%" y="143.50"></text></g><g><title>`0x7FFB505A5F16 (1 samples, 0.04%)</title><rect x="83.1403%" y="117" width="0.0429%" height="15" fill="rgb(226,201,30)" fg:x="1938" fg:w="1"/><text x="83.3903%" y="127.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="83.1832%" y="277" width="0.0429%" height="15" fill="rgb(239,101,34)" fg:x="1939" fg:w="1"/><text x="83.4332%" y="287.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::add_node::AddNode as model::node::Node&gt;::apply_jacobian (1,717 samples, 73.66%)</title><rect x="9.6096%" y="325" width="73.6594%" height="15" fill="rgb(226,209,5)" fg:x="224" fg:w="1717"/><text x="9.8596%" y="335.50">mnist-trainer.exe`&lt;model::node::types::add_node::AddNode as model::node::Node&gt;::apply_jacobian</text></g><g><title>mnist-trainer.exe`&lt;model::node::types::matrix_multiply_node::MatrixMultiplyNode as model::node::Node&gt;::apply_jacobian (1,714 samples, 73.53%)</title><rect x="9.7383%" y="309" width="73.5307%" height="15" fill="rgb(250,105,47)" fg:x="227" fg:w="1714"/><text x="9.9883%" y="319.50">mnist-trainer.exe`&lt;model::node::types::matrix_multiply_node::MatrixMultiplyNode as model::node::Node&gt;::apply_jacobian</text></g><g><title>mnist-trainer.exe`model::data::data_container::operations::transpose::ContainerTranspose::transpose_batch (2 samples, 0.09%)</title><rect x="83.1832%" y="293" width="0.0858%" height="15" fill="rgb(230,72,3)" fg:x="1939" fg:w="2"/><text x="83.4332%" y="303.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::transpose (1 samples, 0.04%)</title><rect x="83.2261%" y="277" width="0.0429%" height="15" fill="rgb(232,218,39)" fg:x="1940" fg:w="1"/><text x="83.4761%" y="287.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="83.2261%" y="261" width="0.0429%" height="15" fill="rgb(248,166,6)" fg:x="1940" fg:w="1"/><text x="83.4761%" y="271.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="83.2261%" y="245" width="0.0429%" height="15" fill="rgb(247,89,20)" fg:x="1940" fg:w="1"/><text x="83.4761%" y="255.50"></text></g><g><title>`0x7FFB5056FA31 (1 samples, 0.04%)</title><rect x="83.2261%" y="229" width="0.0429%" height="15" fill="rgb(248,130,54)" fg:x="1940" fg:w="1"/><text x="83.4761%" y="239.50"></text></g><g><title>mnist-trainer.exe`__rustc::__rust_dealloc (1 samples, 0.04%)</title><rect x="83.2690%" y="325" width="0.0429%" height="15" fill="rgb(234,196,4)" fg:x="1941" fg:w="1"/><text x="83.5190%" y="335.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::activation_node::ActivationNode as model::node::Node&gt;::apply_jacobian (1,721 samples, 73.83%)</title><rect x="9.5238%" y="341" width="73.8310%" height="15" fill="rgb(250,143,31)" fg:x="222" fg:w="1721"/><text x="9.7738%" y="351.50">mnist-trainer.exe`&lt;model::node::types::activation_node::ActivationNode as model::node::Node&gt;::apply_jacobian</text></g><g><title>mnist-trainer.exe`model::node::node_base::NodeBase::add_to_gradient (1 samples, 0.04%)</title><rect x="83.3119%" y="325" width="0.0429%" height="15" fill="rgb(211,110,34)" fg:x="1942" fg:w="1"/><text x="83.5619%" y="335.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::plus (1 samples, 0.04%)</title><rect x="83.3119%" y="309" width="0.0429%" height="15" fill="rgb(215,124,48)" fg:x="1942" fg:w="1"/><text x="83.5619%" y="319.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::operations::plus::ContainerPlus::sum_batch_data (1 samples, 0.04%)</title><rect x="83.3119%" y="293" width="0.0429%" height="15" fill="rgb(216,46,13)" fg:x="1942" fg:w="1"/><text x="83.5619%" y="303.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::plus (1 samples, 0.04%)</title><rect x="83.3119%" y="277" width="0.0429%" height="15" fill="rgb(205,184,25)" fg:x="1942" fg:w="1"/><text x="83.5619%" y="287.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::apply_function (2 samples, 0.09%)</title><rect x="83.3548%" y="341" width="0.0858%" height="15" fill="rgb(228,1,10)" fg:x="1943" fg:w="2"/><text x="83.6048%" y="351.50"></text></g><g><title>mnist-trainer.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (2 samples, 0.09%)</title><rect x="83.3548%" y="325" width="0.0858%" height="15" fill="rgb(213,116,27)" fg:x="1943" fg:w="2"/><text x="83.6048%" y="335.50"></text></g><g><title>mnist-trainer.exe`&lt;core::iter::adapters::map::Map (2 samples, 0.09%)</title><rect x="83.3548%" y="309" width="0.0858%" height="15" fill="rgb(241,95,50)" fg:x="1943" fg:w="2"/><text x="83.6048%" y="319.50"></text></g><g><title>mnist-trainer.exe`model::node::types::softmax_node::SoftmaxNode::softmax_jacobian (2 samples, 0.09%)</title><rect x="83.3548%" y="293" width="0.0858%" height="15" fill="rgb(238,48,32)" fg:x="1943" fg:w="2"/><text x="83.6048%" y="303.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_constructors::&lt;impl ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="83.3977%" y="277" width="0.0429%" height="15" fill="rgb(235,113,49)" fg:x="1944" fg:w="1"/><text x="83.6477%" y="287.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="83.3977%" y="261" width="0.0429%" height="15" fill="rgb(205,127,43)" fg:x="1944" fg:w="1"/><text x="83.6477%" y="271.50"></text></g><g><title>`0x7FFB5056F591 (1 samples, 0.04%)</title><rect x="83.3977%" y="245" width="0.0429%" height="15" fill="rgb(250,162,2)" fg:x="1944" fg:w="1"/><text x="83.6477%" y="255.50"></text></g><g><title>`0x7FFB505A5D37 (1 samples, 0.04%)</title><rect x="83.3977%" y="229" width="0.0429%" height="15" fill="rgb(220,13,41)" fg:x="1944" fg:w="1"/><text x="83.6477%" y="239.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="83.4406%" y="261" width="0.0429%" height="15" fill="rgb(249,221,25)" fg:x="1945" fg:w="1"/><text x="83.6906%" y="271.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="83.4406%" y="245" width="0.0429%" height="15" fill="rgb(215,208,19)" fg:x="1945" fg:w="1"/><text x="83.6906%" y="255.50"></text></g><g><title>`0x7FFB5056FFFF (1 samples, 0.04%)</title><rect x="83.4406%" y="229" width="0.0429%" height="15" fill="rgb(236,175,2)" fg:x="1945" fg:w="1"/><text x="83.6906%" y="239.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::packing::pack_avx2 (1 samples, 0.04%)</title><rect x="83.5264%" y="245" width="0.0429%" height="15" fill="rgb(241,52,2)" fg:x="1947" fg:w="1"/><text x="83.7764%" y="255.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::matmul (4 samples, 0.17%)</title><rect x="83.4406%" y="341" width="0.1716%" height="15" fill="rgb(248,140,14)" fg:x="1945" fg:w="4"/><text x="83.6906%" y="351.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::operations::matmul::ContainerMatMul::matmul_batches (4 samples, 0.17%)</title><rect x="83.4406%" y="325" width="0.1716%" height="15" fill="rgb(253,22,42)" fg:x="1945" fg:w="4"/><text x="83.6906%" y="335.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::matmul (4 samples, 0.17%)</title><rect x="83.4406%" y="309" width="0.1716%" height="15" fill="rgb(234,61,47)" fg:x="1945" fg:w="4"/><text x="83.6906%" y="319.50"></text></g><g><title>mnist-trainer.exe`model::data::operations::matmul::DataMatMul::matmul_matrix_vector (4 samples, 0.17%)</title><rect x="83.4406%" y="293" width="0.1716%" height="15" fill="rgb(208,226,15)" fg:x="1945" fg:w="4"/><text x="83.6906%" y="303.50"></text></g><g><title>mnist-trainer.exe`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim (4 samples, 0.17%)</title><rect x="83.4406%" y="277" width="0.1716%" height="15" fill="rgb(217,221,4)" fg:x="1945" fg:w="4"/><text x="83.6906%" y="287.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::gemm_loop (3 samples, 0.13%)</title><rect x="83.4835%" y="261" width="0.1287%" height="15" fill="rgb(212,174,34)" fg:x="1946" fg:w="3"/><text x="83.7335%" y="271.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::threading::RangeChunkParallel (1 samples, 0.04%)</title><rect x="83.5693%" y="245" width="0.0429%" height="15" fill="rgb(253,83,4)" fg:x="1948" fg:w="1"/><text x="83.8193%" y="255.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::masked_kernel (1 samples, 0.04%)</title><rect x="83.5693%" y="229" width="0.0429%" height="15" fill="rgb(250,195,49)" fg:x="1948" fg:w="1"/><text x="83.8193%" y="239.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::sgemm_kernel::kernel_target_fma (1 samples, 0.04%)</title><rect x="83.5693%" y="213" width="0.0429%" height="15" fill="rgb(241,192,25)" fg:x="1948" fg:w="1"/><text x="83.8193%" y="223.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::softmax_node::SoftmaxNode as model::node::Node&gt;::apply_jacobian (1,731 samples, 74.26%)</title><rect x="9.3951%" y="357" width="74.2600%" height="15" fill="rgb(208,124,10)" fg:x="219" fg:w="1731"/><text x="9.6451%" y="367.50">mnist-trainer.exe`&lt;model::node::types::softmax_node::SoftmaxNode as model::node::Node&gt;::apply_jacobian</text></g><g><title>mnist-trainer.exe`model::node::node_base::NodeBase::add_to_gradient (1 samples, 0.04%)</title><rect x="83.6122%" y="341" width="0.0429%" height="15" fill="rgb(222,33,0)" fg:x="1949" fg:w="1"/><text x="83.8622%" y="351.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::plus (1 samples, 0.04%)</title><rect x="83.6122%" y="325" width="0.0429%" height="15" fill="rgb(234,209,28)" fg:x="1949" fg:w="1"/><text x="83.8622%" y="335.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::operations::plus::ContainerPlus::sum_batch_data (1 samples, 0.04%)</title><rect x="83.6122%" y="309" width="0.0429%" height="15" fill="rgb(224,11,23)" fg:x="1949" fg:w="1"/><text x="83.8622%" y="319.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="83.6122%" y="293" width="0.0429%" height="15" fill="rgb(232,99,1)" fg:x="1949" fg:w="1"/><text x="83.8622%" y="303.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="83.6122%" y="277" width="0.0429%" height="15" fill="rgb(237,95,45)" fg:x="1949" fg:w="1"/><text x="83.8622%" y="287.50"></text></g><g><title>`0x7FFB5056E690 (1 samples, 0.04%)</title><rect x="83.6122%" y="261" width="0.0429%" height="15" fill="rgb(208,109,11)" fg:x="1949" fg:w="1"/><text x="83.8622%" y="271.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::add_node::AddNode as model::node::Node&gt;::apply_jacobian (1,739 samples, 74.60%)</title><rect x="9.0948%" y="389" width="74.6032%" height="15" fill="rgb(216,190,48)" fg:x="212" fg:w="1739"/><text x="9.3448%" y="399.50">mnist-trainer.exe`&lt;model::node::types::add_node::AddNode as model::node::Node&gt;::apply_jacobian</text></g><g><title>mnist-trainer.exe`&lt;model::node::types::loss_node::LossNode as model::node::Node&gt;::apply_jacobian (1,738 samples, 74.56%)</title><rect x="9.1377%" y="373" width="74.5603%" height="15" fill="rgb(251,171,36)" fg:x="213" fg:w="1738"/><text x="9.3877%" y="383.50">mnist-trainer.exe`&lt;model::node::types::loss_node::LossNode as model::node::Node&gt;::apply_jacobian</text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::times (1 samples, 0.04%)</title><rect x="83.6551%" y="357" width="0.0429%" height="15" fill="rgb(230,62,22)" fg:x="1950" fg:w="1"/><text x="83.9051%" y="367.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::operations::times::ContainerTimes::multiply_batch_data (1 samples, 0.04%)</title><rect x="83.6551%" y="341" width="0.0429%" height="15" fill="rgb(225,114,35)" fg:x="1950" fg:w="1"/><text x="83.9051%" y="351.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::times (1 samples, 0.04%)</title><rect x="83.6551%" y="325" width="0.0429%" height="15" fill="rgb(215,118,42)" fg:x="1950" fg:w="1"/><text x="83.9051%" y="335.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_methods::&lt;impl ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="83.6551%" y="309" width="0.0429%" height="15" fill="rgb(243,119,21)" fg:x="1950" fg:w="1"/><text x="83.9051%" y="319.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="83.6551%" y="293" width="0.0429%" height="15" fill="rgb(252,177,53)" fg:x="1950" fg:w="1"/><text x="83.9051%" y="303.50"></text></g><g><title>`0x7FFB5056F21F (1 samples, 0.04%)</title><rect x="83.6551%" y="277" width="0.0429%" height="15" fill="rgb(237,209,29)" fg:x="1950" fg:w="1"/><text x="83.9051%" y="287.50"></text></g><g><title>`0x7FFB4E24969C (1 samples, 0.04%)</title><rect x="83.7409%" y="309" width="0.0429%" height="15" fill="rgb(212,65,23)" fg:x="1952" fg:w="1"/><text x="83.9909%" y="319.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::loss::types::base_cross_entropy::BaseCrossEntropy as model::node::loss::loss_function::LossType&gt;::apply (3 samples, 0.13%)</title><rect x="83.6980%" y="357" width="0.1287%" height="15" fill="rgb(230,222,46)" fg:x="1951" fg:w="3"/><text x="83.9480%" y="367.50"></text></g><g><title>mnist-trainer.exe`model::node::loss::helpers::container_apply (2 samples, 0.09%)</title><rect x="83.7409%" y="341" width="0.0858%" height="15" fill="rgb(215,135,32)" fg:x="1952" fg:w="2"/><text x="83.9909%" y="351.50"></text></g><g><title>mnist-trainer.exe`model::node::loss::helpers::data_apply_vector (2 samples, 0.09%)</title><rect x="83.7409%" y="325" width="0.0858%" height="15" fill="rgb(246,101,22)" fg:x="1952" fg:w="2"/><text x="83.9909%" y="335.50"></text></g><g><title>mnist-trainer.exe`logf (1 samples, 0.04%)</title><rect x="83.7838%" y="309" width="0.0429%" height="15" fill="rgb(206,107,13)" fg:x="1953" fg:w="1"/><text x="84.0338%" y="319.50"></text></g><g><title>`0x7FFB505F55D9 (1 samples, 0.04%)</title><rect x="83.8696%" y="277" width="0.0429%" height="15" fill="rgb(250,100,44)" fg:x="1955" fg:w="1"/><text x="84.1196%" y="287.50"></text></g><g><title>mnist-trainer.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (1 samples, 0.04%)</title><rect x="83.9125%" y="277" width="0.0429%" height="15" fill="rgb(231,147,38)" fg:x="1956" fg:w="1"/><text x="84.1625%" y="287.50"></text></g><g><title>`0x7FFB50577FB8 (1 samples, 0.04%)</title><rect x="83.9554%" y="197" width="0.0429%" height="15" fill="rgb(229,8,40)" fg:x="1957" fg:w="1"/><text x="84.2054%" y="207.50"></text></g><g><title>`0x7FFB50589B68 (29 samples, 1.24%)</title><rect x="83.9554%" y="213" width="1.2441%" height="15" fill="rgb(221,135,30)" fg:x="1957" fg:w="29"/><text x="84.2054%" y="223.50"></text></g><g><title>`0x7FFB5057801E (28 samples, 1.20%)</title><rect x="83.9983%" y="197" width="1.2012%" height="15" fill="rgb(249,193,18)" fg:x="1958" fg:w="28"/><text x="84.2483%" y="207.50"></text></g><g><title>`0x7FFB5064B449 (28 samples, 1.20%)</title><rect x="83.9983%" y="181" width="1.2012%" height="15" fill="rgb(209,133,39)" fg:x="1958" fg:w="28"/><text x="84.2483%" y="191.50"></text></g><g><title>`0x7FFB506C2C74 (28 samples, 1.20%)</title><rect x="83.9983%" y="165" width="1.2012%" height="15" fill="rgb(232,100,14)" fg:x="1958" fg:w="28"/><text x="84.2483%" y="175.50"></text></g><g><title>`0x7FFB505F5960 (30 samples, 1.29%)</title><rect x="83.9554%" y="245" width="1.2870%" height="15" fill="rgb(224,185,1)" fg:x="1957" fg:w="30"/><text x="84.2054%" y="255.50"></text></g><g><title>`0x7FFB505749D6 (30 samples, 1.29%)</title><rect x="83.9554%" y="229" width="1.2870%" height="15" fill="rgb(223,139,8)" fg:x="1957" fg:w="30"/><text x="84.2054%" y="239.50"></text></g><g><title>`0x7FFB50589B6F (1 samples, 0.04%)</title><rect x="85.1995%" y="213" width="0.0429%" height="15" fill="rgb(232,213,38)" fg:x="1986" fg:w="1"/><text x="85.4495%" y="223.50"></text></g><g><title>`0x7FFB5056F286 (1 samples, 0.04%)</title><rect x="85.2424%" y="181" width="0.0429%" height="15" fill="rgb(207,94,22)" fg:x="1987" fg:w="1"/><text x="85.4924%" y="191.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::input_node::InputNode as model::node::Node&gt;::get_data (2 samples, 0.09%)</title><rect x="85.2424%" y="245" width="0.0858%" height="15" fill="rgb(219,183,54)" fg:x="1987" fg:w="2"/><text x="85.4924%" y="255.50"></text></g><g><title>mnist-trainer.exe`&lt;model::data::data_container::DataContainer as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="85.2424%" y="229" width="0.0858%" height="15" fill="rgb(216,185,54)" fg:x="1987" fg:w="2"/><text x="85.4924%" y="239.50"></text></g><g><title>mnist-trainer.exe`&lt;alloc::vec::Vec (2 samples, 0.09%)</title><rect x="85.2424%" y="213" width="0.0858%" height="15" fill="rgb(254,217,39)" fg:x="1987" fg:w="2"/><text x="85.4924%" y="223.50"></text></g><g><title>`0x7FFB5056F164 (2 samples, 0.09%)</title><rect x="85.2424%" y="197" width="0.0858%" height="15" fill="rgb(240,178,23)" fg:x="1987" fg:w="2"/><text x="85.4924%" y="207.50"></text></g><g><title>`0x7FFB5056F591 (1 samples, 0.04%)</title><rect x="85.2853%" y="181" width="0.0429%" height="15" fill="rgb(218,11,47)" fg:x="1988" fg:w="1"/><text x="85.5353%" y="191.50"></text></g><g><title>`0x7FFB505A5885 (1 samples, 0.04%)</title><rect x="85.2853%" y="165" width="0.0429%" height="15" fill="rgb(218,51,51)" fg:x="1988" fg:w="1"/><text x="85.5353%" y="175.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_constructors::&lt;impl ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="85.3282%" y="165" width="0.0429%" height="15" fill="rgb(238,126,27)" fg:x="1989" fg:w="1"/><text x="85.5782%" y="175.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="85.3282%" y="149" width="0.0429%" height="15" fill="rgb(249,202,22)" fg:x="1989" fg:w="1"/><text x="85.5782%" y="159.50"></text></g><g><title>`0x7FFB5056F591 (1 samples, 0.04%)</title><rect x="85.3282%" y="133" width="0.0429%" height="15" fill="rgb(254,195,49)" fg:x="1989" fg:w="1"/><text x="85.5782%" y="143.50"></text></g><g><title>`0x7FFB505A68E4 (1 samples, 0.04%)</title><rect x="85.3282%" y="117" width="0.0429%" height="15" fill="rgb(208,123,14)" fg:x="1989" fg:w="1"/><text x="85.5782%" y="127.50"></text></g><g><title>`0x7FFB505892C8 (1 samples, 0.04%)</title><rect x="85.3282%" y="101" width="0.0429%" height="15" fill="rgb(224,200,8)" fg:x="1989" fg:w="1"/><text x="85.5782%" y="111.50"></text></g><g><title>`0x7FFB506C2BB4 (1 samples, 0.04%)</title><rect x="85.3282%" y="85" width="0.0429%" height="15" fill="rgb(217,61,36)" fg:x="1989" fg:w="1"/><text x="85.5782%" y="95.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::weight_node::WeightNode as model::node::Node&gt;::get_data (123 samples, 5.28%)</title><rect x="85.3282%" y="245" width="5.2767%" height="15" fill="rgb(206,35,45)" fg:x="1989" fg:w="123"/><text x="85.5782%" y="255.50">mnist-..</text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::plus (123 samples, 5.28%)</title><rect x="85.3282%" y="229" width="5.2767%" height="15" fill="rgb(217,65,33)" fg:x="1989" fg:w="123"/><text x="85.5782%" y="239.50">mnist-..</text></g><g><title>mnist-trainer.exe`model::data::Data::plus (123 samples, 5.28%)</title><rect x="85.3282%" y="213" width="5.2767%" height="15" fill="rgb(222,158,48)" fg:x="1989" fg:w="123"/><text x="85.5782%" y="223.50">mnist-..</text></g><g><title>mnist-trainer.exe`ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase (123 samples, 5.28%)</title><rect x="85.3282%" y="197" width="5.2767%" height="15" fill="rgb(254,2,54)" fg:x="1989" fg:w="123"/><text x="85.5782%" y="207.50">mnist-..</text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (123 samples, 5.28%)</title><rect x="85.3282%" y="181" width="5.2767%" height="15" fill="rgb(250,143,38)" fg:x="1989" fg:w="123"/><text x="85.5782%" y="191.50">mnist-..</text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (122 samples, 5.23%)</title><rect x="85.3711%" y="165" width="5.2338%" height="15" fill="rgb(248,25,0)" fg:x="1990" fg:w="122"/><text x="85.6211%" y="175.50">mnist-..</text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="90.6478%" y="165" width="0.0429%" height="15" fill="rgb(206,152,27)" fg:x="2113" fg:w="1"/><text x="90.8978%" y="175.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="90.6478%" y="149" width="0.0429%" height="15" fill="rgb(240,77,30)" fg:x="2113" fg:w="1"/><text x="90.8978%" y="159.50"></text></g><g><title>`0x7FFB5057005C (1 samples, 0.04%)</title><rect x="90.6478%" y="133" width="0.0429%" height="15" fill="rgb(231,5,3)" fg:x="2113" fg:w="1"/><text x="90.8978%" y="143.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::packing::pack_avx2 (114 samples, 4.89%)</title><rect x="90.7336%" y="149" width="4.8906%" height="15" fill="rgb(207,226,32)" fg:x="2115" fg:w="114"/><text x="90.9836%" y="159.50">mnist-..</text></g><g><title>mnist-trainer.exe`matrixmultiply::threading::RangeChunkParallel (64 samples, 2.75%)</title><rect x="95.6242%" y="149" width="2.7456%" height="15" fill="rgb(222,207,47)" fg:x="2229" fg:w="64"/><text x="95.8742%" y="159.50">mn..</text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::masked_kernel (63 samples, 2.70%)</title><rect x="95.6671%" y="133" width="2.7027%" height="15" fill="rgb(229,115,45)" fg:x="2230" fg:w="63"/><text x="95.9171%" y="143.50">mn..</text></g><g><title>mnist-trainer.exe`matrixmultiply::sgemm_kernel::kernel_target_fma (60 samples, 2.57%)</title><rect x="95.7958%" y="117" width="2.5740%" height="15" fill="rgb(224,191,6)" fg:x="2233" fg:w="60"/><text x="96.0458%" y="127.50">mn..</text></g><g><title>`0x7FFB505A5B10 (2 samples, 0.09%)</title><rect x="98.3698%" y="69" width="0.0858%" height="15" fill="rgb(230,227,24)" fg:x="2293" fg:w="2"/><text x="98.6198%" y="79.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::gemm_loop (182 samples, 7.81%)</title><rect x="90.6907%" y="165" width="7.8078%" height="15" fill="rgb(228,80,19)" fg:x="2114" fg:w="182"/><text x="90.9407%" y="175.50">mnist-train..</text></g><g><title>mnist-trainer.exe`std::alloc::__default_lib_allocator::__rdl_alloc (3 samples, 0.13%)</title><rect x="98.3698%" y="149" width="0.1287%" height="15" fill="rgb(247,229,0)" fg:x="2293" fg:w="3"/><text x="98.6198%" y="159.50"></text></g><g><title>mnist-trainer.exe`std::sys::alloc::windows::impl$0::alloc (3 samples, 0.13%)</title><rect x="98.3698%" y="133" width="0.1287%" height="15" fill="rgb(237,194,15)" fg:x="2293" fg:w="3"/><text x="98.6198%" y="143.50"></text></g><g><title>mnist-trainer.exe`std::sys::alloc::windows::allocate (3 samples, 0.13%)</title><rect x="98.3698%" y="117" width="0.1287%" height="15" fill="rgb(219,203,20)" fg:x="2293" fg:w="3"/><text x="98.6198%" y="127.50"></text></g><g><title>`0x7FFB5056F164 (3 samples, 0.13%)</title><rect x="98.3698%" y="101" width="0.1287%" height="15" fill="rgb(234,128,8)" fg:x="2293" fg:w="3"/><text x="98.6198%" y="111.50"></text></g><g><title>`0x7FFB5056F591 (3 samples, 0.13%)</title><rect x="98.3698%" y="85" width="0.1287%" height="15" fill="rgb(248,202,8)" fg:x="2293" fg:w="3"/><text x="98.6198%" y="95.50"></text></g><g><title>`0x7FFB505A6198 (1 samples, 0.04%)</title><rect x="98.4556%" y="69" width="0.0429%" height="15" fill="rgb(206,104,37)" fg:x="2295" fg:w="1"/><text x="98.7056%" y="79.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::matrix_multiply_node::MatrixMultiplyNode as model::node::Node&gt;::apply_operation (340 samples, 14.59%)</title><rect x="83.9554%" y="261" width="14.5860%" height="15" fill="rgb(223,8,27)" fg:x="1957" fg:w="340"/><text x="84.2054%" y="271.50">mnist-trainer.exe`&lt;mod..</text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::matmul (185 samples, 7.94%)</title><rect x="90.6049%" y="245" width="7.9365%" height="15" fill="rgb(216,217,28)" fg:x="2112" fg:w="185"/><text x="90.8549%" y="255.50">mnist-train..</text></g><g><title>mnist-trainer.exe`model::data::data_container::operations::matmul::ContainerMatMul::matmul_data_batch (185 samples, 7.94%)</title><rect x="90.6049%" y="229" width="7.9365%" height="15" fill="rgb(249,199,1)" fg:x="2112" fg:w="185"/><text x="90.8549%" y="239.50">mnist-train..</text></g><g><title>mnist-trainer.exe`model::data::Data::matmul (185 samples, 7.94%)</title><rect x="90.6049%" y="213" width="7.9365%" height="15" fill="rgb(240,85,17)" fg:x="2112" fg:w="185"/><text x="90.8549%" y="223.50">mnist-train..</text></g><g><title>mnist-trainer.exe`model::data::operations::matmul::DataMatMul::matmul_matrix_vector (185 samples, 7.94%)</title><rect x="90.6049%" y="197" width="7.9365%" height="15" fill="rgb(206,108,45)" fg:x="2112" fg:w="185"/><text x="90.8549%" y="207.50">mnist-train..</text></g><g><title>mnist-trainer.exe`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim (185 samples, 7.94%)</title><rect x="90.6049%" y="181" width="7.9365%" height="15" fill="rgb(245,210,41)" fg:x="2112" fg:w="185"/><text x="90.8549%" y="191.50">mnist-train..</text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::sgemm (1 samples, 0.04%)</title><rect x="98.4985%" y="165" width="0.0429%" height="15" fill="rgb(206,13,37)" fg:x="2296" fg:w="1"/><text x="98.7485%" y="175.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::multiply_node::MultiplyNode as model::node::Node&gt;::get_data (1 samples, 0.04%)</title><rect x="98.5414%" y="261" width="0.0429%" height="15" fill="rgb(250,61,18)" fg:x="2297" fg:w="1"/><text x="98.7914%" y="271.50"></text></g><g><title>mnist-trainer.exe`&lt;model::data::data_container::DataContainer as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="98.5414%" y="245" width="0.0429%" height="15" fill="rgb(235,172,48)" fg:x="2297" fg:w="1"/><text x="98.7914%" y="255.50"></text></g><g><title>mnist-trainer.exe`&lt;alloc::vec::Vec (1 samples, 0.04%)</title><rect x="98.5414%" y="229" width="0.0429%" height="15" fill="rgb(249,201,17)" fg:x="2297" fg:w="1"/><text x="98.7914%" y="239.50"></text></g><g><title>mnist-trainer.exe`std::sys::alloc::windows::process_heap_alloc (1 samples, 0.04%)</title><rect x="98.5414%" y="213" width="0.0429%" height="15" fill="rgb(219,208,6)" fg:x="2297" fg:w="1"/><text x="98.7914%" y="223.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::activation_node::ActivationNode as model::node::Node&gt;::apply_operation (344 samples, 14.76%)</title><rect x="83.8696%" y="293" width="14.7576%" height="15" fill="rgb(248,31,23)" fg:x="1955" fg:w="344"/><text x="84.1196%" y="303.50">mnist-trainer.exe`&lt;mode..</text></g><g><title>mnist-trainer.exe`&lt;model::node::types::add_node::AddNode as model::node::Node&gt;::apply_operation (342 samples, 14.67%)</title><rect x="83.9554%" y="277" width="14.6718%" height="15" fill="rgb(245,15,42)" fg:x="1957" fg:w="342"/><text x="84.2054%" y="287.50">mnist-trainer.exe`&lt;mod..</text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::plus (1 samples, 0.04%)</title><rect x="98.5843%" y="261" width="0.0429%" height="15" fill="rgb(222,217,39)" fg:x="2298" fg:w="1"/><text x="98.8343%" y="271.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::operations::plus::ContainerPlus::sum_batch_data (1 samples, 0.04%)</title><rect x="98.5843%" y="245" width="0.0429%" height="15" fill="rgb(210,219,27)" fg:x="2298" fg:w="1"/><text x="98.8343%" y="255.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::plus (1 samples, 0.04%)</title><rect x="98.5843%" y="229" width="0.0429%" height="15" fill="rgb(252,166,36)" fg:x="2298" fg:w="1"/><text x="98.8343%" y="239.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="98.5843%" y="213" width="0.0429%" height="15" fill="rgb(245,132,34)" fg:x="2298" fg:w="1"/><text x="98.8343%" y="223.50"></text></g><g><title>mnist-trainer.exe`ndarray::impl_constructors::&lt;impl ndarray::ArrayBase (1 samples, 0.04%)</title><rect x="98.5843%" y="197" width="0.0429%" height="15" fill="rgb(236,54,3)" fg:x="2298" fg:w="1"/><text x="98.8343%" y="207.50"></text></g><g><title>mnist-trainer.exe`ndarray::zip::Zip&lt; (1 samples, 0.04%)</title><rect x="98.5843%" y="181" width="0.0429%" height="15" fill="rgb(241,173,43)" fg:x="2298" fg:w="1"/><text x="98.8343%" y="191.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::weight_node::WeightNode as model::node::Node&gt;::get_data (1 samples, 0.04%)</title><rect x="98.6272%" y="293" width="0.0429%" height="15" fill="rgb(215,190,9)" fg:x="2299" fg:w="1"/><text x="98.8772%" y="303.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::plus (1 samples, 0.04%)</title><rect x="98.6272%" y="277" width="0.0429%" height="15" fill="rgb(242,101,16)" fg:x="2299" fg:w="1"/><text x="98.8772%" y="287.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::plus (1 samples, 0.04%)</title><rect x="98.6272%" y="261" width="0.0429%" height="15" fill="rgb(223,190,21)" fg:x="2299" fg:w="1"/><text x="98.8772%" y="271.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="98.6701%" y="213" width="0.0429%" height="15" fill="rgb(215,228,25)" fg:x="2300" fg:w="1"/><text x="98.9201%" y="223.50"></text></g><g><title>`0x7FFB5056F2A4 (1 samples, 0.04%)</title><rect x="98.6701%" y="197" width="0.0429%" height="15" fill="rgb(225,36,22)" fg:x="2300" fg:w="1"/><text x="98.9201%" y="207.50"></text></g><g><title>`0x7FFB5056FB77 (1 samples, 0.04%)</title><rect x="98.6701%" y="181" width="0.0429%" height="15" fill="rgb(251,106,46)" fg:x="2300" fg:w="1"/><text x="98.9201%" y="191.50"></text></g><g><title>`0x7FFB50574C1A (1 samples, 0.04%)</title><rect x="98.7130%" y="197" width="0.0429%" height="15" fill="rgb(208,90,1)" fg:x="2301" fg:w="1"/><text x="98.9630%" y="207.50"></text></g><g><title>`0x7FFB505F5960 (2 samples, 0.09%)</title><rect x="98.7130%" y="213" width="0.0858%" height="15" fill="rgb(243,10,4)" fg:x="2301" fg:w="2"/><text x="98.9630%" y="223.50"></text></g><g><title>`0x7FFB50574D41 (1 samples, 0.04%)</title><rect x="98.7559%" y="197" width="0.0429%" height="15" fill="rgb(212,137,27)" fg:x="2302" fg:w="1"/><text x="99.0059%" y="207.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::packing::pack_avx2 (2 samples, 0.09%)</title><rect x="98.8417%" y="197" width="0.0858%" height="15" fill="rgb(231,220,49)" fg:x="2304" fg:w="2"/><text x="99.0917%" y="207.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::activation_node::ActivationNode as model::node::Node&gt;::apply_operation (352 samples, 15.10%)</title><rect x="83.8696%" y="341" width="15.1008%" height="15" fill="rgb(237,96,20)" fg:x="1955" fg:w="352"/><text x="84.1196%" y="351.50">mnist-trainer.exe`&lt;mode..</text></g><g><title>mnist-trainer.exe`&lt;model::node::types::add_node::AddNode as model::node::Node&gt;::apply_operation (352 samples, 15.10%)</title><rect x="83.8696%" y="325" width="15.1008%" height="15" fill="rgb(239,229,30)" fg:x="1955" fg:w="352"/><text x="84.1196%" y="335.50">mnist-trainer.exe`&lt;mode..</text></g><g><title>mnist-trainer.exe`&lt;model::node::types::matrix_multiply_node::MatrixMultiplyNode as model::node::Node&gt;::apply_operation (352 samples, 15.10%)</title><rect x="83.8696%" y="309" width="15.1008%" height="15" fill="rgb(219,65,33)" fg:x="1955" fg:w="352"/><text x="84.1196%" y="319.50">mnist-trainer.exe`&lt;mode..</text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::matmul (7 samples, 0.30%)</title><rect x="98.6701%" y="293" width="0.3003%" height="15" fill="rgb(243,134,7)" fg:x="2300" fg:w="7"/><text x="98.9201%" y="303.50"></text></g><g><title>mnist-trainer.exe`model::data::data_container::operations::matmul::ContainerMatMul::matmul_data_batch (7 samples, 0.30%)</title><rect x="98.6701%" y="277" width="0.3003%" height="15" fill="rgb(216,177,54)" fg:x="2300" fg:w="7"/><text x="98.9201%" y="287.50"></text></g><g><title>mnist-trainer.exe`model::data::Data::matmul (7 samples, 0.30%)</title><rect x="98.6701%" y="261" width="0.3003%" height="15" fill="rgb(211,160,20)" fg:x="2300" fg:w="7"/><text x="98.9201%" y="271.50"></text></g><g><title>mnist-trainer.exe`model::data::operations::matmul::DataMatMul::matmul_matrix_vector (7 samples, 0.30%)</title><rect x="98.6701%" y="245" width="0.3003%" height="15" fill="rgb(239,85,39)" fg:x="2300" fg:w="7"/><text x="98.9201%" y="255.50"></text></g><g><title>mnist-trainer.exe`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim (7 samples, 0.30%)</title><rect x="98.6701%" y="229" width="0.3003%" height="15" fill="rgb(232,125,22)" fg:x="2300" fg:w="7"/><text x="98.9201%" y="239.50"></text></g><g><title>mnist-trainer.exe`matrixmultiply::gemm::gemm_loop (4 samples, 0.17%)</title><rect x="98.7988%" y="213" width="0.1716%" height="15" fill="rgb(244,57,34)" fg:x="2303" fg:w="4"/><text x="99.0488%" y="223.50"></text></g><g><title>mnist-trainer.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.04%)</title><rect x="98.9275%" y="197" width="0.0429%" height="15" fill="rgb(214,203,32)" fg:x="2306" fg:w="1"/><text x="99.1775%" y="207.50"></text></g><g><title>mnist-trainer.exe`std::sys::alloc::windows::impl$0::alloc (1 samples, 0.04%)</title><rect x="98.9275%" y="181" width="0.0429%" height="15" fill="rgb(207,58,43)" fg:x="2306" fg:w="1"/><text x="99.1775%" y="191.50"></text></g><g><title>mnist-trainer.exe`std::sys::alloc::windows::allocate (1 samples, 0.04%)</title><rect x="98.9275%" y="165" width="0.0429%" height="15" fill="rgb(215,193,15)" fg:x="2306" fg:w="1"/><text x="99.1775%" y="175.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="98.9275%" y="149" width="0.0429%" height="15" fill="rgb(232,15,44)" fg:x="2306" fg:w="1"/><text x="99.1775%" y="159.50"></text></g><g><title>`0x7FFB5056F591 (1 samples, 0.04%)</title><rect x="98.9275%" y="133" width="0.0429%" height="15" fill="rgb(212,3,48)" fg:x="2306" fg:w="1"/><text x="99.1775%" y="143.50"></text></g><g><title>`0x7FFB505A5E0A (1 samples, 0.04%)</title><rect x="98.9275%" y="117" width="0.0429%" height="15" fill="rgb(218,128,7)" fg:x="2306" fg:w="1"/><text x="99.1775%" y="127.50"></text></g><g><title>mnist-trainer.exe`&lt;model::node::types::add_node::AddNode as model::node::Node&gt;::apply_operation (358 samples, 15.36%)</title><rect x="83.6980%" y="389" width="15.3582%" height="15" fill="rgb(226,216,39)" fg:x="1951" fg:w="358"/><text x="83.9480%" y="399.50">mnist-trainer.exe`&lt;model..</text></g><g><title>mnist-trainer.exe`&lt;model::node::types::loss_node::LossNode as model::node::Node&gt;::apply_operation (358 samples, 15.36%)</title><rect x="83.6980%" y="373" width="15.3582%" height="15" fill="rgb(243,47,51)" fg:x="1951" fg:w="358"/><text x="83.9480%" y="383.50">mnist-trainer.exe`&lt;model..</text></g><g><title>mnist-trainer.exe`&lt;model::node::types::softmax_node::SoftmaxNode as model::node::Node&gt;::apply_operation (355 samples, 15.23%)</title><rect x="83.8267%" y="357" width="15.2295%" height="15" fill="rgb(241,183,40)" fg:x="1954" fg:w="355"/><text x="84.0767%" y="367.50">mnist-trainer.exe`&lt;mode..</text></g><g><title>mnist-trainer.exe`model::data::data_container::DataContainer::apply_function (2 samples, 0.09%)</title><rect x="98.9704%" y="341" width="0.0858%" height="15" fill="rgb(231,217,32)" fg:x="2307" fg:w="2"/><text x="99.2204%" y="351.50"></text></g><g><title>mnist-trainer.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (2 samples, 0.09%)</title><rect x="98.9704%" y="325" width="0.0858%" height="15" fill="rgb(229,61,38)" fg:x="2307" fg:w="2"/><text x="99.2204%" y="335.50"></text></g><g><title>mnist-trainer.exe`&lt;core::iter::adapters::map::Map (2 samples, 0.09%)</title><rect x="98.9704%" y="309" width="0.0858%" height="15" fill="rgb(225,210,5)" fg:x="2307" fg:w="2"/><text x="99.2204%" y="319.50"></text></g><g><title>mnist-trainer.exe`model::node::types::softmax_node::SoftmaxNode::softmax (2 samples, 0.09%)</title><rect x="98.9704%" y="293" width="0.0858%" height="15" fill="rgb(231,79,45)" fg:x="2307" fg:w="2"/><text x="99.2204%" y="303.50"></text></g><g><title>`0x7FFB4E247FBD (1 samples, 0.04%)</title><rect x="99.0133%" y="277" width="0.0429%" height="15" fill="rgb(224,100,7)" fg:x="2308" fg:w="1"/><text x="99.2633%" y="287.50"></text></g><g><title>mnist-trainer.exe`Unknown (2,221 samples, 95.28%)</title><rect x="3.8610%" y="421" width="95.2810%" height="15" fill="rgb(241,198,18)" fg:x="90" fg:w="2221"/><text x="4.1110%" y="431.50">mnist-trainer.exe`Unknown</text></g><g><title>mnist-trainer.exe`&lt;model::network::types::classifier::ClassifierNetwork as model::network::Network&gt;::train (2,099 samples, 90.05%)</title><rect x="9.0948%" y="405" width="90.0472%" height="15" fill="rgb(252,97,53)" fg:x="212" fg:w="2099"/><text x="9.3448%" y="415.50">mnist-trainer.exe`&lt;model::network::types::classifier::ClassifierNetwork as model::network::Network&gt;::train</text></g><g><title>mnist-trainer.exe`&lt;model::node::types::input_node::InputNode as model::node::Node&gt;::set_data (2 samples, 0.09%)</title><rect x="99.0562%" y="389" width="0.0858%" height="15" fill="rgb(220,88,7)" fg:x="2309" fg:w="2"/><text x="99.3062%" y="399.50"></text></g><g><title>`0x7FFB505F5960 (1 samples, 0.04%)</title><rect x="99.1420%" y="405" width="0.0429%" height="15" fill="rgb(213,176,14)" fg:x="2311" fg:w="1"/><text x="99.3920%" y="415.50"></text></g><g><title>`0x7FFB50575578 (1 samples, 0.04%)</title><rect x="99.1420%" y="389" width="0.0429%" height="15" fill="rgb(246,73,7)" fg:x="2311" fg:w="1"/><text x="99.3920%" y="399.50"></text></g><g><title>`0x7FFB505E7FAF (1 samples, 0.04%)</title><rect x="99.1420%" y="373" width="0.0429%" height="15" fill="rgb(245,64,36)" fg:x="2311" fg:w="1"/><text x="99.3920%" y="383.50"></text></g><g><title>`0x7FFB506C2C74 (1 samples, 0.04%)</title><rect x="99.1420%" y="357" width="0.0429%" height="15" fill="rgb(245,80,10)" fg:x="2311" fg:w="1"/><text x="99.3920%" y="367.50"></text></g><g><title>`0x7FFB3F2C0458 (1 samples, 0.04%)</title><rect x="99.2707%" y="341" width="0.0429%" height="15" fill="rgb(232,107,50)" fg:x="2314" fg:w="1"/><text x="99.5207%" y="351.50"></text></g><g><title>`0x7FFB3F2C0483 (2 samples, 0.09%)</title><rect x="99.3136%" y="341" width="0.0858%" height="15" fill="rgb(253,3,0)" fg:x="2315" fg:w="2"/><text x="99.5636%" y="351.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::RawVecInner (1 samples, 0.04%)</title><rect x="99.3994%" y="341" width="0.0429%" height="15" fill="rgb(212,99,53)" fg:x="2317" fg:w="1"/><text x="99.6494%" y="351.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="99.3994%" y="325" width="0.0429%" height="15" fill="rgb(249,111,54)" fg:x="2317" fg:w="1"/><text x="99.6494%" y="335.50"></text></g><g><title>`0x7FFB505A8F8D (1 samples, 0.04%)</title><rect x="99.3994%" y="309" width="0.0429%" height="15" fill="rgb(249,55,30)" fg:x="2317" fg:w="1"/><text x="99.6494%" y="319.50"></text></g><g><title>`0x7FFB505A9235 (1 samples, 0.04%)</title><rect x="99.3994%" y="293" width="0.0429%" height="15" fill="rgb(237,47,42)" fg:x="2317" fg:w="1"/><text x="99.6494%" y="303.50"></text></g><g><title>`0x7FFB505AA07D (1 samples, 0.04%)</title><rect x="99.3994%" y="277" width="0.0429%" height="15" fill="rgb(211,20,18)" fg:x="2317" fg:w="1"/><text x="99.6494%" y="287.50"></text></g><g><title>`0x7FFB5056F164 (1 samples, 0.04%)</title><rect x="99.3994%" y="261" width="0.0429%" height="15" fill="rgb(231,203,46)" fg:x="2317" fg:w="1"/><text x="99.6494%" y="271.50"></text></g><g><title>`0x7FFB5056F591 (1 samples, 0.04%)</title><rect x="99.3994%" y="245" width="0.0429%" height="15" fill="rgb(237,142,3)" fg:x="2317" fg:w="1"/><text x="99.6494%" y="255.50"></text></g><g><title>`0x7FFB505A5B10 (1 samples, 0.04%)</title><rect x="99.3994%" y="229" width="0.0429%" height="15" fill="rgb(241,107,1)" fg:x="2317" fg:w="1"/><text x="99.6494%" y="239.50"></text></g><g><title>mnist-trainer.exe`memcpy (1 samples, 0.04%)</title><rect x="99.4423%" y="341" width="0.0429%" height="15" fill="rgb(229,83,13)" fg:x="2318" fg:w="1"/><text x="99.6923%" y="351.50"></text></g><g><title>mnist-trainer.exe`model::network::config_types::_:: (15 samples, 0.64%)</title><rect x="99.1849%" y="405" width="0.6435%" height="15" fill="rgb(241,91,40)" fg:x="2312" fg:w="15"/><text x="99.4349%" y="415.50"></text></g><g><title>mnist-trainer.exe`serde::ser::SerializeMap::serialize_entry (15 samples, 0.64%)</title><rect x="99.1849%" y="389" width="0.6435%" height="15" fill="rgb(225,3,45)" fg:x="2312" fg:w="15"/><text x="99.4349%" y="399.50"></text></g><g><title>mnist-trainer.exe`model::network::config_types::unit_params::_:: (14 samples, 0.60%)</title><rect x="99.2278%" y="373" width="0.6006%" height="15" fill="rgb(244,223,14)" fg:x="2313" fg:w="14"/><text x="99.4778%" y="383.50"></text></g><g><title>mnist-trainer.exe`serde::ser::SerializeMap::serialize_entry (14 samples, 0.60%)</title><rect x="99.2278%" y="357" width="0.6006%" height="15" fill="rgb(224,124,37)" fg:x="2313" fg:w="14"/><text x="99.4778%" y="367.50"></text></g><g><title>mnist-trainer.exe`ryu::pretty::format32 (8 samples, 0.34%)</title><rect x="99.4852%" y="341" width="0.3432%" height="15" fill="rgb(251,171,30)" fg:x="2319" fg:w="8"/><text x="99.7352%" y="351.50"></text></g><g><title>mnist-trainer.exe`core::result::impl$27::branch (1 samples, 0.04%)</title><rect x="99.8284%" y="389" width="0.0429%" height="15" fill="rgb(236,46,54)" fg:x="2327" fg:w="1"/><text x="100.0784%" y="399.50"></text></g><g><title>mnist-trainer.exe`std::fs::OpenOptions::_open (1 samples, 0.04%)</title><rect x="99.8284%" y="373" width="0.0429%" height="15" fill="rgb(245,213,5)" fg:x="2327" fg:w="1"/><text x="100.0784%" y="383.50"></text></g><g><title>mnist-trainer.exe`std::sys::fs::windows::File::open (1 samples, 0.04%)</title><rect x="99.8284%" y="357" width="0.0429%" height="15" fill="rgb(230,144,27)" fg:x="2327" fg:w="1"/><text x="100.0784%" y="367.50"></text></g><g><title>mnist-trainer.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="99.8284%" y="341" width="0.0429%" height="15" fill="rgb(220,86,6)" fg:x="2327" fg:w="1"/><text x="100.0784%" y="351.50"></text></g><g><title>mnist-trainer.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="99.8284%" y="325" width="0.0429%" height="15" fill="rgb(240,20,13)" fg:x="2327" fg:w="1"/><text x="100.0784%" y="335.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.04%)</title><rect x="99.8284%" y="309" width="0.0429%" height="15" fill="rgb(217,89,34)" fg:x="2327" fg:w="1"/><text x="100.0784%" y="319.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.04%)</title><rect x="99.8284%" y="293" width="0.0429%" height="15" fill="rgb(229,13,5)" fg:x="2327" fg:w="1"/><text x="100.0784%" y="303.50"></text></g><g><title>mnist-trainer.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.04%)</title><rect x="99.8284%" y="277" width="0.0429%" height="15" fill="rgb(244,67,35)" fg:x="2327" fg:w="1"/><text x="100.0784%" y="287.50"></text></g><g><title>mnist-trainer.exe`std::sys::fs::windows::File::open_native (1 samples, 0.04%)</title><rect x="99.8284%" y="261" width="0.0429%" height="15" fill="rgb(221,40,2)" fg:x="2327" fg:w="1"/><text x="100.0784%" y="271.50"></text></g><g><title>mnist-trainer.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.04%)</title><rect x="99.8284%" y="245" width="0.0429%" height="15" fill="rgb(237,157,21)" fg:x="2327" fg:w="1"/><text x="100.0784%" y="255.50"></text></g><g><title>mnist-trainer.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.04%)</title><rect x="99.8284%" y="229" width="0.0429%" height="15" fill="rgb(222,94,11)" fg:x="2327" fg:w="1"/><text x="100.0784%" y="239.50"></text></g><g><title>`0x7FFB4DE16395 (1 samples, 0.04%)</title><rect x="99.8284%" y="213" width="0.0429%" height="15" fill="rgb(249,113,6)" fg:x="2327" fg:w="1"/><text x="100.0784%" y="223.50"></text></g><g><title>`0x7FFB4DE61917 (1 samples, 0.04%)</title><rect x="99.8284%" y="197" width="0.0429%" height="15" fill="rgb(238,137,36)" fg:x="2327" fg:w="1"/><text x="100.0784%" y="207.50"></text></g><g><title>`0x7FFB506C3354 (1 samples, 0.04%)</title><rect x="99.8284%" y="181" width="0.0429%" height="15" fill="rgb(210,102,26)" fg:x="2327" fg:w="1"/><text x="100.0784%" y="191.50"></text></g><g><title>mnist-trainer.exe`model::network::types::classifier::config::ClassifierConfig::save_to_file (18 samples, 0.77%)</title><rect x="99.1420%" y="421" width="0.7722%" height="15" fill="rgb(218,30,30)" fg:x="2311" fg:w="18"/><text x="99.3920%" y="431.50"></text></g><g><title>mnist-trainer.exe`std::fs::write::inner (2 samples, 0.09%)</title><rect x="99.8284%" y="405" width="0.0858%" height="15" fill="rgb(214,67,26)" fg:x="2327" fg:w="2"/><text x="100.0784%" y="415.50"></text></g><g><title>mnist-trainer.exe`std::io::Write::write_all (1 samples, 0.04%)</title><rect x="99.8713%" y="389" width="0.0429%" height="15" fill="rgb(251,9,53)" fg:x="2328" fg:w="1"/><text x="100.1213%" y="399.50"></text></g><g><title>mnist-trainer.exe`std::sys::pal::windows::handle::Handle::synchronous_write (1 samples, 0.04%)</title><rect x="99.8713%" y="373" width="0.0429%" height="15" fill="rgb(228,204,25)" fg:x="2328" fg:w="1"/><text x="100.1213%" y="383.50"></text></g><g><title>`0x7FFB506C29B4 (1 samples, 0.04%)</title><rect x="99.8713%" y="357" width="0.0429%" height="15" fill="rgb(207,153,8)" fg:x="2328" fg:w="1"/><text x="100.1213%" y="367.50"></text></g><g><title>mnist-trainer.exe`std::sys::stdio::windows::get_handle (1 samples, 0.04%)</title><rect x="99.9142%" y="181" width="0.0429%" height="15" fill="rgb(242,9,16)" fg:x="2329" fg:w="1"/><text x="100.1642%" y="191.50"></text></g><g><title>`0x7FFB4F6EFB30 (1 samples, 0.04%)</title><rect x="99.9142%" y="165" width="0.0429%" height="15" fill="rgb(217,211,10)" fg:x="2329" fg:w="1"/><text x="100.1642%" y="175.50"></text></g><g><title>all (2,331 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(219,228,52)" fg:x="0" fg:w="2331"/><text x="0.2500%" y="671.50"></text></g><g><title>`0x7FFB5059C34C (2,290 samples, 98.24%)</title><rect x="1.7589%" y="645" width="98.2411%" height="15" fill="rgb(231,92,29)" fg:x="41" fg:w="2290"/><text x="2.0089%" y="655.50">`0x7FFB5059C34C</text></g><g><title>`0x7FFB4F6DE8D7 (2,290 samples, 98.24%)</title><rect x="1.7589%" y="629" width="98.2411%" height="15" fill="rgb(232,8,23)" fg:x="41" fg:w="2290"/><text x="2.0089%" y="639.50">`0x7FFB4F6DE8D7</text></g><g><title>mnist-trainer.exe`__scrt_common_main_seh() (2,284 samples, 97.98%)</title><rect x="2.0163%" y="613" width="97.9837%" height="15" fill="rgb(216,211,34)" fg:x="47" fg:w="2284"/><text x="2.2663%" y="623.50">mnist-trainer.exe`__scrt_common_main_seh()</text></g><g><title>mnist-trainer.exe`invoke_main() (2,278 samples, 97.73%)</title><rect x="2.2737%" y="597" width="97.7263%" height="15" fill="rgb(236,151,0)" fg:x="53" fg:w="2278"/><text x="2.5237%" y="607.50">mnist-trainer.exe`invoke_main()</text></g><g><title>mnist-trainer.exe`main (2,278 samples, 97.73%)</title><rect x="2.2737%" y="581" width="97.7263%" height="15" fill="rgb(209,168,3)" fg:x="53" fg:w="2278"/><text x="2.5237%" y="591.50">mnist-trainer.exe`main</text></g><g><title>mnist-trainer.exe`std::rt::lang_start_internal (2,278 samples, 97.73%)</title><rect x="2.2737%" y="565" width="97.7263%" height="15" fill="rgb(208,129,28)" fg:x="53" fg:w="2278"/><text x="2.5237%" y="575.50">mnist-trainer.exe`std::rt::lang_start_internal</text></g><g><title>mnist-trainer.exe`std::panic::catch_unwind (2,278 samples, 97.73%)</title><rect x="2.2737%" y="549" width="97.7263%" height="15" fill="rgb(229,78,22)" fg:x="53" fg:w="2278"/><text x="2.5237%" y="559.50">mnist-trainer.exe`std::panic::catch_unwind</text></g><g><title>mnist-trainer.exe`std::panicking::catch_unwind (2,278 samples, 97.73%)</title><rect x="2.2737%" y="533" width="97.7263%" height="15" fill="rgb(228,187,13)" fg:x="53" fg:w="2278"/><text x="2.5237%" y="543.50">mnist-trainer.exe`std::panicking::catch_unwind</text></g><g><title>mnist-trainer.exe`std::panicking::catch_unwind::do_call (2,278 samples, 97.73%)</title><rect x="2.2737%" y="517" width="97.7263%" height="15" fill="rgb(240,119,24)" fg:x="53" fg:w="2278"/><text x="2.5237%" y="527.50">mnist-trainer.exe`std::panicking::catch_unwind::do_call</text></g><g><title>mnist-trainer.exe`std::rt::lang_start_internal::closure$0 (2,278 samples, 97.73%)</title><rect x="2.2737%" y="501" width="97.7263%" height="15" fill="rgb(209,194,42)" fg:x="53" fg:w="2278"/><text x="2.5237%" y="511.50">mnist-trainer.exe`std::rt::lang_start_internal::closure$0</text></g><g><title>`0x7FF7780C100C (2,278 samples, 97.73%)</title><rect x="2.2737%" y="485" width="97.7263%" height="15" fill="rgb(247,200,46)" fg:x="53" fg:w="2278"/><text x="2.5237%" y="495.50">`0x7FF7780C100C</text></g><g><title>mnist-trainer.exe`Unknown (2,278 samples, 97.73%)</title><rect x="2.2737%" y="469" width="97.7263%" height="15" fill="rgb(218,76,16)" fg:x="53" fg:w="2278"/><text x="2.5237%" y="479.50">mnist-trainer.exe`Unknown</text></g><g><title>mnist-trainer.exe`mnist_trainer::train_dataset (2,278 samples, 97.73%)</title><rect x="2.2737%" y="453" width="97.7263%" height="15" fill="rgb(225,21,48)" fg:x="53" fg:w="2278"/><text x="2.5237%" y="463.50">mnist-trainer.exe`mnist_trainer::train_dataset</text></g><g><title>mnist-trainer.exe`model::trainer::SupervisedTrainer (2,241 samples, 96.14%)</title><rect x="3.8610%" y="437" width="96.1390%" height="15" fill="rgb(239,223,50)" fg:x="90" fg:w="2241"/><text x="4.1110%" y="447.50">mnist-trainer.exe`model::trainer::SupervisedTrainer</text></g><g><title>mnist-trainer.exe`std::io::stdio::_print (2 samples, 0.09%)</title><rect x="99.9142%" y="421" width="0.0858%" height="15" fill="rgb(244,45,21)" fg:x="2329" fg:w="2"/><text x="100.1642%" y="431.50"></text></g><g><title>mnist-trainer.exe`std::io::stdio::print_to (2 samples, 0.09%)</title><rect x="99.9142%" y="405" width="0.0858%" height="15" fill="rgb(232,33,43)" fg:x="2329" fg:w="2"/><text x="100.1642%" y="415.50"></text></g><g><title>mnist-trainer.exe`std::io::stdio::impl$16::write_fmt (2 samples, 0.09%)</title><rect x="99.9142%" y="389" width="0.0858%" height="15" fill="rgb(209,8,3)" fg:x="2329" fg:w="2"/><text x="100.1642%" y="399.50"></text></g><g><title>mnist-trainer.exe`std::io::Write::write_fmt (2 samples, 0.09%)</title><rect x="99.9142%" y="373" width="0.0858%" height="15" fill="rgb(214,25,53)" fg:x="2329" fg:w="2"/><text x="100.1642%" y="383.50"></text></g><g><title>mnist-trainer.exe`std::io::default_write_fmt (2 samples, 0.09%)</title><rect x="99.9142%" y="357" width="0.0858%" height="15" fill="rgb(254,186,54)" fg:x="2329" fg:w="2"/><text x="100.1642%" y="367.50"></text></g><g><title>mnist-trainer.exe`core::fmt::write (2 samples, 0.09%)</title><rect x="99.9142%" y="341" width="0.0858%" height="15" fill="rgb(208,174,49)" fg:x="2329" fg:w="2"/><text x="100.1642%" y="351.50"></text></g><g><title>mnist-trainer.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (2 samples, 0.09%)</title><rect x="99.9142%" y="325" width="0.0858%" height="15" fill="rgb(233,191,51)" fg:x="2329" fg:w="2"/><text x="100.1642%" y="335.50"></text></g><g><title>mnist-trainer.exe`std::io::stdio::impl$19::write_all (2 samples, 0.09%)</title><rect x="99.9142%" y="309" width="0.0858%" height="15" fill="rgb(222,134,10)" fg:x="2329" fg:w="2"/><text x="100.1642%" y="319.50"></text></g><g><title>mnist-trainer.exe`std::sync::reentrant_lock::impl$11::deref (2 samples, 0.09%)</title><rect x="99.9142%" y="293" width="0.0858%" height="15" fill="rgb(230,226,20)" fg:x="2329" fg:w="2"/><text x="100.1642%" y="303.50"></text></g><g><title>mnist-trainer.exe`std::io::buffered::linewritershim::impl$1::write_all (2 samples, 0.09%)</title><rect x="99.9142%" y="277" width="0.0858%" height="15" fill="rgb(251,111,25)" fg:x="2329" fg:w="2"/><text x="100.1642%" y="287.50"></text></g><g><title>mnist-trainer.exe`core::result::impl$27::branch (2 samples, 0.09%)</title><rect x="99.9142%" y="261" width="0.0858%" height="15" fill="rgb(224,40,46)" fg:x="2329" fg:w="2"/><text x="100.1642%" y="271.50"></text></g><g><title>mnist-trainer.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (2 samples, 0.09%)</title><rect x="99.9142%" y="245" width="0.0858%" height="15" fill="rgb(236,108,47)" fg:x="2329" fg:w="2"/><text x="100.1642%" y="255.50"></text></g><g><title>mnist-trainer.exe`std::io::stdio::impl$1::write (2 samples, 0.09%)</title><rect x="99.9142%" y="229" width="0.0858%" height="15" fill="rgb(234,93,0)" fg:x="2329" fg:w="2"/><text x="100.1642%" y="239.50"></text></g><g><title>mnist-trainer.exe`std::io::stdio::handle_ebadf (2 samples, 0.09%)</title><rect x="99.9142%" y="213" width="0.0858%" height="15" fill="rgb(224,213,32)" fg:x="2329" fg:w="2"/><text x="100.1642%" y="223.50"></text></g><g><title>mnist-trainer.exe`std::sys::stdio::windows::write (2 samples, 0.09%)</title><rect x="99.9142%" y="197" width="0.0858%" height="15" fill="rgb(251,11,48)" fg:x="2329" fg:w="2"/><text x="100.1642%" y="207.50"></text></g><g><title>mnist-trainer.exe`std::sys::stdio::windows::write_console_utf16 (1 samples, 0.04%)</title><rect x="99.9571%" y="181" width="0.0429%" height="15" fill="rgb(236,173,5)" fg:x="2330" fg:w="1"/><text x="100.2071%" y="191.50"></text></g><g><title>mnist-trainer.exe`std::sys::stdio::windows::write_valid_utf8_to_console (1 samples, 0.04%)</title><rect x="99.9571%" y="165" width="0.0429%" height="15" fill="rgb(230,95,12)" fg:x="2330" fg:w="1"/><text x="100.2071%" y="175.50"></text></g><g><title>mnist-trainer.exe`std::sys::stdio::windows::write_u16s (1 samples, 0.04%)</title><rect x="99.9571%" y="149" width="0.0429%" height="15" fill="rgb(232,209,1)" fg:x="2330" fg:w="1"/><text x="100.2071%" y="159.50"></text></g><g><title>mnist-trainer.exe`std::sys::pal::windows::cvt (1 samples, 0.04%)</title><rect x="99.9571%" y="133" width="0.0429%" height="15" fill="rgb(232,6,1)" fg:x="2330" fg:w="1"/><text x="100.2071%" y="143.50"></text></g><g><title>mnist-trainer.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.04%)</title><rect x="99.9571%" y="117" width="0.0429%" height="15" fill="rgb(210,224,50)" fg:x="2330" fg:w="1"/><text x="100.2071%" y="127.50"></text></g><g><title>`0x7FFB4DEA448E (1 samples, 0.04%)</title><rect x="99.9571%" y="101" width="0.0429%" height="15" fill="rgb(228,127,35)" fg:x="2330" fg:w="1"/><text x="100.2071%" y="111.50"></text></g><g><title>`0x7FFB4DEA45CC (1 samples, 0.04%)</title><rect x="99.9571%" y="85" width="0.0429%" height="15" fill="rgb(245,102,45)" fg:x="2330" fg:w="1"/><text x="100.2071%" y="95.50"></text></g><g><title>`0x7FFB506C2994 (1 samples, 0.04%)</title><rect x="99.9571%" y="69" width="0.0429%" height="15" fill="rgb(214,1,49)" fg:x="2330" fg:w="1"/><text x="100.2071%" y="79.50"></text></g></svg></svg>